(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1204382,      21871]
NotebookOptionsPosition[   1194538,      21695]
NotebookOutlinePosition[   1194967,      21712]
CellTagsIndexPosition[   1194924,      21709]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Pandemic Journaling Project Analysis", "Title",
 CellChangeTimes->{{3.8243692621361113`*^9, 
  3.8243692690344563`*^9}},ExpressionUUID->"e6992e91-61ac-4548-98e9-\
ce5dfbb43626"],

Cell[CellGroupData[{

Cell["Import text", "Section",
 CellChangeTimes->{{3.824369282314238*^9, 
  3.8243692854921618`*^9}},ExpressionUUID->"bd317b5c-bec8-4b14-9612-\
31b7504b4d8b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PJPSource", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/peternilsson/Documents/Deerfield/English IV/Digital \
Humanities/2020 Full Year/8 Project 6/PJP - Main question.txt\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.824369295683836*^9, 3.824369318996779*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ada129a1-cf61-4ebd-ab18-ffe4cd0fc49f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PJP", "=", 
   RowBox[{"ToLowerCase", "@", "PJPSource"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.824369389830797*^9, 3.824369405108921*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"2ae247eb-52ee-401a-9625-18f7f9504c19"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PJPWords", "=", 
   RowBox[{"TextWords", "[", 
    RowBox[{"ToLowerCase", "@", "PJPSource"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.824369416816311*^9, 3.824369442155532*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"504582f7-f8c3-453c-a1a7-f75169b274d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PJPSentences", "=", 
   RowBox[{"TextSentences", "[", 
    RowBox[{"ToLowerCase", "@", "PJPSource"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.824369450664782*^9, 3.824369471035883*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"0beda5d4-7a16-43a6-8289-0916fbcb0d59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "@", "PJP"}]], "Input",
 CellChangeTimes->{{3.8243695278359528`*^9, 3.824369530834227*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e18798d3-33eb-4630-90bf-195c41947b57"],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{3.8243695315427027`*^9, 3.824369942127861*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"160c5e1c-9b1d-4507-805a-22a1f424e16f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "@", "PJPWords"}]], "Input",
 CellChangeTimes->{{3.824369538294759*^9, 3.8243695426435537`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"bd555783-8381-4a20-891e-83eb3486b629"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.8243695431401653`*^9, 3.824369942156333*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"71a98f74-89b3-487d-9729-8856a2b7a651"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "@", "PJPSentences"}]], "Input",
 CellChangeTimes->{{3.824369572763756*^9, 3.824369591510211*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"ed5c6968-eacc-4764-b1c9-794a9be594c7"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{{3.824369583519329*^9, 3.824369592210424*^9}, 
   3.824369942163855*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"98af2a80-5b0a-4e92-9602-9d5d71dbd799"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting Started", "Section",
 CellChangeTimes->{{3.8243696283424377`*^9, 
  3.824369630068163*^9}},ExpressionUUID->"cb137065-1ae2-4ec2-9315-\
c38af3da25fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCount", "[", "PJP", "]"}]], "Input",
 CellChangeTimes->{{3.824369632040731*^9, 3.824369634525454*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"702f6aa9-1cb2-4538-a8b6-9093d84542ca"],

Cell[BoxData["124635"], "Output",
 CellChangeTimes->{3.824369638970234*^9, 3.824369946827877*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"5a58e3c4-3ea9-4d35-ad0b-878eb54e3eca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCounts", "@", "PJP"}]], "Input",
 CellChangeTimes->{{3.8243696420226192`*^9, 3.824369645296589*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"90599ba3-3a0d-42d5-b5c1-1c86d35e5750"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"the\"\>", "\[Rule]", "5431"}], ",", 
           RowBox[{"\<\"and\"\>", "\[Rule]", "3991"}], ",", 
           RowBox[{"\<\"to\"\>", "\[Rule]", "3952"}], ",", 
           RowBox[{"\<\"i\"\>", "\[Rule]", "3732"}], ",", 
           RowBox[{"\<\"a\"\>", "\[Rule]", "2701"}], ",", 
           RowBox[{"\<\"of\"\>", "\[Rule]", "2601"}], ",", 
           RowBox[{"\<\"in\"\>", "\[Rule]", "2135"}], ",", 
           RowBox[{"\<\"my\"\>", "\[Rule]", "1696"}], ",", 
           RowBox[{"\<\"that\"\>", "\[Rule]", "1540"}], ",", 
           RowBox[{"\<\"is\"\>", "\[Rule]", "1415"}], ",", 
           RowBox[{"\<\"it\"\>", "\[Rule]", "1323"}], ",", 
           RowBox[{"\<\"for\"\>", "\[Rule]", "1231"}], ",", 
           RowBox[{"\<\"we\"\>", "\[Rule]", "1085"}], ",", 
           RowBox[{"\<\"this\"\>", "\[Rule]", "1058"}], ",", 
           RowBox[{"\<\"have\"\>", "\[Rule]", "1045"}], ",", 
           RowBox[{"\<\"with\"\>", "\[Rule]", "987"}], ",", 
           RowBox[{"\<\"was\"\>", "\[Rule]", "978"}], ",", 
           TemplateBox[{"10680"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"regresar\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"spanish\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"pakistan\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"paperweight\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"figurines\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"paraphernalia\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"catalyst\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"cosmic\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"minneapolis\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"insidious\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"northeast\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"hip\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"killer\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"onlookers\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"intervene\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"re-entry\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"87\"\>", "\[Rule]", "1"}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 16036513112279889770, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 16036513112279889770, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 16036513112279889770, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16036513112279889770 === $SessionID, 
   Out[9], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.8243696505459003`*^9, 3.824369951493635*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"2f68e749-3788-4ed0-bd34-91fbb741185b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCounts", "@", 
  RowBox[{"DeleteStopwords", "@", "PJP"}]}]], "Input",
 CellChangeTimes->{{3.824369670856678*^9, 3.8243696766758432`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"f8682ff0-e099-417a-b949-41d376a1d306"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"people\"\>", "\[Rule]", "479"}], ",", 
           RowBox[{"\<\"just\"\>", "\[Rule]", "413"}], ",", 
           RowBox[{"\<\"like\"\>", "\[Rule]", "403"}], ",", 
           RowBox[{"\<\"time\"\>", "\[Rule]", "381"}], ",", 
           RowBox[{"\<\"pandemic\"\>", "\[Rule]", "368"}], ",", 
           RowBox[{"\<\"week\"\>", "\[Rule]", "324"}], ",", 
           RowBox[{"\<\"covid\"\>", "\[Rule]", "312"}], ",", 
           RowBox[{"\<\"home\"\>", "\[Rule]", "286"}], ",", 
           RowBox[{"\<\"day\"\>", "\[Rule]", "280"}], ",", 
           RowBox[{"\<\"really\"\>", "\[Rule]", "249"}], ",", 
           RowBox[{"\<\"feel\"\>", "\[Rule]", "238"}], ",", 
           RowBox[{"\<\"going\"\>", "\[Rule]", "232"}], ",", 
           RowBox[{"\<\"work\"\>", "\[Rule]", "224"}], ",", 
           RowBox[{"\<\"family\"\>", "\[Rule]", "205"}], ",", 
           RowBox[{"\<\"new\"\>", "\[Rule]", "189"}], ",", 
           RowBox[{"\<\"know\"\>", "\[Rule]", "184"}], ",", 
           RowBox[{"\<\"year\"\>", "\[Rule]", "180"}], ",", 
           TemplateBox[{"10356"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"regresar\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"spanish\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"pakistan\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"paperweight\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"figurines\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"paraphernalia\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"catalyst\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"cosmic\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"minneapolis\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"insidious\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"northeast\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"hip\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"killer\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"onlookers\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"intervene\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"re-entry\"\>", "\[Rule]", "1"}], ",", 
           RowBox[{"\<\"87\"\>", "\[Rule]", "1"}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 16036513112279889770, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 16036513112279889770, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 16036513112279889770, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16036513112279889770 === $SessionID, 
   Out[10], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.8243696800705233`*^9, 3.8243699549816236`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"d4fe3cc2-6152-423a-b01a-5db34913f5c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"WordCounts", "@", 
   RowBox[{"DeleteStopwords", "@", "PJP"}]}]}]], "Input",
 CellChangeTimes->{{3.824369701067954*^9, 3.824369715219605*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"d7f9ac9f-5a48-4390-9059-e70ce45d993c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          5456942639005266290088096898570320890730637482769635832672], 
         "InitialShape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
             TypeSystem`PackageScope`AtomShape[34]]], 20, 
           DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], 10390], "Meta" -> 
         Association["ID" -> 169569830670221], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
             TypeSystem`PackageScope`AtomShape[34]]], 20, 
           DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], 10390], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 20, 
         "DisplayedColumnCount" -> 1, "DataRowCount" -> 10390, 
         "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["people", 
                    Style[
                    "people", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["people"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["people"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["479"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["people"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["just", 
                    Style[
                    "just", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["just"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["just"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["413"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["just"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["like", 
                    Style[
                    "like", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["like"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["like"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["403"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["like"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["time", 
                    Style[
                    "time", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["time"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["381"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["pandemic", 
                    Style[
                    "pandemic", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pandemic"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["pandemic"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["368"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["pandemic"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["week", 
                    Style[
                    "week", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["week"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["week"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["324"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["week"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["covid", 
                    Style[
                    "covid", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["covid"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["covid"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["312"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["covid"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["home", 
                    Style[
                    "home", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["home"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["home"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["286"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["home"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["day", 
                    Style[
                    "day", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["day"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["day"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["280"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["day"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["really", 
                    Style[
                    "really", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["really"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["really"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["249"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["really"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["feel", 
                    Style[
                    "feel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["feel"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["feel"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["238"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["feel"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["going", 
                    Style[
                    "going", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["going"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["going"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["232"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["going"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["work", 
                    Style[
                    "work", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["work"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["work"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["224"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["work"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["family", 
                    Style[
                    "family", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["family"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["family"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["205"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["family"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["new", 
                    Style[
                    "new", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["new"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["new"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["189"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["new"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["know", 
                    Style[
                    "know", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["know"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["know"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["184"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["know"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["year", 
                    Style[
                    "year", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["year"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["year"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["180"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["year"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["life", 
                    Style[
                    "life", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["life"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["life"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["178"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["life"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["think", 
                    Style[
                    "think", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["think"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["think"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["177"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["think"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["friends", 
                    Style[
                    "friends", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["friends"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["friends"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["174"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["friends"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 10390, 1], {1, 10390 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 10390, 1], {1, 10390 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    10390, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    10390, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 10390, 1], {1, 10390 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 10390, 1], {1, 10390 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {251., {277.634033203125, 283.365966796875}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {251., {277.634033203125, 283.365966796875}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 5456942639005266290088096898570320890730637482769635832672,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellEditDuplicate->True,
 CellChangeTimes->{3.824369719055997*^9, 3.824369958872245*^9, 
  3.8243728448664427`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"f03a098f-f1db-4d27-a879-726e3f066bf2"]
}, Open  ]],

Cell[TextData[StyleBox["Reflection Question: What words are interesting? What \
do they suggest?",
 FontSlant->"Italic"]], "Subsubsection",
 CellChangeTimes->{{3.824369728657935*^9, 3.824369742246242*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a07197f5-be98-4ce5-a590-6b974758eb23"],

Cell[CellGroupData[{

Cell["Create bigrams", "Subsubsection",
 CellChangeTimes->{{3.824369831684285*^9, 
  3.824369833660993*^9}},ExpressionUUID->"76910e5a-6dfe-41d6-85ff-\
43c1fb72e577"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"WordCounts", "[", 
   RowBox[{
    RowBox[{"DeleteStopwords", "@", "PJP"}], ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.824369846754591*^9, 3.824369886737718*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"07e2bbe4-a6f8-4f74-962b-0c08e7a8e09a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          5456942639005266290088096898570320890693743994622087875360], 
         "InitialShape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[{
                TypeSystem`PackageScope`AtomShape[115.20000000000002`], 
                TypeSystem`PackageScope`AtomShape[124.80000000000001`]}], 
              DirectedInfinity[1], 2, {All}], 
             TypeSystem`PackageScope`AtomShape[34]]], 20, 
           DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Tuple[{
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String]}], 
           TypeSystem`Atom[Integer], 42427], "Meta" -> 
         Association["ID" -> 169509701125223], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[{
                TypeSystem`PackageScope`AtomShape[115.20000000000002`], 
                TypeSystem`PackageScope`AtomShape[124.80000000000001`]}], 
              DirectedInfinity[1], 2, {All}], 
             TypeSystem`PackageScope`AtomShape[34]]], 20, 
           DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
           TypeSystem`Tuple[{
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String]}], 
           TypeSystem`Atom[Integer], 42427], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 20, 
         "DisplayedColumnCount" -> 1, "DataRowCount" -> 42427, 
         "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation["feel", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"feel", "like"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["like", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"feel", "like"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["53"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"feel", "like"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["feels", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"feels", "like"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["like", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"feels", "like"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["51"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"feels", "like"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["work", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"work", "home"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["home", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"work", "home"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["30"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"work", "home"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["mental", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"mental", "health"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["health", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"mental", "health"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["27"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"mental", "health"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["past", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"past", "week"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["week", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"past", "week"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["26"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"past", "week"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["social", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"social", "distancing"}], 1}, "Item", False], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["distancing", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"social", "distancing"}], 2}, "Item", False], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["26"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"social", "distancing"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["felt", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"felt", "like"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["like", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"felt", "like"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"felt", "like"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["tested", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"tested", "positive"}], 1}, "Item", False], "Mouse"],
                   ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["positive", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"tested", "positive"}], 2}, "Item", False], "Mouse"],
                   ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["24"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"tested", "positive"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["loved", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"loved", "ones"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["ones", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"loved", "ones"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["23"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"loved", "ones"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["white", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"white", "house"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["house", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"white", "house"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["22"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"white", "house"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["health", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"health", "care"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["care", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"health", "care"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["22"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"health", "care"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["working", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"working", "home"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["home", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"working", "home"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["22"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"working", "home"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["wear", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"wear", "masks"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["masks", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"wear", "masks"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["22"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"wear", "masks"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["wearing", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"wearing", "mask"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["mask", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"wearing", "mask"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"wearing", "mask"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["nursing", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"nursing", "home"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["home", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"nursing", "home"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"nursing", "home"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["stay", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"stay", "home"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["home", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"stay", "home"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["19"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"stay", "home"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["wear", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"wear", "mask"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["mask", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"wear", "mask"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["18"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"wear", "mask"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["years", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"years", "ago"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["ago", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"years", "ago"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["17"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"years", "ago"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["new", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"new", "york"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["york", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"new", "york"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"new", "york"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["social", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"social", "media"}], 1}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["media", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"social", "media"}], 2}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[{"social", "media"}]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 42427, 1], {1, 42427 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 42427, 1], {1, 42427 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[42427, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    42427, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 42427, 1], {1, 42427 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 42427, 1], {1, 42427 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {202., {214.35052490234375`, 218.64947509765625`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {202., {214.35052490234375`, 218.64947509765625`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 5456942639005266290088096898570320890693743994622087875360,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.824369896545697*^9, 3.824369991898137*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"ad5bdb3c-04d5-4fd8-9beb-d05edb2ac7ee"]
}, Open  ]]
}, Open  ]],

Cell[TextData[StyleBox["Reflection questions: what is interesting here? Why \
is it interesting? What does it suggest?",
 FontSlant->"Italic"]], "Subsubsection",
 CellChangeTimes->{{3.8243699457912827`*^9, 3.824369959396428*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"e8ae8d24-5d43-4506-ade7-0a3ab3303318"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Explore Word Types", "Section",
 CellChangeTimes->{{3.824370112720764*^9, 
  3.824370117151904*^9}},ExpressionUUID->"094f72c3-e20a-4d58-b22a-\
a73a6df08eea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Adjectives", "=", 
   RowBox[{"TextCases", "[", 
    RowBox[{"PJP", ",", " ", "\"\<Adjective\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.824370126840311*^9, 3.8243701445795403`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"26d72095-c0be-4819-91dd-4815609db227"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Verbs", "=", 
   RowBox[{"TextCases", "[", 
    RowBox[{"PJP", ",", " ", "\"\<Verb\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.824370154728446*^9, 3.8243701678656073`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"0829c54d-97a2-4b07-964e-c5963463c851"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nouns", "=", 
   RowBox[{"TextCases", "[", 
    RowBox[{"PJP", ",", "\"\<Noun\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8243701750554934`*^9, 3.824370183894525*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"d1bfe5a1-47b7-4c19-ae0c-16597e3ab3a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Dataset", "@", 
     RowBox[{"Reverse", "@", 
      RowBox[{"Sort", "@", 
       RowBox[{"Counts", "@", 
        RowBox[{"DeleteStopwords", "@", "Adjectives"}]}]}]}]}], ",", " ", 
    RowBox[{"Dataset", "@", 
     RowBox[{"Reverse", "@", 
      RowBox[{"Sort", "@", 
       RowBox[{"Counts", "@", 
        RowBox[{"DeleteStopwords", "@", "Nouns"}]}]}]}]}], ",", " ", 
    RowBox[{"Dataset", "@", 
     RowBox[{"Reverse", "@", 
      RowBox[{"Sort", "@", 
       RowBox[{"Counts", "@", 
        RowBox[{"DeleteStopwords", "@", "Verbs"}]}]}]}]}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.824370196946636*^9, 3.824370257583199*^9}, {
  3.8243702893414507`*^9, 3.824370309025432*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"0c3ee63a-736b-4e50-af08-9d1c085229f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Association[
      "InitialData" -> 
       Association[
        "new" -> 189, "pandemic" -> 171, "able" -> 160, "good" -> 104, 
         "social" -> 93, "normal" -> 79, "hard" -> 79, "long" -> 74, 
         "positive" -> 74, "little" -> 73, "due" -> 71, "past" -> 70, "safe" -> 
         64, "different" -> 62, "sad" -> 62, "white" -> 61, "sure" -> 55, 
         "big" -> 55, "second" -> 54, "difficult" -> 53, "public" -> 52, 
         "small" -> 50, "great" -> 49, "covid" -> 49, "happy" -> 46, "old" -> 
         46, "bad" -> 45, "sick" -> 45, "real" -> 44, "better" -> 43, "cold" -> 
         41, "open" -> 41, "best" -> 41, "beautiful" -> 39, "outside" -> 37, 
         "high" -> 35, "grateful" -> 35, "mental" -> 35, "black" -> 35, 
         "political" -> 34, "worse" -> 33, "lucky" -> 33, "nice" -> 31, 
         "important" -> 30, "physical" -> 30, "anxious" -> 30, "possible" -> 
         30, "daily" -> 29, "worried" -> 29, "tired" -> 29, "right" -> 28, 
         "crazy" -> 27, "angry" -> 27, "free" -> 27, "local" -> 27, "close" -> 
         26, "negative" -> 26, "scary" -> 25, "okay" -> 24, "large" -> 24, 
         "human" -> 24, "short" -> 23, "late" -> 23, "sweet" -> 22, "medical" -> 
         22, "general" -> 22, "glad" -> 22, "virtual" -> 22, "careful" -> 22, 
         "national" -> 21, "wonderful" -> 21, "hot" -> 21, "online" -> 21, 
         "fine" -> 21, "available" -> 21, "american" -> 20, "unable" -> 20, 
         "easy" -> 20, "weird" -> 20, "interesting" -> 19, "outdoor" -> 19, 
         "usual" -> 19, "special" -> 18, "busy" -> 18, "thankful" -> 18, 
         "strange" -> 18, "worst" -> 18, "ready" -> 18, "scared" -> 17, 
         "current" -> 17, "dark" -> 17, "personal" -> 17, "lovely" -> 17, 
         "nervous" -> 17, "everyday" -> 17, "afraid" -> 17, "super" -> 16, 
         "young" -> 16, "present" -> 16, "single" -> 16, "extra" -> 16, "low" -> 
         16, "u.s." -> 16, "red" -> 15, "clear" -> 15, "in-person" -> 15, 
         "healthy" -> 15, "lonely" -> 15, "hopeful" -> 15, "longer" -> 15, 
         "early" -> 15, "comfortable" -> 15, "younger" -> 15, "huge" -> 15, 
         "entire" -> 15, "related" -> 15, "third" -> 14, "depressed" -> 14, 
         "favorite" -> 14, "similar" -> 14, "aware" -> 14, "warm" -> 13, 
         "older" -> 13, "strong" -> 13, "stressful" -> 13, "ok" -> 13, 
         "stupid" -> 13, "united" -> 13, "bright" -> 13, "essential" -> 13, 
         "empty" -> 13, "major" -> 13, "beloved" -> 12, "republican" -> 12, 
         "closer" -> 12, "lower" -> 12, "poor" -> 12, "horrible" -> 12, 
         "slow" -> 12, "likely" -> 11, "remote" -> 11, "main" -> 11, "25th" -> 
         11, "frustrating" -> 11, "amazing" -> 11, "deep" -> 11, "emotional" -> 
         11, "greater" -> 11, "active" -> 11, "dead" -> 11, "actual" -> 11, 
         "tough" -> 11, "overwhelming" -> 11, "effective" -> 11, "severe" -> 
         11, "regular" -> 11, "blue" -> 11, "western" -> 10, "presidential" -> 
         10, "supreme" -> 10, "selfish" -> 10, "quiet" -> 10, "elderly" -> 10,
          "simple" -> 10, "private" -> 10, "guilty" -> 10, "wrong" -> 10, 
         "honest" -> 10, "terrible" -> 10, "racist" -> 10, "eligible" -> 9, 
         "democratic" -> 9, "terrifying" -> 9, "light" -> 9, "mild" -> 9, 
         "senior" -> 9, "professional" -> 9, "future" -> 9, "desperate" -> 9, 
         "necessary" -> 9, "constant" -> 9, "homeless" -> 9, "dangerous" -> 9,
          "federal" -> 9, "certain" -> 9, "deadly" -> 9, "vulnerable" -> 9, 
         "electoral" -> 8, "else" -> 8, "infected" -> 8, "legal" -> 8, 
         "previous" -> 8, "serious" -> 8, "awful" -> 8, "fresh" -> 8, 
         "challenging" -> 8, "calm" -> 8, "higher" -> 8, "helpless" -> 8, 
         "recent" -> 8, "earlier" -> 8, "front" -> 8, "complete" -> 8, 
         "upset" -> 8, "distant" -> 8, "various" -> 7, "multiple" -> 7, 
         "weekly" -> 7, "civil" -> 7, "military" -> 7, "cautious" -> 7, "wet" -> 
         7, "former" -> 7, "uncomfortable" -> 7, "true" -> 7, "final" -> 7, 
         "proud" -> 7, "heavy" -> 7, "stressed" -> 7, "separate" -> 7, 
         "quick" -> 7, "optimistic" -> 7, "financial" -> 7, "limited" -> 7, 
         "fortunate" -> 7, "live" -> 7, "ugly" -> 7, "strict" -> 7, "annual" -> 
         7, "annoying" -> 7, "exciting" -> 7, "depressing" -> 7, "painful" -> 
         7, "sorry" -> 7, "mad" -> 7, "critical" -> 7, "racial" -> 7, 
         "highest" -> 7, "harder" -> 7, "right-wing" -> 6, "mixed" -> 6, 
         "contagious" -> 6, "southern" -> 6, "particular" -> 6, "native" -> 6,
          "easier" -> 6, "non" -> 6, "covid-related" -> 6, "perfect" -> 6, 
         "cute" -> 6, "insane" -> 6, "fellow" -> 6, "green" -> 6, "precious" -> 
         6, "innocent" -> 6, "hopeless" -> 6, "direct" -> 6, "brief" -> 6, 
         "proper" -> 6, "individual" -> 6, "nearby" -> 6, "disabled" -> 6, 
         "routine" -> 6, "adult" -> 6, "loud" -> 6, "wild" -> 6, "unsure" -> 
         6, "alive" -> 6, "east" -> 6, "intense" -> 6, "basic" -> 6, 
         "impossible" -> 6, "international" -> 6, "liminal" -> 5, "nasty" -> 
         5, "congressional" -> 5, "20th" -> 5, "appropriate" -> 5, "false" -> 
         5, "raw" -> 5, "stark" -> 5, "jewish" -> 5, "biggest" -> 5, "immune" -> 
         5, "welcome" -> 5, "willing" -> 5, "giant" -> 5, "unusual" -> 5, 
         "helpful" -> 5, "key" -> 5, "peaceful" -> 5, "total" -> 5, "monthly" -> 
         5, "safer" -> 5, "extreme" -> 5, "inevitable" -> 5, "massive" -> 5, 
         "surreal" -> 5, "infectious" -> 5, "friendly" -> 5, "relieved" -> 5, 
         "tight" -> 5, "unclear" -> 5, "closest" -> 5, "sudden" -> 5, 
         "covid-19" -> 5, "familiar" -> 5, "double" -> 5, "joyous" -> 5, 
         "exhausting" -> 5, "fair" -> 5, "successful" -> 5, "economic" -> 5, 
         "unemployed" -> 5, "evil" -> 5, "novel" -> 5, "dry" -> 5, 
         "potential" -> 5, "privileged" -> 5, "distanced" -> 5, "yellow" -> 5,
          "romantic" -> 4, "universal" -> 4, "covid-rolled" -> 4, "prior" -> 
         4, "natural" -> 4, "sensitive" -> 4, "middle" -> 4, "decent" -> 4, 
         "long-standing" -> 4, "fast" -> 4, "indoor" -> 4, "sacred" -> 4, 
         "minor" -> 4, "full-time" -> 4, "silly" -> 4, "long-term" -> 4, 
         "rollercoaster" -> 4, "weak" -> 4, "indian" -> 4, "drive-" -> 4, 
         "boring" -> 4, "flat" -> 4, "original" -> 4, "secret" -> 4, 
         "experimental" -> 4, "minimal" -> 4, "english" -> 4, "ridiculous" -> 
         4, "countless" -> 4, "latest" -> 4, "pleased" -> 4, "frightening" -> 
         4, "mid-march" -> 4, "rare" -> 4, "asymptomatic" -> 4, "scientific" -> 
         4, "unknown" -> 4, "temporary" -> 4, "minute" -> 4, "tiny" -> 4, 
         "worth" -> 4, "invisible" -> 4, "official" -> 4, "lighter" -> 4, 
         "6th" -> 4, "conservative" -> 4, "brown" -> 4, "funny" -> 4, 
         "excellent" -> 4, "gray" -> 4, "sore" -> 4, "wooden" -> 4, 
         "surprising" -> 4, "rhode" -> 4, "overwhelmed" -> 4, "frustrated" -> 
         4, "random" -> 4, "sheltered" -> 4, "silent" -> 4, "occasional" -> 4,
          "excited" -> 4, "dramatic" -> 4, "fourth" -> 4, "fewer" -> 4, 
         "eternal" -> 4, "ashamed" -> 4, "york" -> 4, "steady" -> 4, 
         "endless" -> 4, "common" -> 4, "pathetic" -> 4, "south" -> 4, 
         "specific" -> 4, "immediate" -> 4, "clean" -> 4, "egregious" -> 4, 
         "pregnant" -> 4, "global" -> 4, "furious" -> 4, "left" -> 4, "polar" -> 
         3, "alternate" -> 3, "fascinating" -> 3, "irish" -> 3, "plain" -> 3, 
         "electrical" -> 3, "heart-breaking" -> 3, "immoral" -> 3, "cowardly" -> 
         3, "bare" -> 3, "impersonal" -> 3, "viral" -> 3, "legislative" -> 3, 
         "odd" -> 3, "near" -> 3, "creative" -> 3, "worthy" -> 3, "nicer" -> 
         3, "independent" -> 3, "overall" -> 3, "tall" -> 3, "rewarding" -> 3,
          "soothing" -> 3, "smaller" -> 3, "useful" -> 3, "top" -> 3, 
         "casual" -> 3, "fucking" -> 3, "naked" -> 3, "extended" -> 3, 
         "ceramic" -> 3, "cheerful" -> 3, "exact" -> 3, "incoming" -> 3, 
         "orange" -> 3, "bigger" -> 3, "uncertain" -> 3, "worrying" -> 3, 
         "gloomy" -> 3, "respective" -> 3, "british" -> 3, "typical" -> 3, 
         "hesitant" -> 3, "striking" -> 3, "fancy" -> 3, "reassuring" -> 3, 
         "prolonged" -> 3, "unpleasant" -> 3, "vague" -> 3, "snowy" -> 3, 
         "agonizing" -> 3, "smart" -> 3, "fitting" -> 3, "gay" -> 3, 
         "powerful" -> 3, "poignant" -> 3, "warmer" -> 3, "windy" -> 3, 
         "popular" -> 3, "protective" -> 3, "mute" -> 3, "armed" -> 3, 
         "irritated" -> 3, "historical" -> 3, "erratic" -> 3, "unused" -> 3, 
         "daring" -> 3, "african" -> 3, "concerned" -> 3, "fraudulent" -> 3, 
         "delightful" -> 3, "longest" -> 3, "appreciative" -> 3, "cognitive" -> 
         3, "sane" -> 3, "flaming" -> 3, "suburban" -> 3, "equitable" -> 3, 
         "stuck" -> 3, "unreal" -> 3, "pre-covid" -> 3, "graduate" -> 3, 
         "numb" -> 3, "partial" -> 3, "baked" -> 3, "rapid" -> 3, "west" -> 3,
          "grey" -> 3, "enormous" -> 3, "indigenous" -> 3, "happier" -> 3, 
         "foreign" -> 3, "cheery" -> 3, "5th" -> 3, "traditional" -> 3, 
         "unscathed" -> 3, "sole" -> 3, "restricted" -> 3, "technical" -> 3, 
         "expensive" -> 3, "nasal" -> 3, "psychological" -> 3, "complicated" -> 
         3, "chronic" -> 3, "soft" -> 3, "responsible" -> 3, "consistent" -> 
         3, "disappointed" -> 3, "lasting" -> 3, "comforting" -> 3, 
         "electric" -> 3, "risky" -> 3, "criminal" -> 3, "german" -> 3, 
         "gentle" -> 3, "utter" -> 3, "far" -> 3, "rural" -> 3, "adequate" -> 
         3, "inpatient" -> 3, "infuriating" -> 3, "glorious" -> 3, "stronger" -> 
         3, "solid" -> 3, "central" -> 3, "ancient" -> 3, "secure" -> 3, 
         "bleak" -> 3, "mid" -> 3, "ill" -> 3, "nuclear" -> 3, "dystopian" -> 
         3, "structural" -> 3, "tragic" -> 3, "alarming" -> 3, "opposite" -> 
         3, "touching" -> 3, "pleasant" -> 3, "shocking" -> 3, "relative" -> 
         3, "significant" -> 2, "grand" -> 2, "needy" -> 2, "urban" -> 2, 
         "unhealthy" -> 2, "cultural" -> 2, "lowest" -> 2, "botanical" -> 2, 
         "day-to-day" -> 2, "instant" -> 2, "french" -> 2, "milder" -> 2, 
         "fifth" -> 2, "afterschool" -> 2, "heartwarming" -> 2, "alien" -> 2, 
         "eager" -> 2, "tense" -> 2, "rid" -> 2, "unfinished" -> 2, 
         "unspeakable" -> 2, "outrageous" -> 2, "ultimate" -> 2, 
         "confederate" -> 2, "traitorous" -> 2, "dirty" -> 2, "mercenary" -> 
         2, "gleeful" -> 2, "pro-trump" -> 2, "corporate" -> 2, "d.c." -> 2, 
         "maskless" -> 2, "disgusting" -> 2, "remarkable" -> 2, "trump" -> 2, 
         "pre-recorded" -> 2, "rick-rolled" -> 2, "additional" -> 2, 
         "ordinary" -> 2, "social/familial" -> 2, "structured" -> 2, 
         "interstitial" -> 2, "tame" -> 2, "commercial" -> 2, "unprepared" -> 
         2, "horrific" -> 2, "capable" -> 2, "messy" -> 2, "polite" -> 2, 
         "imaginary" -> 2, "curious" -> 2, "tremendous" -> 2, "observant" -> 
         2, "vast" -> 2, "underemployed" -> 2, "attuned" -> 2, "festive" -> 2,
          "overnight" -> 2, "confused" -> 2, "relevant" -> 2, "hungry" -> 2, 
         "mandatory" -> 2, "akin" -> 2, "electronic" -> 2, "cruel" -> 2, 
         "horrifying" -> 2, "shared" -> 2, "rabid" -> 2, "paranoid" -> 2, 
         "alternative" -> 2, "sour" -> 2, "11th" -> 2, "wide" -> 2, 
         "underground" -> 2, "2nd" -> 2, "iran" -> 2, "handwritten" -> 2, 
         "net" -> 2, "biological" -> 2, "failed" -> 2, "murderous" -> 2, 
         "coldest" -> 2, "prime" -> 2, "tiresome" -> 2, "preventive" -> 2, 
         "initial" -> 2, "merry" -> 2, "unanswered" -> 2, "crucial" -> 2, 
         "post-covid" -> 2, "daunting" -> 2, "valuable" -> 2, "sobering" -> 2,
          "prepared" -> 2, "skeptical" -> 2, "pessimistic" -> 2, "dependent" -> 
         2, "classic" -> 2, "run-" -> 2, "awesome" -> 2, "underwater" -> 2, 
         "family-centered" -> 2, "embarrassing" -> 2, "hillary" -> 2, 
         "embarrassed" -> 2, "aggressive" -> 2, "immense" -> 2, "asian" -> 2, 
         "worldwide" -> 2, "transparent" -> 2, "evangelical" -> 2, 
         "unprecedented" -> 2, "genuine" -> 2, "rough" -> 2, "preventative" -> 
         2, "timely" -> 2, "manageable" -> 2, "accurate" -> 2, "assisted" -> 
         2, "29th" -> 2, "intimate" -> 2, "entertaining" -> 2, "utmost" -> 2, 
         "brazilian" -> 2, "experienced" -> 2, "mobile" -> 2, "g-d" -> 2, 
         "alert" -> 2, "convenient" -> 2, "advanced" -> 2, "nearest" -> 2, 
         "brighter" -> 2, "oldest" -> 2, "ongoing" -> 2, "1st" -> 2, "slower" -> 
         2, "progressive" -> 2, "unfathomable" -> 2, "mask-wearing" -> 2, 
         "yeah" -> 2, "reckless" -> 2, "parallel" -> 2, "inspirational" -> 2, 
         "part-time" -> 2, "shitty" -> 2, "stay-at-home" -> 2, "michigan" -> 
         2, "unqualified" -> 2, "disappointing" -> 2, "offensive" -> 2, 
         "closed" -> 2, "donald" -> 2, "joint" -> 2, "disturbing" -> 2, 
         "valid" -> 2, "affordable" -> 2, "unsettling" -> 2, "cheap" -> 2, 
         "surgical" -> 2, "bustling" -> 2, "pet" -> 2, "high-risk" -> 2, 
         "intellectual" -> 2, "compassionate" -> 2, "illegal" -> 2, 
         "productive" -> 2, "mic" -> 2, "elaborate" -> 2, "atrocious" -> 2, 
         "spare" -> 2, "connected" -> 2, "preschool" -> 2, "fatal" -> 2, 
         "pink" -> 2, "affluent" -> 2, "epidemic" -> 2, "academic" -> 2, 
         "incredible" -> 2, "smooth" -> 2, "rich" -> 2, "eric" -> 2, 
         "autoimmune" -> 2, "disheartening" -> 2, "tricky" -> 2, "colder" -> 
         2, "digital" -> 2, "hardest" -> 2, "devastating" -> 2, 
         "pre-pandemic" -> 2, "memorable" -> 2, "atlantic" -> 2, "magical" -> 
         2, "so-called" -> 2, "calming" -> 2, "loving" -> 2, "pick-" -> 2, 
         "impressive" -> 2, "cool" -> 2, "interested" -> 2, "sunny" -> 2, 
         "northern" -> 2, "strep" -> 2, "self-isolated" -> 2, "lethargic" -> 
         2, "debilitating" -> 2, "delighted" -> 2, "radical" -> 2, "unwanted" -> 
         2, "upbeat" -> 2, "prevalent" -> 2, "sticky" -> 2, "cloudy" -> 2, 
         "meaningful" -> 2, "pancreatic" -> 2, "delicious" -> 2, "suitable" -> 
         2, "chaotic" -> 2, "tropical" -> 2, "greek" -> 2, "2-week" -> 2, 
         "undergraduate" -> 2, "restless" -> 2, "enjoyable" -> 2, "vital" -> 
         2, "sixth" -> 2, "harsh" -> 2, "nostalgic" -> 2, "weary" -> 2, 
         "crowded" -> 2, "non-covid" -> 2, "post-pandemic" -> 2, "square" -> 
         2, "heartbreaking" -> 2, "unexpected" -> 2, "lengthy" -> 2, 
         "concrete" -> 2, "dominican" -> 2, "domestic" -> 2, "mere" -> 2, 
         "deeper" -> 2, "self-serving" -> 2, "fictional" -> 2, "voluntary" -> 
         2, "adjacent" -> 2, "unlikely" -> 2, "shorter" -> 2, "dreary" -> 2, 
         "warped" -> 2, "favourite" -> 2, "mundane" -> 2, "21st" -> 2, 
         "homebound" -> 2, "abnormal" -> 2, "harmful" -> 2, "engaging" -> 2, 
         "sufficient" -> 2, "ideal" -> 2, "wooded" -> 2, "fearful" -> 2, 
         "informal" -> 2, "inadequate" -> 2, "self-isolate" -> 2, "notable" -> 
         2, "floyd" -> 2, "brutal" -> 2, "bottled" -> 1, "impulsive" -> 1, 
         "leftover" -> 1, "cardinal" -> 1, "fruitless" -> 1, "later" -> 1, 
         "pandemic-related" -> 1, "feb." -> 1, "repetitive" -> 1, "yearlong" -> 
         1, "gorgeous" -> 1, "hubby" -> 1, "uncrowded" -> 1, "unneeded" -> 1, 
         "blunt" -> 1, "on-the-ground" -> 1, "facetime" -> 1, "retired" -> 1, 
         "yrs.old" -> 1, "chinese" -> 1, "fricking" -> 1, "classist" -> 1, 
         "stringent" -> 1, "conflicted" -> 1, "flip" -> 1, "intangible" -> 1, 
         "dehydrated" -> 1, "thirsty" -> 1, "nested" -> 1, "peripheral" -> 1, 
         "paint-lined" -> 1, "up-close" -> 1, "lonesome" -> 1, "pre-emptive" -> 
         1, "pre-covid-19" -> 1, "uncanny" -> 1, "ebullient" -> 1, 
         "unrelated" -> 1, "impatient" -> 1, "healthier" -> 1, "set-" -> 1, 
         "manic" -> 1, "treatable" -> 1, "seasonal" -> 1, "sociable" -> 1, 
         "pcr-based" -> 1, "near-constant" -> 1, "17th" -> 1, "narrow" -> 1, 
         "manual" -> 1, "untenable" -> 1, "post-graduate" -> 1, "indigent" -> 
         1, "impassible" -> 1, "balmy" -> 1, "widespread" -> 1, 
         "nonessential" -> 1, "nesting" -> 1, "shimmering" -> 1, "splendid" -> 
         1, "verdant" -> 1, "luminescent" -> 1, "glowing" -> 1, "queer" -> 1, 
         "y" -> 1, "love-making" -> 1, "provocative" -> 1, "steamy" -> 1, 
         "man-on-man" -> 1, "unlimited" -> 1, "busiest" -> 1, "charming" -> 1,
          "impenetrable" -> 1, "thick" -> 1, "masculine" -> 1, "off-putting" -> 
         1, "handsome" -> 1, "monogamous" -> 1, "manly" -> 1, "heterosexual" -> 
         1, "all-american" -> 1, "red-blooded" -> 1, "virgin" -> 1, "chubby" -> 
         1, "loveholic" -> 1, "obsessive" -> 1, "manifest" -> 1, "vestigial" -> 
         1, "exceptional" -> 1, "good-looking" -> 1, "gayest" -> 1, 
         "hysterical" -> 1, "samba" -> 1, "hot-baked" -> 1, "frigid" -> 1, 
         "reductionist" -> 1, "affected" -> 1, "marked" -> 1, "laissez" -> 1, 
         "fat" -> 1, "readable" -> 1, "multi-lingual" -> 1, "us-israeli" -> 1,
          "dual" -> 1, "meaningless" -> 1, "physical/mental" -> 1, 
         "day/week/month" -> 1, "silver" -> 1, "all-consuming" -> 1, 
         "skilled" -> 1, "double-edged" -> 1, "lame" -> 1, "interminable" -> 
         1, "colorful" -> 1, "iberian" -> 1, "arrogant" -> 1, "non-issue" -> 
         1, "blueberry" -> 1, "statewide" -> 1, "newborn" -> 1, 
         "interpersonal" -> 1, "sullen" -> 1, "behavioral" -> 1, "inept" -> 1,
          "adrift" -> 1, "valved" -> 1, "ash" -> 1, "despairing" -> 1, 
         "ever-present" -> 1, "analytic" -> 1, "narrative" -> 1, 
         "contemporary" -> 1, "zone-linked" -> 1, "racialized" -> 1, 
         "immigrant" -> 1, "collective" -> 1, "comparative" -> 1, "swift" -> 
         1, "overblown" -> 1, "upended" -> 1, "reasonable" -> 1, 
         "intelligent" -> 1, "lax" -> 1, "cynical" -> 1, "no-visitor" -> 1, 
         "teenage" -> 1, "101-year-old" -> 1, "bent" -> 1, "sedentary" -> 1, 
         "accessible" -> 1, "thin" -> 1, "5-month-old" -> 1, "2-year-old" -> 
         1, "one-time" -> 1, "confusing" -> 1, "bummed" -> 1, "abdominal" -> 
         1, "supplemental" -> 1, "gastrointestinal" -> 1, "busier" -> 1, 
         "edgy" -> 1, "australia" -> 1, "allergic" -> 1, "frozen" -> 1, 
         "freezing" -> 1, "handwrite" -> 1, "long-sleeve" -> 1, "tolerable" -> 
         1, "chillier" -> 1, "lush" -> 1, "fashionable" -> 1, "no-fuss" -> 1, 
         "lackadaisical" -> 1, "reluctant" -> 1, "untouched" -> 1, "unwise" -> 
         1, "in-classroom" -> 1, "full-scale" -> 1, "momentary" -> 1, "bush" -> 
         1, "anti-public" -> 1, "foreseable" -> 1, "transmissible" -> 1, 
         "26th" -> 1, "bearable" -> 1, "contradictory" -> 1, "detailed" -> 1, 
         "fractured" -> 1, "orthodox" -> 1, "unnecessary" -> 1, "dubious" -> 
         1, "kent" -> 1, "assorted" -> 1, "mexican" -> 1, "creepy" -> 1, 
         "chief" -> 1, "lifelong" -> 1, "curly" -> 1, "folding" -> 1, "46th" -> 
         1, "overseas" -> 1, "complacent" -> 1, "plus" -> 1, "fizzing" -> 1, 
         "polluted" -> 1, "historic" -> 1, "continued" -> 1, "substantive" -> 
         1, "craziest" -> 1, "inside" -> 1, "over-sensitized" -> 1, 
         "palmetto" -> 1, "90-year-old" -> 1, "65-year-old" -> 1, 
         "96-year-old" -> 1, "unethical" -> 1, "angrier" -> 1, "uinted" -> 1, 
         "covert" -> 1, "loony" -> 1, "cathartic" -> 1, "unclean" -> 1, 
         "vacant" -> 1, "methodical" -> 1, "inner" -> 1, "low-grade" -> 1, 
         "novel-reading" -> 1, "preexisting" -> 1, "violent" -> 1, "deranged" -> 
         1, "competent" -> 1, "incapable" -> 1, "scarier" -> 1, "ironical" -> 
         1, "audio" -> 1, "wondrous" -> 1, "sick." -> 1, "moreso" -> 1, 
         "secluded" -> 1, "outward" -> 1, "concentric" -> 1, "45th" -> 1, 
         "deliberate" -> 1, "shameful" -> 1, "disinfectant" -> 1, 
         "supportive" -> 1, "hazy" -> 1, "generational" -> 1, "pivot" -> 1, 
         "non-work" -> 1, "grad" -> 1, "credible" -> 1, "surprised" -> 1, 
         "foggy" -> 1, "licensed" -> 1, "six-month" -> 1, "intact" -> 1, 
         "indifferent" -> 1, "heartrending" -> 1, "eventual" -> 1, "posh" -> 
         1, "underlying" -> 1, "fatigued" -> 1, "portable" -> 1, 
         "like-minded" -> 1, "clueless" -> 1, "hilary" -> 1, "foolish" -> 1, 
         "convinced" -> 1, "goddamn" -> 1, "damn" -> 1, "crazed" -> 1, 
         "militarized" -> 1, "frigging" -> 1, "senile" -> 1, "pig-god" -> 1, 
         "wisconsin" -> 1, "f**king" -> 1, "sizeable" -> 1, "shocked" -> 1, 
         "palpable" -> 1, "loose" -> 1, "2pm" -> 1, "unlucky" -> 1, "orderly" -> 
         1, "foregone" -> 1, "extraordinary" -> 1, "..f" -> 1, "teary" -> 1, 
         "petrified" -> 1, "gaping" -> 1, "unfit" -> 1, "unprotected" -> 1, 
         "shy" -> 1, "visual" -> 1, "cuban-american" -> 1, "year-old" -> 1, 
         "upper" -> 1, "symmetrical" -> 1, "axe" -> 1, "brick-like" -> 1, 
         "virulent" -> 1, "super-spreader" -> 1, "well-placed" -> 1, 
         "consummate" -> 1, "disingenuous" -> 1, "agricultural" -> 1, 
         "largest" -> 1, "richest" -> 1, "robotic" -> 1, "variant" -> 1, 
         "medial" -> 1, "indiscernible" -> 1, "funeral" -> 1, "three-hour" -> 
         1, "mid-west" -> 1, "thespian" -> 1, "danville" -> 1, 
         "one-in-a-million" -> 1, "dusty" -> 1, "flavorful" -> 1, 
         "social/medical" -> 1, "freelance" -> 1, "4-odd" -> 1, "spineless" -> 
         1, "flat-toned" -> 1, "explosive" -> 1, "disgusted" -> 1, "unsecure" -> 
         1, "pro-t" -> 1, "t@#$" -> 1, "window-washing" -> 1, "outer" -> 1, 
         "red/white/blue" -> 1, "youngish" -> 1, "k-pop" -> 1, "on-campus" -> 
         1, "ossoff/perdue" -> 1, "segregationist" -> 1, "aforementioned" -> 
         1, "burnt" -> 1, "uncooked" -> 1, "forced" -> 1, "wishful" -> 1, 
         "monumental" -> 1, "unequal" -> 1, "pic" -> 1, "behind-the-scenes" -> 
         1, "wan" -> 1, "after-christmas" -> 1, "ominous" -> 1, 
         "rick-rolling" -> 1, "horrendous" -> 1, "simpler" -> 1, "staggered" -> 
         1, "at-home" -> 1, "archival" -> 1, "one-bedroom" -> 1, "insecure" -> 
         1, "post" -> 1, "stormy" -> 1, "contrasting" -> 1, "fretful" -> 1, 
         "verbal" -> 1, "vibrant" -> 1, "pediatric" -> 1, "aged" -> 1, 
         "pronounced" -> 1, "hectic" -> 1, "damaging" -> 1, "versatile" -> 1, 
         "facetiming" -> 1, "vengeful" -> 1, "hurrah" -> 1, "post-holiday" -> 
         1, "fundamental" -> 1, "sadder" -> 1, "defensive" -> 1, "mask-" -> 1,
          "enraged" -> 1, "lowly" -> 1, "feverish" -> 1, "underweight" -> 1, 
         "ragged" -> 1, "broken" -> 1, "toxic" -> 1, "supremacist" -> 1, 
         "25k" -> 1, "cake-from-a-box" -> 1, "stunning" -> 1, "adventurous" -> 
         1, "house-bound" -> 1, "60-year" -> 1, "risk-averse" -> 1, "in-door" -> 
         1, "imprecise" -> 1, "self-reflective" -> 1, "immersive/intense" -> 
         1, "existential" -> 1, "jamaican" -> 1, "turkish-german" -> 1, 
         "pfizer-bio-ntech" -> 1, "hermit" -> 1, "frank" -> 1, "reminiscent" -> 
         1, "ghastly" -> 1, "miserable" -> 1, "effortful" -> 1, "mediocre" -> 
         1, "uninsured" -> 1, "ornery" -> 1, "exclusive" -> 1, "lackluster" -> 
         1, "wary" -> 1, "scorched" -> 1, "vindictive" -> 1, "talented" -> 1, 
         "lost" -> 1, "grilled" -> 1, "depressive" -> 1, "cooking" -> 1, 
         "botched" -> 1, "legitimate" -> 1, "suspect" -> 1, "19-year" -> 1, 
         "dismissive" -> 1, "treasured" -> 1, "sing-" -> 1, "unwell" -> 1, 
         "trickle-" -> 1, "dreadful" -> 1, "white-haired" -> 1, "lemon" -> 1, 
         "timeto" -> 1, "devout" -> 1, "wanamaker" -> 1, "furry" -> 1, 
         "christmas" -> 1, "logan" -> 1, "aqua" -> 1, "melancholy" -> 1, 
         "snoozy" -> 1, "sooo" -> 1, "bizarre" -> 1, "average" -> 1, 
         "decorative" -> 1, "16th" -> 1, "enclosed" -> 1, "panicky" -> 1, 
         "blurry" -> 1, "15-odd" -> 1, "handy" -> 1, "split" -> 1, 
         "deafening" -> 1, "dignified" -> 1, "willed" -> 1, 
         "just-about-to-drift-off-to-sleep" -> 1, "darn" -> 1, "self-centred" -> 
         1, "ungrateful" -> 1, "grimmer" -> 1, "grim" -> 1, "\[Bullet]" -> 1, 
         "grown" -> 1, "pot-luck" -> 1, "watched" -> 1, "fragile" -> 1, 
         "pale" -> 1, "hand-" -> 1, "mom-equivalent" -> 1, "two-person" -> 1, 
         "high-key" -> 1, "poorly-designed" -> 1, "diverse" -> 1, "visceral" -> 
         1, "spilt" -> 1, "mid-january" -> 1, "secular" -> 1, "avid" -> 1, 
         "annoyed" -> 1, "thec" -> 1, "grievous" -> 1, "expressive" -> 1, 
         "upturned" -> 1, "annisraeli" -> 1, "mutant" -> 1, "successive" -> 1,
          "cleanest" -> 1, "dutch" -> 1, "married" -> 1, "grief-stricken" -> 
         1, "under-report" -> 1, "male" -> 1, "nationalist" -> 1, "christian" -> 
         1, "mary" -> 1, "accountable" -> 1, "contentious" -> 1, "token" -> 1,
          "mid-february" -> 1, "ninth" -> 1, "reverse" -> 1, "weirdest" -> 1, 
         "inflatable" -> 1, "gift-seeking" -> 1, "multi-date" -> 1, "joking" -> 
         1, "insulting" -> 1, "subpar" -> 1, "contact-" -> 1, "sustained" -> 
         1, "pressured" -> 1, "lockdown" -> 1, "trained" -> 1, "non-litter" -> 
         1, "excitable" -> 1, "refundable" -> 1, "postcolonial" -> 1, 
         "ethnographic" -> 1, "interconnected" -> 1, "zimbabwean" -> 1, 
         "superb" -> 1, "biden-harris" -> 1, "astonishing" -> 1, "weakened" -> 
         1, "psychopolitical" -> 1, "psychoanalytic" -> 1, "biosocial" -> 1, 
         "authoritative" -> 1, "mahan" -> 1, "bio-social" -> 1, "absurd" -> 1,
          "newly-combined" -> 1, "vivid" -> 1, "tethered" -> 1, "unique" -> 1,
          "baking" -> 1, "oversized" -> 1, "easiest" -> 1, "identical" -> 1, 
         "lazy" -> 1, "leaved" -> 1, "multicolored" -> 1, "absolute" -> 1, 
         "performative" -> 1, "generous" -> 1, "rational" -> 1, "religious" -> 
         1, "correct" -> 1, "sunken" -> 1, "anticipated" -> 1, "unusable" -> 
         1, "oressured" -> 1, "tribal" -> 1, "westerly" -> 1, "matching" -> 1,
          "unthinkable" -> 1, "defiant" -> 1, "amazon" -> 1, "12th" -> 1, 
         "all-powerful" -> 1, "aghast" -> 1, "omnipresent" -> 1, 
         "98.5-degree" -> 1, "non-verbal" -> 1, "trivial" -> 1, "elitist" -> 
         1, "magnificent" -> 1, "planed" -> 1, "tahitian" -> 1, "flourless" -> 
         1, "educational" -> 1, "dire" -> 1, "indicative" -> 1, "still-empty" -> 
         1, "rudest" -> 1, "35-page" -> 1, "unmerciful" -> 1, "stricter" -> 1,
          "church." -> 1, "unconsolable" -> 1, "25m" -> 1, "daylong" -> 1, 
         "refreshing" -> 1, "3am" -> 1, "absent" -> 1, "sleepless" -> 1, 
         "whirlwind" -> 1, "fraught" -> 1, "hyper-cautious" -> 1, "delicate" -> 
         1, "stable" -> 1, "non-toxic" -> 1, "continuous" -> 1, "spongebob" -> 
         1, "binary" -> 1, "knowledgeable" -> 1, "undocumented" -> 1, 
         "standard" -> 1, "5.30-6am" -> 1, "unsanctioned" -> 1, "costumed" -> 
         1, "presentable" -> 1, "contingent" -> 1, "mini" -> 1, 
         "unrecognizable" -> 1, "curvy" -> 1, "humble" -> 1, "nationalistic" -> 
         1, "uncontrollable" -> 1, "divisive" -> 1, "anti-masking" -> 1, 
         "pandrmic" -> 1, "netvous" -> 1, "wexwere" -> 1, "turbulent" -> 1, 
         "lean" -> 1, "unpredictable" -> 1, "greatest" -> 1, "patriotic" -> 1,
          "parents/loved" -> 1, "non-ra" -> 1, "moral" -> 1, "sarcastic" -> 1,
          "shaggy" -> 1, "yearly" -> 1, "illinois" -> 1, "ambivalent" -> 1, 
         "salty" -> 1, "residential" -> 1, "prospective" -> 1, "unheard" -> 1,
          "satisfying" -> 1, "clinton-southworrh" -> 1, "dicey" -> 1, 
         "fantastic" -> 1, "subject" -> 1, "displaced" -> 1, "benign" -> 1, 
         "tehran-ankara-" -> 1, "large-scale" -> 1, "astounding" -> 1, 
         "heartening" -> 1, "corrupt" -> 1, "verifiable" -> 1, 
         "hybrid-cultural" -> 1, "intentional" -> 1, "apparent" -> 1, 
         "communal" -> 1, "non-conspiracy" -> 1, "amazonian" -> 1, 
         "metaphoric" -> 1, "aggrieved" -> 1, "enfeebled" -> 1, 
         "anti-pandemic" -> 1, "embattled" -> 1, "cuban" -> 1, 
         "trump-bolsonaro" -> 1, "investigative" -> 1, "cocky" -> 1, 
         "once-joyous" -> 1, "problematic" -> 1, "zoom-disabled" -> 1, 
         "6-years-old" -> 1, "promised" -> 1, "elder" -> 1, "packed" -> 1, 
         "please-super-spread" -> 1, "juvenile" -> 1, "petty" -> 1, 
         "illegitimate" -> 1, "unhappy" -> 1, "swirly" -> 1, "anticlimactic" -> 
         1, "nozin" -> 1, "feasible" -> 1, "walk-" -> 1, "unreliable" -> 1, 
         "stunned" -> 1, "jealous" -> 1, "restful" -> 1, "lunatic" -> 1, 
         "irrational" -> 1, "paper-plate-scribbled" -> 1, "dander" -> 1, 
         "vigilant" -> 1, "strictest" -> 1, "netflix" -> 1, "hilarious" -> 1, 
         "tearful" -> 1, "heroic" -> 1, "2-factor" -> 1, "unwelcoming" -> 1, 
         "acceptable" -> 1, "constructive" -> 1, "staunch" -> 1, 
         "85-year-old" -> 1, "unacceptable" -> 1, "unclogged" -> 1, 
         "dazzling" -> 1, "yellower" -> 1, "greener" -> 1, "exhilarating" -> 
         1, "varied" -> 1, "uneventful" -> 1, "pandemic/quarantine" -> 1, 
         "unbelievable" -> 1, "mine" -> 1, "blank" -> 1, "symbiotic" -> 1, 
         "dull" -> 1, "smallest" -> 1, "immature" -> 1, "adorable" -> 1, 
         "unmotivated" -> 1, "insular" -> 1, "covid-fatigued" -> 1, 
         "indefinite" -> 1, "hazardous" -> 1, "take-" -> 1, "indivisible" -> 
         1, "ling" -> 1, "sunlit" -> 1, "throne/ladder" -> 1, "midwest" -> 1, 
         "antarctic" -> 1, "bern" -> 1, "worrisome" -> 1, "interwar" -> 1, 
         "pan-european" -> 1, "scariest" -> 1, "first-grade" -> 1, "exempt" -> 
         1, "muddy" -> 1, "great." -> 1, "wright" -> 1, "childish" -> 1, 
         "drunk" -> 1, "anti-covid" -> 1, "inferior" -> 1, "dred" -> 1, 
         "infamous" -> 1, "deceased" -> 1, "anti-slavery" -> 1, "alleged" -> 
         1, "incompetent" -> 1, "outright" -> 1, "primary" -> 1, "logorrheic" -> 
         1, "male-dominance" -> 1, "agreed" -> 1, "robot-fly" -> 1, 
         "vice-presidential" -> 1, "following" -> 1, "anonymous" -> 1, 
         "caged" -> 1, "naval" -> 1, "nonexistent" -> 1, "tiring" -> 1, 
         "ethnic" -> 1, "non-hispanic" -> 1, "doable" -> 1, "hideous" -> 1, 
         "riskiest" -> 1, "carby" -> 1, "merciful" -> 1, "grumpy" -> 1, 
         "hidden" -> 1, "periodic" -> 1, "stiff" -> 1, "head-whipping" -> 1, 
         "unending" -> 1, "in-depth" -> 1, "wildfire" -> 1, "scraggly" -> 1, 
         "awkward" -> 1, "unfair" -> 1, "crushed" -> 1, "distraught" -> 1, 
         "15th" -> 1, "reusable" -> 1, "lonelier" -> 1, "dreamless" -> 1, 
         "balanced" -> 1, "corrugated" -> 1, "sheer" -> 1, "crazy-anxiety" -> 
         1, "crisp" -> 1, "crimson" -> 1, "unreasonable" -> 1, "airy" -> 1, 
         "darkest" -> 1, "new/better" -> 1, "nerve-wracking" -> 1, "fake" -> 
         1, "armored" -> 1, "real-life" -> 1, "thought-provoking" -> 1, 
         "dense" -> 1, "damp" -> 1, "wavy" -> 1, "nonprofit" -> 1, "drawn-" -> 
         1, "compacted" -> 1, "complex" -> 1, "reclining" -> 1, "unavailable" -> 
         1, "3-week" -> 1, "mind-blowing" -> 1, "listless" -> 1, "two-car" -> 
         1, "immunocompromised" -> 1, "larger" -> 1, "monetary" -> 1, 
         "courageous" -> 1, "puzzling" -> 1, "respiratory" -> 1, 
         "endothelial" -> 1, "ecological" -> 1, "populist-nationalist" -> 1, 
         "gun-toting" -> 1, "confident" -> 1, "enforceable" -> 1, 
         "institutional" -> 1, "unconstitutional" -> 1, "capitalist" -> 1, 
         "constitutional" -> 1, "negligent" -> 1, "daniel" -> 1, "attentive" -> 
         1, "intensive" -> 1, "enriched" -> 1, "cooler" -> 1, 
         "industrial-style" -> 1, "meditative" -> 1, "30ish" -> 1, 
         "gender-wise" -> 1, "age-wise" -> 1, "nap-taking" -> 1, "sept" -> 1, 
         "dont" -> 1, "blind" -> 1, "day-by-day" -> 1, "plenty" -> 1, "3rd" -> 
         1, "honorable" -> 1, "dictatorial" -> 1, "troublesome" -> 1, 
         "self-destructive" -> 1, "catastrophic" -> 1, "evolutionary" -> 1, 
         "naive" -> 1, "earthly" -> 1, "tiniest" -> 1, "cornelian" -> 1, 
         "pointless" -> 1, "irrelevant" -> 1, "accustomed" -> 1, "control" -> 
         1, "inconclusive" -> 1, "stagnant" -> 1, "organized" -> 1, 
         "flexible" -> 1, "unmoved" -> 1, "unchanged" -> 1, "irreparable" -> 
         1, "unaware" -> 1, "wicked" -> 1, "symptomatic" -> 1, "misshapen" -> 
         1, "awed" -> 1, "impromptu" -> 1, "spectacular" -> 1, 
         "fireworks-heavy" -> 1, "primal" -> 1, "beachside" -> 1, 
         "self-absorbed" -> 1, "arnold" -> 1, "oblivious" -> 1, "serene" -> 1,
          "newest" -> 1, "resounding" -> 1, "legit" -> 1, "everlasting" -> 1, 
         "emancipated" -> 1, "expendable" -> 1, "antsy" -> 1, "ecstatic" -> 1,
          "semi-public" -> 1, "appointment-" -> 1, "wise" -> 1, "solo" -> 1, 
         "straightforward" -> 1, "rightmost" -> 1, "panoramic" -> 1, 
         "coastal" -> 1, "unsafe" -> 1, "doubtful" -> 1, "uptown" -> 1, 
         "mid-town" -> 1, "disruptive" -> 1, "6th-grade-" -> 1, "softer" -> 1,
          "small-world" -> 1, "unsaid" -> 1, "resentful" -> 1, "rental" -> 1, 
         "self-quarantine" -> 1, "darker" -> 1, "disposable" -> 1, "straight" -> 
         1, "husky" -> 1, "geographical" -> 1, "morphine/ativan" -> 1, 
         "well-managed" -> 1, "life-back-to-normal" -> 1, "head-to-toe" -> 1, 
         "retail" -> 1, "stylized" -> 1, "post-corona" -> 1, "unlined" -> 1, 
         "drastic" -> 1, "sparkling" -> 1, "cobwebby" -> 1, "unfamiliar" -> 1,
          "internal" -> 1, "9th" -> 1, "content" -> 1, "video" -> 1, "bored" -> 
         1, "latter" -> 1, "nonperishable" -> 1, "uneaten" -> 1, "eating" -> 
         1, "miniature" -> 1, "makeshift" -> 1, "10th" -> 1, "environmental" -> 
         1, "embedded" -> 1, "sweaty" -> 1, "filthy" -> 1, "cranky" -> 1, 
         "hand-clap" -> 1, "brown-bag" -> 1, "resistant" -> 1, "neighboring" -> 
         1, "adhering" -> 1, "allowable" -> 1, "ironic" -> 1, "curb-" -> 1, 
         "east-coast" -> 1, "twilight" -> 1, "urgent" -> 1, "involuntary" -> 
         1, "susceptible" -> 1, "apprehensive" -> 1, "trans-formative" -> 1, 
         "tangible" -> 1, "fertile" -> 1, "indirect" -> 1, "heart-warming" -> 
         1, "claustrophobic" -> 1, "cardiac/respiratory" -> 1, "relentless" -> 
         1, "dedicated" -> 1, "homemade" -> 1, "adjective" -> 1, 
         "r-e-s-p-e-c-t" -> 1, "dilapidated" -> 1, "quirky" -> 1, "unnerving" -> 
         1, "interior" -> 1, "unannounced" -> 1, "stern" -> 1, 
         "conscientious" -> 1, "extensive" -> 1, "self-" -> 1, "confidential" -> 
         1, "mistrustful" -> 1, "numerous" -> 1, "distracting" -> 1, "martin" -> 
         1, "live-streamed" -> 1, "greedy" -> 1, "quarterly" -> 1, "faulty" -> 
         1, "considerable" -> 1, "definitive" -> 1, "in-limbo" -> 1, 
         "rabbit-hole" -> 1, "tunnel-like" -> 1, "hollow" -> 1, "righthand" -> 
         1, "calloused" -> 1, "long-forgotten" -> 1, "immovable" -> 1, 
         "midwestern" -> 1, "stress-shopping" -> 1, "check-" -> 1, "rainy" -> 
         1, "lock-" -> 1, "labeled" -> 1, "gridded" -> 1, "win-win" -> 1, 
         "scarce" -> 1, "enthusiastic" -> 1, "vain" -> 1, "six-foot" -> 1, 
         "liquid" -> 1, "abusive" -> 1, "obedient" -> 1, "understandable" -> 
         1, "oppressed" -> 1, "wrongful" -> 1, "like" -> 1, "offline" -> 1, 
         "ovarian" -> 1, "psych" -> 1, "ever-changing" -> 1, "18-year-old" -> 
         1, "deadliest" -> 1, "introverted" -> 1, "apocalyptic" -> 1, 
         "shelter-in-place" -> 1, "resilient" -> 1, "abstract" -> 1, 
         "singular" -> 1, "sinful" -> 1, "bipolar" -> 1, "developmental" -> 1,
          "traumatic" -> 1, "burly" -> 1, "unrelenting" -> 1, "eight-month" -> 
         1, "littlest" -> 1, "social/psychological" -> 1, "cosmic" -> 1, 
         "insidious" -> 1], "InitialShape" -> 
       TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[144.00000000000003`], 
           TypeSystem`PackageScope`AtomShape[34]]], 20, 
         DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 1844], "Meta" -> 
       Association["ID" -> 169518291060136], "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[144.00000000000003`], 
           TypeSystem`PackageScope`AtomShape[34]]], 20, 
         DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 1844], "Path" -> {}, "BaseIndices" -> {}, 
       "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
       1844, "DataColumnCount" -> 1, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["new", 
                    Style[
                    "new", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["new"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["new"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["189"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["new"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["pandemic", 
                    Style[
                    "pandemic", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pandemic"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["pandemic"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["171"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["pandemic"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["able", 
                    Style[
                    "able", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["able"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["able"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["160"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["able"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["good", 
                    Style[
                    "good", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["good"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["good"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["104"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["good"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["social", 
                    Style[
                    "social", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["social"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["social"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["93"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["social"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["normal", 
                    Style[
                    "normal", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["normal"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["normal"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["79"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["normal"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["hard", 
                    Style[
                    "hard", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["hard"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["hard"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["79"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["hard"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["long", 
                    Style[
                    "long", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["long"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["long"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["74"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["long"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["positive", 
                    Style[
                    "positive", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["positive"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["positive"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["74"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["positive"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["little", 
                    Style[
                    "little", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["little"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["little"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["73"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["little"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["due", 
                    Style[
                    "due", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["due"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["due"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["71"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["due"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["past", 
                    Style[
                    "past", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["past"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["past"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["70"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["past"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["safe", 
                    Style[
                    "safe", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["safe"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["safe"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["64"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["safe"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["different", 
                    Style[
                    "different", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["different"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["different"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["62"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["different"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["sad", 
                    Style[
                    "sad", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["sad"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["sad"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["62"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["sad"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["white", 
                    Style[
                    "white", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["white"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["white"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["61"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["white"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["sure", 
                    Style[
                    "sure", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["sure"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["sure"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["55"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["sure"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["big", 
                    Style[
                    "big", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["big"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["big"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["55"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["big"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["second", 
                    Style[
                    "second", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["second"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["second"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["54"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["second"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["difficult", 
                    Style[
                    "difficult", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["difficult"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["difficult"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["53"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["difficult"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Deploy[
                Pane[
                 Row[{
                   Spacer[2], 
                   Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1844, 1], {1, 1844 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1844, 1], {1, 1844 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1844, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1844, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1844, 1], {1, 1844 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1844, 1], {1, 1844 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                   Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
               Background -> 
               RGBColor[
                0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
               Alignment -> {Left, Top}], SpanFromLeft}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
              "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
            Left, Dividers -> All, FrameStyle -> 
            GrayLevel[0.7490196078431373], 
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
           LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
           ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           If[GeneralUtilities`$DebugMode, 
            Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
              TypeSystem`NestedGrid`PackagePrivate`formatState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{221., {210.85052490234375`, 215.14947509765625`}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{221., {210.85052490234375`, 215.14947509765625`}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>
       Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Association[
      "InitialData" -> 
       Association[
        "people" -> 491, "time" -> 381, "week" -> 331, "day" -> 281, "home" -> 
         279, "covid" -> 247, "family" -> 209, "pandemic" -> 195, "year" -> 
         189, "life" -> 179, "friends" -> 174, "things" -> 174, "days" -> 158,
          "work" -> 136, "way" -> 132, "school" -> 119, "health" -> 119, 
         "vaccine" -> 117, "house" -> 113, "today" -> 113, "virus" -> 110, 
         "trump" -> 109, "mask" -> 104, "months" -> 103, "world" -> 102, 
         "weeks" -> 100, "lot" -> 99, "masks" -> 97, "news" -> 96, "thing" -> 
         91, "person" -> 84, "years" -> 83, "friend" -> 83, "care" -> 83, 
         "country" -> 82, "covid-19" -> 80, "husband" -> 75, "times" -> 75, 
         "election" -> 74, "food" -> 73, "job" -> 72, "zoom" -> 72, 
         "hospital" -> 70, "state" -> 68, "daughter" -> 67, "end" -> 66, 
         "christmas" -> 65, "mom" -> 64, "place" -> 64, "hours" -> 63, 
         "parents" -> 61, "cases" -> 60, "night" -> 59, "kids" -> 58, "love" -> 
         57, "president" -> 54, "sense" -> 54, "lives" -> 53, "hope" -> 53, 
         "office" -> 53, "course" -> 50, "dad" -> 50, "students" -> 49, 
         "quarantine" -> 49, "anxiety" -> 48, "yesterday" -> 46, "group" -> 
         46, "death" -> 46, "building" -> 46, "room" -> 46, "brother" -> 44, 
         "car" -> 44, "month" -> 44, "police" -> 44, "march" -> 44, "party" -> 
         42, "bit" -> 41, "vaccines" -> 41, "phone" -> 41, "test" -> 40, 
         "children" -> 40, "mother" -> 40, "mind" -> 40, "son" -> 40, 
         "classes" -> 39, "feeling" -> 39, "city" -> 39, "risk" -> 38, 
         "store" -> 38, "states" -> 38, "holiday" -> 38, "college" -> 38, 
         "ones" -> 38, "government" -> 37, "line" -> 37, "fact" -> 37, 
         "morning" -> 36, "summer" -> 35, "hand" -> 35, "coronavirus" -> 35, 
         "kind" -> 34, "members" -> 34, "birthday" -> 34, "point" -> 34, 
         "pain" -> 34, "ways" -> 34, "face" -> 34, "picture" -> 34, "case" -> 
         33, "lockdown" -> 33, "community" -> 33, "patients" -> 33, "contact" -> 
         33, "symptoms" -> 33, "area" -> 33, "biden" -> 32, "system" -> 32, 
         "photo" -> 32, "staff" -> 32, "town" -> 31, "distance" -> 31, 
         "future" -> 31, "wish" -> 31, "heart" -> 31, "senate" -> 30, 
         "window" -> 30, "rest" -> 30, "fear" -> 30, "change" -> 30, "snow" -> 
         29, "apartment" -> 29, "weather" -> 29, "beginning" -> 29, "nursing" -> 
         29, "call" -> 29, "order" -> 29, "numbers" -> 28, "space" -> 28, 
         "father" -> 28, "distancing" -> 28, "air" -> 27, "county" -> 27, 
         "rules" -> 27, "level" -> 27, "media" -> 27, "weekend" -> 27, "head" -> 
         27, "thoughts" -> 27, "loss" -> 26, "business" -> 26, "cancer" -> 26,
          "class" -> 26, "experience" -> 26, "spring" -> 26, "water" -> 26, 
         "woman" -> 26, "control" -> 26, "evening" -> 25, "situation" -> 25, 
         "results" -> 25, "winter" -> 25, "history" -> 25, "list" -> 25, 
         "couple" -> 25, "stress" -> 25, "service" -> 25, "shot" -> 25, "s" -> 
         24, "power" -> 24, "student" -> 24, "safety" -> 24, "video" -> 24, 
         "project" -> 24, "idea" -> 24, "places" -> 24, "lots" -> 24, 
         "isolation" -> 24, "music" -> 23, "support" -> 23, "restaurant" -> 
         23, "violence" -> 23, "reason" -> 23, "attention" -> 23, "problem" -> 
         23, "shopping" -> 23, "hands" -> 23, "feet" -> 23, "sister" -> 23, 
         "child" -> 23, "%" -> 22, "trip" -> 22, "fun" -> 22, "light" -> 22, 
         "workers" -> 22, "teachers" -> 22, "information" -> 22, "art" -> 22, 
         "jobs" -> 22, "tomorrow" -> 22, "moment" -> 22, "man" -> 22, 
         "feelings" -> 22, "fatigue" -> 21, "activities" -> 21, "baby" -> 21, 
         "campus" -> 21, "teacher" -> 21, "joy" -> 21, "university" -> 21, 
         "republicans" -> 21, "deaths" -> 21, "number" -> 21, "online" -> 21, 
         "aunt" -> 21, "disease" -> 21, "walk" -> 21, "restrictions" -> 21, 
         "guess" -> 21, "appointment" -> 21, "vaccination" -> 20, "court" -> 
         20, "stores" -> 20, "relief" -> 20, "law" -> 20, "plans" -> 20, 
         "access" -> 20, "wife" -> 20, "wave" -> 20, "hour" -> 20, "living" -> 
         20, "semester" -> 20, "events" -> 20, "journal" -> 20, "schools" -> 
         20, "park" -> 20, "hug" -> 20, "administration" -> 20, "plan" -> 20, 
         "post" -> 19, "front" -> 19, "eyes" -> 19, "sun" -> 19, "dream" -> 
         19, "right" -> 19, "paper" -> 19, "peace" -> 19, "body" -> 19, 
         "doctor" -> 19, "george" -> 19, "treatment" -> 18, "tests" -> 18, 
         "emotions" -> 18, "sadness" -> 18, "thanksgiving" -> 18, "families" -> 
         18, "event" -> 18, "god" -> 18, "door" -> 18, "nation" -> 18, 
         "money" -> 18, "pence" -> 17, "process" -> 17, "dose" -> 17, 
         "island" -> 17, "restaurants" -> 17, "age" -> 17, "lack" -> 17, 
         "gift" -> 17, "infection" -> 17, "depression" -> 17, "georgia" -> 16,
          "congress" -> 16, "talk" -> 16, "email" -> 16, "blood" -> 16, 
         "library" -> 16, "issues" -> 16, "visit" -> 16, "fall" -> 16, 
         "effort" -> 16, "visits" -> 16, "need" -> 16, "teaching" -> 16, 
         "precautions" -> 16, "testing" -> 16, "doctors" -> 16, "tv" -> 15, 
         "tree" -> 15, "floor" -> 15, "program" -> 15, "reality" -> 15, 
         "computer" -> 15, "halloween" -> 15, "dc" -> 15, "stuff" -> 15, 
         "nurse" -> 15, "surprise" -> 15, "piece" -> 15, "beauty" -> 15, 
         "gathering" -> 15, "governor" -> 15, "words" -> 15, "department" -> 
         15, "grief" -> 15, "gatherings" -> 15, "issue" -> 15, 
         "transportation" -> 15, "facebook" -> 15, "minutes" -> 15, 
         "interactions" -> 15, "amount" -> 15, "residents" -> 15, "exposure" -> 
         15, "break" -> 15, "bed" -> 15, "neighborhood" -> 15, "travel" -> 15,
          "sketch" -> 14, "help" -> 14, "supporters" -> 14, "americans" -> 14,
          "debate" -> 14, "grandparents" -> 14, "books" -> 14, "women" -> 14, 
         "massachusetts" -> 14, "nature" -> 14, "entry" -> 14, "windows" -> 
         14, "grocery" -> 14, "uncertainty" -> 14, "parts" -> 14, "internet" -> 
         14, "leadership" -> 14, "guard" -> 14, "appointments" -> 14, 
         "neighbors" -> 14, "corona" -> 14, "energy" -> 14, "supplies" -> 14, 
         "self" -> 14, "items" -> 14, "doses" -> 13, "response" -> 13, 
         "studio" -> 13, "article" -> 13, "cat" -> 13, "matter" -> 13, 
         "facility" -> 13, "york" -> 13, "effects" -> 13, "game" -> 13, 
         "chance" -> 13, "crisis" -> 13, "ability" -> 13, "wall" -> 13, 
         "memory" -> 13, "data" -> 13, "worker" -> 13, "chair" -> 13, 
         "problems" -> 13, "gas" -> 13, "parties" -> 13, "israel" -> 13, 
         "road" -> 13, "heat" -> 13, "moments" -> 13, "lines" -> 13, "season" -> 
         13, "america" -> 13, "homes" -> 13, "climate" -> 13, "coffee" -> 13, 
         "freedom" -> 13, "healthcare" -> 13, "thanks" -> 13, "impeachment" -> 
         12, "uk" -> 12, "clients" -> 12, "australia" -> 12, "rate" -> 12, 
         "plane" -> 12, "flu" -> 12, "church" -> 12, "fever" -> 12, "site" -> 
         12, "result" -> 12, "question" -> 12, "supply" -> 12, "action" -> 12,
          "market" -> 12, "services" -> 12, "option" -> 12, "fire" -> 12, 
         "groups" -> 12, "storm" -> 12, "sky" -> 12, "middle" -> 12, 
         "possibility" -> 12, "household" -> 12, "changes" -> 12, "story" -> 
         12, "education" -> 12, "spread" -> 12, "hospitals" -> 12, "capital" -> 
         11, "hold" -> 11, "leader" -> 11, "breath" -> 11, "shots" -> 11, 
         "center" -> 11, "quality" -> 11, "rights" -> 11, "efforts" -> 11, 
         "wing" -> 11, "senators" -> 11, "kinds" -> 11, "men" -> 11, 
         "position" -> 11, "coworkers" -> 11, "stories" -> 11, "colors" -> 11,
          "sort" -> 11, "houses" -> 11, "nose" -> 11, "vote" -> 11, 
         "nightmare" -> 11, "terms" -> 11, "screen" -> 11, "comfort" -> 11, 
         "date" -> 11, "shop" -> 11, "shops" -> 11, "youtube" -> 11, 
         "pressure" -> 11, "term" -> 11, "r" -> 11, "nights" -> 11, "past" -> 
         11, "deal" -> 11, "garden" -> 11, "ny" -> 11, "outbreak" -> 11, 
         "justice" -> 11, "businesses" -> 11, "land" -> 11, "boss" -> 11, 
         "miles" -> 11, "challenge" -> 11, "countries" -> 11, "effect" -> 11, 
         "gloves" -> 11, "airport" -> 10, "page" -> 10, "measures" -> 10, 
         "message" -> 10, "politics" -> 10, "meal" -> 10, "challenges" -> 10, 
         "transition" -> 10, "partner" -> 10, "tears" -> 10, "holidays" -> 10,
          "shift" -> 10, "notice" -> 10, "dining" -> 10, "hate" -> 10, 
         "concerns" -> 10, "temperature" -> 10, "thousands" -> 10, "icu" -> 
         10, "rates" -> 10, "guidelines" -> 10, "conversation" -> 10, "cars" -> 
         10, "funeral" -> 10, "chat" -> 10, "stage" -> 10, "hall" -> 10, 
         "niece" -> 10, "surge" -> 10, "presence" -> 10, "majority" -> 10, 
         "goodbye" -> 10, "sight" -> 10, "concern" -> 10, "street" -> 10, 
         "color" -> 10, "income" -> 10, "girlfriend" -> 10, "games" -> 10, 
         "none" -> 10, "faces" -> 10, "society" -> 10, "opportunity" -> 10, 
         "afternoon" -> 10, "therapist" -> 10, "china" -> 10, "protests" -> 
         10, "experiences" -> 10, "jan" -> 9, "eve" -> 9, "entries" -> 9, 
         "flight" -> 9, "planes" -> 9, "t" -> 9, "note" -> 9, "attack" -> 9, 
         "act" -> 9, "pelosi" -> 9, "website" -> 9, "democracy" -> 9, 
         "trouble" -> 9, "democrats" -> 9, "text" -> 9, "relatives" -> 9, 
         "lunch" -> 9, "doubt" -> 9, "camera" -> 9, "economy" -> 9, "bubble" -> 
         9, "housing" -> 9, "type" -> 9, "conditions" -> 9, "start" -> 9, 
         "eye" -> 9, "conversations" -> 9, "vacation" -> 9, "throat" -> 9, 
         "learning" -> 9, "delivery" -> 9, "cooking" -> 9, "emergency" -> 9, 
         "dreams" -> 9, "illness" -> 9, "calls" -> 9, "dinner" -> 9, "book" -> 
         9, "birds" -> 9, "projects" -> 9, "word" -> 9, "worry" -> 9, 
         "reading" -> 9, "environment" -> 9, "statistics" -> 9, "clinic" -> 9,
          "ground" -> 9, "darkness" -> 9, "thought" -> 9, "half" -> 9, 
         "choice" -> 9, "nyc" -> 9, "$" -> 9, "bathroom" -> 9, "dogs" -> 9, 
         "security" -> 9, "exercise" -> 9, "chaos" -> 9, "pictures" -> 9, 
         "streets" -> 9, "schedule" -> 9, "pace" -> 9, "war" -> 9, "movie" -> 
         9, "dog" -> 9, "boyfriend" -> 9, "spaces" -> 9, "questions" -> 9, 
         "caption" -> 8, "mob" -> 8, "certification" -> 8, "grandmother" -> 8,
          "tunnel" -> 8, "crowd" -> 8, "movies" -> 8, "account" -> 8, "guy" -> 
         8, "direction" -> 8, "folks" -> 8, "film" -> 8, "artist" -> 8, 
         "struggle" -> 8, "american" -> 8, "amendment" -> 8, "decorations" -> 
         8, "chief" -> 8, "panic" -> 8, "reports" -> 8, "form" -> 8, "laugh" -> 
         8, "signs" -> 8, "votes" -> 8, "elections" -> 8, "videos" -> 8, 
         "meetings" -> 8, "twitter" -> 8, "patient" -> 8, "cabinet" -> 8, 
         "leaves" -> 8, "vibrancy" -> 8, "sister-in-law" -> 8, "name" -> 8, 
         "photos" -> 8, "difference" -> 8, "." -> 8, "wonder" -> 8, "rain" -> 
         8, "arms" -> 8, "spouse" -> 8, "hundreds" -> 8, "racism" -> 8, 
         "rooms" -> 8, "washington" -> 8, "groceries" -> 8, "table" -> 8, 
         "lab" -> 8, "zone" -> 8, "purpose" -> 8, "failure" -> 8, "texas" -> 
         8, "worries" -> 8, "train" -> 8, "sign" -> 8, "ipad" -> 8, "blm" -> 
         8, "classroom" -> 8, "memories" -> 8, "top" -> 8, "customers" -> 8, 
         "cards" -> 8, "member" -> 8, "mood" -> 8, "connections" -> 8, 
         "behavior" -> 8, "degree" -> 8, "sleep" -> 8, "excitement" -> 8, 
         "mess" -> 8, "connection" -> 8, "circle" -> 8, "outside" -> 8, 
         "cities" -> 8, "shit" -> 8, "flowers" -> 8, "loneliness" -> 8, 
         "speech" -> 8, "injury" -> 8, "facetime" -> 8, "return" -> 8, "bag" -> 
         8, "systems" -> 8, "sanitizer" -> 8, "aspects" -> 8, "gym" -> 8, 
         "mine" -> 8, "perth" -> 7, "inauguration" -> 7, "nancy" -> 7, "link" -> 
         7, "bank" -> 7, "threat" -> 7, "evidence" -> 7, "pfizer" -> 7, 
         "\[Bullet]" -> 7, "skin" -> 7, "lights" -> 7, "nyt" -> 7, "research" -> 
         7, "dances" -> 7, "shadow" -> 7, "steps" -> 7, "minute" -> 7, 
         "celebration" -> 7, "pizza" -> 7, "practice" -> 7, "trauma" -> 7, 
         "c" -> 7, "race" -> 7, "drive" -> 7, "messages" -> 7, "ton" -> 7, 
         "harris" -> 7, "tonight" -> 7, "brazil" -> 7, "pleasure" -> 7, "s." -> 
         7, "singing" -> 7, "stream" -> 7, "tier" -> 7, "ballot" -> 7, 
         "levels" -> 7, "inability" -> 7, "citizens" -> 7, "flag" -> 7, 
         "version" -> 7, "circumstances" -> 7, "bay" -> 7, "sea" -> 7, "b" -> 
         7, "touch" -> 7, "garage" -> 7, "rally" -> 7, "voting" -> 7, "offer" -> 
         7, "taylor" -> 7, "neighbor" -> 7, "rbg" -> 7, "girl" -> 7, 
         "fireworks" -> 7, "district" -> 7, "insurance" -> 7, "cell" -> 7, 
         "roommates" -> 7, "meeting" -> 7, "shock" -> 7, "basis" -> 7, 
         "risks" -> 7, "seat" -> 7, "spot" -> 7, "cousins" -> 7, "woods" -> 7,
          "population" -> 7, "conspiracy" -> 7, "grandchildren" -> 7, 
         "public" -> 7, "bills" -> 7, "doors" -> 7, "memorial" -> 7, "lake" -> 
         7, "midst" -> 7, "grade" -> 7, "foot" -> 7, "turn" -> 7, "play" -> 7,
          "kid" -> 7, "mode" -> 7, "communication" -> 7, "mass" -> 7, 
         "daughters" -> 7, "answer" -> 7, "painting" -> 7, "sunset" -> 7, 
         "theories" -> 7, "labor" -> 7, "hair" -> 7, "leaders" -> 7, "pm" -> 
         7, "needs" -> 7, "medicine" -> 7, "science" -> 7, "decision" -> 7, 
         "actions" -> 7, "headache" -> 7, "faith" -> 7, "truth" -> 7, 
         "retirement" -> 7, "colleagues" -> 7, "privilege" -> 7, "surgery" -> 
         7, "board" -> 7, "danger" -> 7, "humans" -> 7, "image" -> 7, "phase" -> 
         7, "variants" -> 6, "sites" -> 6, "dems" -> 6, "somebody" -> 6, 
         "insurrection" -> 6, "siege" -> 6, "desk" -> 6, "sedition" -> 6, 
         "facilities" -> 6, "distribution" -> 6, "outrage" -> 6, "cousin" -> 
         6, "officials" -> 6, "toll" -> 6, "cnn" -> 6, "presents" -> 6, 
         "cake" -> 6, "studies" -> 6, "regime" -> 6, "relationship" -> 6, 
         "clinics" -> 6, "worlds" -> 6, "chest" -> 6, "cost" -> 6, "speaker" -> 
         6, "losses" -> 6, "mcconnell" -> 6, "opinion" -> 6, "infections" -> 
         6, "language" -> 6, "michigan" -> 6, "tweets" -> 6, "diabetes" -> 6, 
         "box" -> 6, "card" -> 6, "disaster" -> 6, "p" -> 6, "mail" -> 6, 
         "charge" -> 6, "lies" -> 6, "stomach" -> 6, "soul" -> 6, "articles" -> 
         6, "spending" -> 6, "employee" -> 6, "roof" -> 6, "heads" -> 6, 
         "canada" -> 6, "d" -> 6, "birth" -> 6, "strangers" -> 6, "points" -> 
         6, "forces" -> 6, "visitors" -> 6, "model" -> 6, "complications" -> 
         6, "moon" -> 6, "decisions" -> 6, "ma" -> 6, "forest" -> 6, 
         "collage" -> 6, "errands" -> 6, "respect" -> 6, "circles" -> 6, 
         "lung" -> 6, "technology" -> 6, "impact" -> 6, "value" -> 6, 
         "camping" -> 6, "opposite" -> 6, "kitchen" -> 6, "jersey" -> 6, 
         "study" -> 6, "earth" -> 6, "dance" -> 6, "camp" -> 6, "advice" -> 6,
          "voice" -> 6, "glasses" -> 6, "amazon" -> 6, "beach" -> 6, "nurses" -> 
         6, "wine" -> 6, "waves" -> 6, "band" -> 6, "pages" -> 6, "florida" -> 
         6, "decades" -> 6, "understanding" -> 6, "relationships" -> 6, 
         "attacks" -> 6, "yard" -> 6, "graduation" -> 6, "rage" -> 6, 
         "battle" -> 6, "cleaning" -> 6, "company" -> 6, "north" -> 6, "use" -> 
         6, "trees" -> 6, "generations" -> 6, "spike" -> 6, "thinking" -> 6, 
         "west" -> 6, "equipment" -> 6, "usa" -> 6, "accomplishment" -> 6, 
         "contacts" -> 6, "persons" -> 6, "guidance" -> 6, "farm" -> 6, 
         "cure" -> 6, "sisters" -> 6, "greece" -> 6, "india" -> 6, "sides" -> 
         6, "ride" -> 6, "bike" -> 6, "england" -> 6, "objects" -> 6, 
         "travels" -> 6, "bunch" -> 6, "philadelphia" -> 6, "websites" -> 5, 
         "guys" -> 5, "rioters" -> 5, "coup" -> 5, "channel" -> 5, 
         "protesters" -> 5, "rollout" -> 5, "boys" -> 5, "writer" -> 5, 
         "lover" -> 5, "wanamakers" -> 5, "check" -> 5, "session" -> 5, 
         "breeze" -> 5, "bow" -> 5, "dementia" -> 5, "chanukah" -> 5, 
         "movement" -> 5, "record" -> 5, "macy" -> 5, "advance" -> 5, "pay" -> 
         5, "bone" -> 5, "passing" -> 5, "treatments" -> 5, "vice" -> 5, 
         "assurance" -> 5, "guilt" -> 5, "realm" -> 5, "fauci" -> 5, 
         "background" -> 5, "views" -> 5, "iran" -> 5, "campaign" -> 5, 
         "millions" -> 5, "policy" -> 5, "grandma" -> 5, "luck" -> 5, "keys" -> 
         5, "tables" -> 5, "obama" -> 5, "poem" -> 5, "fault" -> 5, "slide" -> 
         5, "prospect" -> 5, "joe" -> 5, "frustration" -> 5, "options" -> 5, 
         "courses" -> 5, "requirements" -> 5, "identity" -> 5, "drink" -> 5, 
         "grad" -> 5, "unity" -> 5, "policies" -> 5, "constitution" -> 5, 
         "normalcy" -> 5, "roads" -> 5, "brooklyn" -> 5, "professor" -> 5, 
         "dancing" -> 5, "sales" -> 5, "adult" -> 5, "chocolate" -> 5, "blow" -> 
         5, "bars" -> 5, "germany" -> 5, "meals" -> 5, "tension" -> 5, 
         "physicians" -> 5, "seminar" -> 5, "reporter" -> 5, "supremacy" -> 5,
          "shiva" -> 5, "queer" -> 5, "meds" -> 5, "rule" -> 5, "sigh" -> 5, 
         "fianc\[EAcute]" -> 5, "salt" -> 5, "journey" -> 5, "edge" -> 5, 
         "protocols" -> 5, "wait" -> 5, "employees" -> 5, "tent" -> 5, 
         "midnight" -> 5, "wedding" -> 5, "grandson" -> 5, "lady" -> 5, "run" -> 
         5, "acceptance" -> 5, "brain" -> 5, "ct" -> 5, "drinking" -> 5, 
         "row" -> 5, "letters" -> 5, "recipe" -> 5, "motivation" -> 5, 
         "anger" -> 5, "strength" -> 5, "shelter" -> 5, "dishes" -> 5, "set" -> 
         5, "notes" -> 5, "destruction" -> 5, "anticipation" -> 5, "damage" -> 
         5, "blessing" -> 5, "pool" -> 5, "spirits" -> 5, "walls" -> 5, 
         "realization" -> 5, "patience" -> 5, "subway" -> 5, "details" -> 5, 
         "structure" -> 5, "app" -> 5, "hugs" -> 5, "parking" -> 5, "chapter" -> 
         5, "plenty" -> 5, "cookies" -> 5, "vulnerability" -> 5, "diagnosis" -> 
         5, "transit" -> 5, "bus" -> 5, "texts" -> 5, "step" -> 5, "dates" -> 
         5, "girls" -> 5, "joke" -> 5, "trail" -> 5, "cheese" -> 5, 
         "reflection" -> 5, "knowledge" -> 5, "ppe" -> 5, "roll" -> 5, 
         "gifts" -> 5, "songs" -> 5, "lungs" -> 5, "coast" -> 5, "bread" -> 5,
          "photograph" -> 5, "contrast" -> 5, "goods" -> 5, "hell" -> 5, 
         "south" -> 5, "look" -> 5, "degrees" -> 5, "therapy" -> 5, "reasons" -> 
         5, "hatred" -> 5, "guns" -> 5, "situations" -> 5, "despair" -> 5, 
         "reaction" -> 5, "backyard" -> 5, "tradition" -> 5, "eating" -> 5, 
         "journaling" -> 5, "networks" -> 5, "coverage" -> 5, "resources" -> 
         5, "hit" -> 5, "siblings" -> 5, "noise" -> 5, "ok" -> 5, "luxury" -> 
         5, "interaction" -> 5, "parent" -> 5, "activity" -> 5, "murder" -> 5,
          "policeman" -> 5, "horror" -> 5, "quilt" -> 4, "boots" -> 4, 
         "quebec" -> 4, "e." -> 4, "disagreement" -> 4, "idiots" -> 4, 
         "enforcement" -> 4, "qanon" -> 4, "force" -> 4, "cruz" -> 4, 
         "assault" -> 4, "followers" -> 4, "angeles" -> 4, "los" -> 4, 
         "downtown" -> 4, "judge" -> 4, "offices" -> 4, "chambers" -> 4, 
         "roll-" -> 4, "standard" -> 4, "laundry" -> 4, "weekends" -> 4, 
         "hobbies" -> 4, "medications" -> 4, "pneumonia" -> 4, "fiance" -> 4, 
         "drop" -> 4, "hotel" -> 4, "blizzard" -> 4, "skills" -> 4, 
         "location" -> 4, "exchange" -> 4, "laptop" -> 4, "angel" -> 4, 
         "silver" -> 4, "gratitude" -> 4, "vaccinations" -> 4, "gun" -> 4, 
         "lord" -> 4, "sugar" -> 4, "differences" -> 4, "scenes" -> 4, 
         "survivor" -> 4, "workplace" -> 4, "affection" -> 4, "cheer" -> 4, 
         "tons" -> 4, "adults" -> 4, "hat" -> 4, "hotels" -> 4, "finding" -> 
         4, "celebrations" -> 4, "clothing" -> 4, "roommate" -> 4, 
         "awareness" -> 4, "shoulder" -> 4, "solidarity" -> 4, "albany" -> 4, 
         "nephew" -> 4, "president-elect" -> 4, "goodness" -> 4, "spray" -> 4,
          "theme" -> 4, "breakfast" -> 4, "couch" -> 4, "curfew" -> 4, "nh" -> 
         4, "style" -> 4, "dress" -> 4, "sunshine" -> 4, "cause" -> 4, 
         "limit" -> 4, "unrest" -> 4, "illinois" -> 4, "files" -> 4, 
         "culture" -> 4, "happiness" -> 4, "unit" -> 4, "ticket" -> 4, 
         "candy" -> 4, "reconstruction" -> 4, "re" -> 4, "verge" -> 4, "pod" -> 
         4, "nightmares" -> 4, "honor" -> 4, "j" -> 4, "protection" -> 4, 
         "shooting" -> 4, "pharmacy" -> 4, "blast" -> 4, "scenario" -> 4, 
         "reminder" -> 4, "rallies" -> 4, "lockdowns" -> 4, "focus" -> 4, 
         "exception" -> 4, "ice" -> 4, "period" -> 4, "era" -> 4, "hole" -> 4,
          "smell" -> 4, "occasion" -> 4, "request" -> 4, "races" -> 4, "view" -> 
         4, "senator" -> 4, "star" -> 4, "king" -> 4, "oxygen" -> 4, 
         "capacity" -> 4, "records" -> 4, "addition" -> 4, "professors" -> 4, 
         "plot" -> 4, "debates" -> 4, "burst" -> 4, "credit" -> 4, "terror" -> 
         4, "areas" -> 4, "phd" -> 4, "cycle" -> 4, "polls" -> 4, "stations" -> 
         4, "mountain" -> 4, "autumn" -> 4, "burden" -> 4, "boy" -> 4, "h" -> 
         4, "blanket" -> 4, "division" -> 4, "voters" -> 4, "violation" -> 4, 
         "crow" -> 4, "jim" -> 4, "apartments" -> 4, "routine" -> 4, 
         "seminars" -> 4, "mandate" -> 4, "oklahoma" -> 4, "smoke" -> 4, 
         "importance" -> 4, "swab" -> 4, "desire" -> 4, "burner" -> 4, 
         "suffering" -> 4, "length" -> 4, "instruction" -> 4, "lesson" -> 4, 
         "plants" -> 4, "transmission" -> 4, "status" -> 4, "buildings" -> 4, 
         "breaks" -> 4, "hospice" -> 4, "ceremony" -> 4, "patterns" -> 4, 
         "alcohol" -> 4, "material" -> 4, "exhaustion" -> 4, "traffic" -> 4, 
         "semblance" -> 4, "fears" -> 4, "calm" -> 4, "illnesses" -> 4, 
         "bananas" -> 4, "trash" -> 4, "dish" -> 4, "bedroom" -> 4, "healing" -> 
         4, "taste" -> 4, "professionals" -> 4, "trips" -> 4, "fine" -> 4, 
         "border" -> 4, "theatre" -> 4, "communities" -> 4, "discussion" -> 4,
          "mailman" -> 4, "brothers" -> 4, "insult" -> 4, "crowds" -> 4, 
         "patrons" -> 4, "fish" -> 4, "bipoc" -> 4, "supermarket" -> 4, 
         "driver" -> 4, "clouds" -> 4, "gardens" -> 4, "sanctuary" -> 4, 
         "ghost" -> 4, "imagination" -> 4, "lessons" -> 4, "statement" -> 4, 
         "tea" -> 4, "sources" -> 4, "buses" -> 4, "california" -> 4, "press" -> 
         4, "o" -> 4, "scene" -> 4, "highway" -> 4, "introvert" -> 4, 
         "iphone" -> 4, "seniors" -> 4, "gobus" -> 4, "television" -> 4, 
         "report" -> 4, "confidence" -> 4, "nhs" -> 4, "stay" -> 4, "inside" -> 
         4, "m" -> 4, "feel" -> 4, "void" -> 4, "absence" -> 4, "chances" -> 
         4, "hopes" -> 4, "spirit" -> 4, "priority" -> 4, "packages" -> 4, 
         "batch" -> 4, "pride" -> 4, "separation" -> 4, "stock" -> 4, 
         "dentist" -> 4, "size" -> 4, "insomnia" -> 4, "daycare" -> 4, 
         "refusal" -> 4, "images" -> 4, "pandemics" -> 4, "ignorance" -> 4, 
         "toilet" -> 4, "planet" -> 4, "field" -> 4, "residence" -> 4, 
         "century" -> 4, "means" -> 4, "protest" -> 4, "orders" -> 4, 
         "institutions" -> 4, "politicians" -> 4, "recovery" -> 4, "example" -> 
         4, "surfaces" -> 4, "sorts" -> 4, "programs" -> 4, "mexico" -> 4, 
         "offers" -> 3, "hey" -> 3, "darling" -> 3, "a4a" -> 3, "vortex" -> 3,
          "feb" -> 3, "psychologist" -> 3, "square" -> 3, "minister" -> 3, 
         "browser" -> 3, "penny" -> 3, "consults" -> 3, "nest" -> 3, "piano" -> 
         3, "funding" -> 3, "clock" -> 3, "divide" -> 3, "ranks" -> 3, 
         "seditionists" -> 3, "consultation" -> 3, "steam" -> 3, "crazies" -> 
         3, "riots" -> 3, "dod" -> 3, "jake" -> 3, "representatives" -> 3, 
         "hawley" -> 3, "secretary" -> 3, "wellness" -> 3, "ossoff" -> 3, 
         "riot" -> 3, "proceedings" -> 3, "wtf" -> 3, "design" -> 3, "desks" -> 
         3, "farewell" -> 3, "defense" -> 3, "flame" -> 3, "round" -> 3, 
         "moderna" -> 3, "working" -> 3, "moratorium" -> 3, "unemployment" -> 
         3, "conclusion" -> 3, "humanity" -> 3, "guild" -> 3, "physician" -> 
         3, "fights" -> 3, "eagle" -> 3, "d." -> 3, "xmas" -> 3, "j." -> 3, 
         "ta" -> 3, "kingdom" -> 3, "silence" -> 3, "pulse" -> 3, "cold" -> 3,
          "drip" -> 3, "symbols" -> 3, "streaming" -> 3, "candle" -> 3, 
         "menorah" -> 3, "strain" -> 3, "broadcast" -> 3, "prayer" -> 3, 
         "preparation" -> 3, "planning" -> 3, "historians" -> 3, "experts" -> 
         3, "europe" -> 3, "flood" -> 3, "asthma" -> 3, "households" -> 3, 
         "encounters" -> 3, "range" -> 3, "series" -> 3, "insulin" -> 3, 
         "scientists" -> 3, "flights" -> 3, "b." -> 3, "grammar" -> 3, "beds" -> 
         3, "toddler" -> 3, "total" -> 3, "saw" -> 3, "bottle" -> 3, "pa" -> 
         3, "trust" -> 3, "k." -> 3, "talks" -> 3, "positives" -> 3, 
         "palette" -> 3, "internship" -> 3, "episodes" -> 3, "nonsense" -> 3, 
         "consequences" -> 3, "machine" -> 3, "papers" -> 3, "everyday" -> 3, 
         "prevention" -> 3, "pray" -> 3, "caution" -> 3, "grandfather" -> 3, 
         "paris" -> 3, "instance" -> 3, "constraint" -> 3, "horns" -> 3, 
         "sets" -> 3, "landlords" -> 3, "hospitalizations" -> 3, "n" -> 3, 
         "clips" -> 3, "drug" -> 3, "rhetoric" -> 3, "paint" -> 3, "hats" -> 
         3, "fence" -> 3, "conflict" -> 3, "benefits" -> 3, "reunion" -> 3, 
         "host" -> 3, "coordinator" -> 3, "volunteer" -> 3, "outreach" -> 3, 
         "cream" -> 3, "log" -> 3, "visitor" -> 3, "regulations" -> 3, "nazi" -> 
         3, "village" -> 3, "operation" -> 3, "colleague" -> 3, "closeness" -> 
         3, "backlash" -> 3, "encouragement" -> 3, "bacurau" -> 3, 
         "organization" -> 3, "yoga" -> 3, "quarters" -> 3, "noses" -> 3, 
         "condition" -> 3, "animals" -> 3, "device" -> 3, "crew" -> 3, "pcr" -> 
         3, "accounts" -> 3, "booking" -> 3, "l" -> 3, "intensity" -> 3, 
         "wifi" -> 3, "improvement" -> 3, "swimming" -> 3, "emptiness" -> 3, 
         "divisiveness" -> 3, "medication" -> 3, "savings" -> 3, "daylight" -> 
         3, "hoax" -> 3, "accident" -> 3, "swarm" -> 3, "optimism" -> 3, 
         "scale" -> 3, "count" -> 3, "sanity" -> 3, "outbreaks" -> 3, 
         "closet" -> 3, "quote" -> 3, "highlight" -> 3, "outing" -> 3, "pop" -> 
         3, "indifference" -> 3, "rise" -> 3, "rabbit" -> 3, "path" -> 3, 
         "poems" -> 3, "responsibilities" -> 3, "mitch" -> 3, "meantime" -> 3,
          "lincoln" -> 3, "corruption" -> 3, "trade" -> 3, "michael" -> 3, 
         "kamala" -> 3, "precaution" -> 3, "team" -> 3, "management" -> 3, 
         "privacy" -> 3, "gold" -> 3, "funds" -> 3, "item" -> 3, "spreader" -> 
         3, "mayor" -> 3, "walter" -> 3, "politician" -> 3, "emails" -> 3, 
         "song" -> 3, "turntables" -> 3, "vinyl" -> 3, "fraud" -> 3, 
         "percent" -> 3, "researchers" -> 3, "success" -> 3, "aid" -> 3, 
         "n95" -> 3, "ups" -> 3, "documents" -> 3, "homeless" -> 3, "favor" -> 
         3, "synagogue" -> 3, "sociopath" -> 3, "budget" -> 3, "dissertation" -> 
         3, "barriers" -> 3, "gop" -> 3, "resident" -> 3, "banner" -> 3, 
         "lawn" -> 3, "narrative" -> 3, "virginia" -> 3, "mountains" -> 3, 
         "bitch" -> 3, "connecticut" -> 3, "display" -> 3, "share" -> 3, 
         "costumes" -> 3, "pt" -> 3, "voter" -> 3, "lol" -> 3, "extent" -> 3, 
         "opening" -> 3, "assignments" -> 3, "homework" -> 3, "move" -> 3, 
         "prison" -> 3, "handful" -> 3, "barrett" -> 3, "coney" -> 3, "amy" -> 
         3, "chain" -> 3, "rent" -> 3, ":)" -> 3, "glass" -> 3, "purchase" -> 
         3, "blessings" -> 3, "populations" -> 3, "spilling" -> 3, 
         "commitment" -> 3, "postcards" -> 3, "footage" -> 3, "suit" -> 3, 
         "voices" -> 3, "speeches" -> 3, "supreme" -> 3, "packing" -> 3, 
         "agencies" -> 3, "laws" -> 3, "departments" -> 3, "breakdown" -> 3, 
         "agenda" -> 3, "sidewalk" -> 3, "profile" -> 3, "anthropologist" -> 
         3, "elders" -> 3, "nuts" -> 3, "pond" -> 3, "hometown" -> 3, "tribe" -> 
         3, "bullshit" -> 3, "proximity" -> 3, "dozen" -> 3, "ruth" -> 3, 
         "pick" -> 3, "greed" -> 3, "seasons" -> 3, "universities" -> 3, 
         "football" -> 3, "grader" -> 3, "hybrid" -> 3, "outfit" -> 3, 
         "struggles" -> 3, "bodies" -> 3, "fate" -> 3, "contracting" -> 3, 
         "career" -> 3, "traditions" -> 3, "ventilator" -> 3, "station" -> 3, 
         "hobby" -> 3, "cane" -> 3, "clue" -> 3, "roots" -> 3, "pie" -> 3, 
         "committee" -> 3, "hospitalization" -> 3, "route" -> 3, "yo" -> 3, 
         "portion" -> 3, "choices" -> 3, "symptom" -> 3, "allergies" -> 3, 
         "kindness" -> 3, "interests" -> 3, "expense" -> 3, "fields" -> 3, 
         "protestors" -> 3, "stick" -> 3, "shield" -> 3, "standing" -> 3, 
         "pic" -> 3, "bench" -> 3, "curse" -> 3, "temperatures" -> 3, "q-tip" -> 
         3, "types" -> 3, "gear" -> 3, "tragedy" -> 3, "drugs" -> 3, "names" -> 
         3, "calendar" -> 3, "swings" -> 3, "contagion" -> 3, "educator" -> 3,
          "source" -> 3, "garbage" -> 3, "sink" -> 3, "mug" -> 3, "counter" -> 
         3, "bowl" -> 3, "section" -> 3, "wood" -> 3, "boxes" -> 3, 
         "routines" -> 3, "fishing" -> 3, "checks" -> 3, "governments" -> 3, 
         "mouth" -> 3, "recall" -> 3, "ban" -> 3, "mourning" -> 3, "pause" -> 
         3, "concert" -> 3, "performances" -> 3, "ass" -> 3, "shutdown" -> 3, 
         "rainbow" -> 3, "tornado" -> 3, "henry" -> 3, "agony" -> 3, "breast" -> 
         3, "santa" -> 3, "track" -> 3, "arrest" -> 3, "code" -> 3, 
         "characters" -> 3, "sound" -> 3, "sounds" -> 3, "touches" -> 3, 
         "role" -> 3, "humor" -> 3, "suicide" -> 3, "regard" -> 3, "corner" -> 
         3, "seats" -> 3, "alternative" -> 3, "factors" -> 3, "ocean" -> 3, 
         "nana" -> 3, "cafes" -> 3, "authority" -> 3, "hints" -> 3, 
         "combination" -> 3, "y" -> 3, "interview" -> 3, "stop" -> 3, 
         "bakery" -> 3, "farmers" -> 3, "radio" -> 3, "demonstrations" -> 3, 
         "officer" -> 3, "md" -> 3, "podiatry" -> 3, "*" -> 3, "mistake" -> 3,
          "weight" -> 3, "solitude" -> 3, "minds" -> 3, "arts" -> 3, "ghosts" -> 
         3, "universe" -> 3, "debt" -> 3, "generation" -> 3, "beaches" -> 3, 
         "sake" -> 3, "wishes" -> 3, "pantries" -> 3, "individuals" -> 3, 
         "basement" -> 3, "doubts" -> 3, "forbid" -> 3, "flatmate" -> 3, 
         "exams" -> 3, "ages" -> 3, "release" -> 3, "wheel" -> 3, "stretch" -> 
         3, "contributions" -> 3, "balloon" -> 3, "determination" -> 3, 
         "breathing" -> 3, "integrity" -> 3, "soil" -> 3, "costco" -> 3, 
         "bam" -> 3, "in-laws" -> 3, "property" -> 3, "dread" -> 3, 
         "pollution" -> 3, "spouses" -> 3, "chores" -> 3, "chef" -> 3, "bill" -> 
         3, "crash" -> 3, "delhi" -> 3, "africa" -> 3, "covid19" -> 3, 
         "participation" -> 3, "sports" -> 3, "spain" -> 3, "passport" -> 3, 
         "values" -> 3, "spreading" -> 3, "empathy" -> 3, "neck" -> 3, 
         "species" -> 2, "passage" -> 2, "republican" -> 2, "blank" -> 2, 
         "onions" -> 2, "hallway" -> 2, "before-times" -> 2, "neighbourhood" -> 
         2, "commute" -> 2, "bowel" -> 2, "diet" -> 2, "outage" -> 2, 
         "fireplace" -> 2, "administrators" -> 2, "beaumont" -> 2, "paso" -> 
         2, "flower" -> 2, "walnut" -> 2, "presto" -> 2, "houseparty" -> 2, 
         "adam4adam" -> 2, "marriage" -> 2, "fits" -> 2, "playlist" -> 2, 
         "racist" -> 2, "haiku" -> 2, "traumas" -> 2, "dancer" -> 2, "juice" -> 
         2, "carrier" -> 2, "laughter" -> 2, "adventures" -> 2, "getaway" -> 
         2, "hearings" -> 2, "guests" -> 2, "register" -> 2, "comments" -> 2, 
         "height" -> 2, "masking" -> 2, "sewing" -> 2, "cats" -> 2, "trial" -> 
         2, "cowboys" -> 2, "jesus" -> 2, "slogans" -> 2, "budgets" -> 2, 
         "explosion" -> 2, "archiving" -> 2, "jar" -> 2, "patrick" -> 2, 
         "dancers" -> 2, "sheep" -> 2, "instructor" -> 2, "skylights" -> 2, 
         "barn" -> 2, "exploration" -> 2, "bermuda" -> 2, "childcare" -> 2, 
         "havoc" -> 2, "alzheimer" -> 2, "vietnam" -> 2, "mary" -> 2, "wits" -> 
         2, "rabin" -> 2, "makeup" -> 2, "pickup" -> 2, "curbside" -> 2, 
         "lolol" -> 2, "greene" -> 2, "organizer" -> 2, "bush" -> 2, "fires" -> 
         2, "marjorie" -> 2, "providers" -> 2, "zoo" -> 2, "slots" -> 2, 
         "funk" -> 2, "freezing" -> 2, "elevator" -> 2, "aviv" -> 2, "tel" -> 
         2, "mittens" -> 2, "sanders" -> 2, "springs" -> 2, "boredom" -> 2, 
         "gardening" -> 2, "toys" -> 2, "mommy" -> 2, "telephone" -> 2, "sum" -> 
         2, "disbelief" -> 2, "1c" -> 2, "gp" -> 2, "comorbidities" -> 2, 
         "airbnb" -> 2, "production" -> 2, "hop" -> 2, "confusion" -> 2, 
         "closing" -> 2, "facts" -> 2, "layers" -> 2, "premier" -> 2, "1a" -> 
         2, "slap" -> 2, "onset" -> 2, "to-" -> 2, "respite" -> 2, "jam" -> 2,
          "terrorists" -> 2, "brexit" -> 2, "pilots" -> 2, "army" -> 2, 
         "info" -> 2, "paperwork" -> 2, "journalists" -> 2, "hyperbole" -> 2, 
         "mentality" -> 2, "biden/harris" -> 2, "sane" -> 2, "loons" -> 2, 
         "rnc" -> 2, "goons" -> 2, "f**k" -> 2, "traitor" -> 2, "frenzy" -> 2,
          "assholes" -> 2, "guards" -> 2, "chairs" -> 2, "yay" -> 2, 
         "invasion" -> 2, "nan" -> 2, "boarders" -> 2, "academi" -> 2, 
         "supremacists" -> 2, "procedure" -> 2, "fbi" -> 2, "bigo" -> 2, 
         "richard" -> 2, "founder" -> 2, "waist" -> 2, "angeli" -> 2, 
         "echoes" -> 2, "supporter" -> 2, "irregularities" -> 2, "compromise" -> 
         2, "pennsylvania" -> 2, "josh" -> 2, "badge" -> 2, "counting" -> 2, 
         "commerce" -> 2, "perdue" -> 2, "david" -> 2, "jon" -> 2, "miami" -> 
         2, "variant" -> 2, "internment" -> 2, "guardian" -> 2, "collector" -> 
         2, "newspaper" -> 2, "decline" -> 2, "shelf" -> 2, "stride" -> 2, 
         "antibodies" -> 2, "lottery" -> 2, "entertainment" -> 2, "figures" -> 
         2, "chart" -> 2, "betsy" -> 2, "objections" -> 2, "blame" -> 2, 
         "victor" -> 2, "battery" -> 2, "cellphone" -> 2, "maga" -> 2, "nbc" -> 
         2, "watch" -> 2, "maniacs" -> 2, "warnock" -> 2, "firing" -> 2, 
         "fuck" -> 2, "astley" -> 2, "rick" -> 2, "hangouts" -> 2, "dive" -> 
         2, "meaning" -> 2, "prostate" -> 2, "branches" -> 2, "tiredness" -> 
         2, "phones" -> 2, "alaska" -> 2, "glimpses" -> 2, "qualities" -> 2, 
         "mentoring" -> 2, "partnership" -> 2, "overflow" -> 2, "challah" -> 
         2, "son-in-law" -> 2, "lifestyle" -> 2, "balls" -> 2, "caregiver" -> 
         2, "mortality" -> 2, "principle" -> 2, "wage" -> 2, "hardware" -> 2, 
         "coach" -> 2, "substitute" -> 2, "dangers" -> 2, "participants" -> 2,
          "split" -> 2, "disorder" -> 2, "accent" -> 2, "min" -> 2, "ending" -> 
         2, "cry" -> 2, "evictions" -> 2, "glitches" -> 2, "draft" -> 2, 
         "legislation" -> 2, "spills" -> 2, "e-books" -> 2, "mysteries" -> 2, 
         "ham" -> 2, "officers" -> 2, "search" -> 2, "dr." -> 2, "mandates" -> 
         2, "wapo" -> 2, "directions" -> 2, "john" -> 2, "coat" -> 2, 
         "staging" -> 2, "yikes" -> 2, "appreciation" -> 2, "responsibility" -> 
         2, "clerk" -> 2, "headlines" -> 2, "leave" -> 2, "cover" -> 2, "n." -> 
         2, "sketches" -> 2, "paycheck" -> 2, "telehealth" -> 2, "button" -> 
         2, "pools" -> 2, "lucidity" -> 2, "misery" -> 2, "scotland" -> 2, 
         "landlord" -> 2, "meditation" -> 2, "matters" -> 2, "telemedicine" -> 
         2, "seconds" -> 2, "togehter" -> 2, "ornaments" -> 2, "sweat" -> 2, 
         "ribbon" -> 2, "positivity" -> 2, "washers" -> 2, "sex" -> 2, "kiss" -> 
         2, "awe" -> 2, "hebrew" -> 2, "hanukkah" -> 2, "storage" -> 2, 
         "discomfort" -> 2, "whomever" -> 2, "hamilton" -> 2, "surprises" -> 
         2, "knees" -> 2, "toy" -> 2, "marshall" -> 2, "applesauce" -> 2, 
         "latkes" -> 2, "parallels" -> 2, "shipment" -> 2, "dark" -> 2, 
         "brightness" -> 2, "walk-" -> 2, "caroling" -> 2, "lighting" -> 2, 
         "groundhog" -> 2, "shoe" -> 2, "tech" -> 2, "positions" -> 2, 
         "necessity" -> 2, "adaptability" -> 2, "60s" -> 2, "origin" -> 2, 
         "fight" -> 2, "ptsd" -> 2, "societies" -> 2, "extremists" -> 2, 
         "slogan" -> 2, "sower" -> 2, "hike" -> 2, "attempts" -> 2, "wuhan" -> 
         2, "journalist" -> 2, "qum" -> 2, "discourses" -> 2, "reflections" -> 
         2, "profession" -> 2, "hawaii" -> 2, "concerts" -> 2, 
         "opportunities" -> 2, "butterflies" -> 2, "parade" -> 2, "horizon" -> 
         2, "courage" -> 2, "opposition" -> 2, "stone" -> 2, "bits" -> 2, 
         "paths" -> 2, "dusk" -> 2, "glimmer" -> 2, "pumpkin" -> 2, "damn" -> 
         2, "immunity" -> 2, "brother-in-law" -> 2, "employment" -> 2, 
         "pocket" -> 2, "sighting" -> 2, "burnout" -> 2, "m." -> 2, "mark" -> 
         2, "cues" -> 2, "discussions" -> 2, "ph.d." -> 2, "surface" -> 2, 
         "certificate" -> 2, "hooves" -> 2, "recipes" -> 2, "surfing" -> 2, 
         "retreat" -> 2, "anniversary" -> 2, "rumors" -> 2, "loyalists" -> 2, 
         "counts" -> 2, "pack" -> 2, "c." -> 2, "smallpox" -> 2, "co-workers" -> 
         2, "prosperity" -> 2, "disability" -> 2, "longing" -> 2, "heck" -> 2,
          "indiana" -> 2, "flash" -> 2, "bottles" -> 2, "champagne" -> 2, 
         "decorum" -> 2, "nov." -> 2, "companion" -> 2, "grounds" -> 2, 
         "couples" -> 2, "invitation" -> 2, "ferrets" -> 2, "tapes" -> 2, 
         "banners" -> 2, "disco" -> 2, "birthdays" -> 2, "gender" -> 2, 
         "announcement" -> 2, "distraction" -> 2, "lead" -> 2, "notification" -> 
         2, "freshman" -> 2, "baker" -> 2, "shirt" -> 2, "forefront" -> 2, 
         "scars" -> 2, "composure" -> 2, "collections" -> 2, "wind" -> 2, 
         "christian" -> 2, "anthony" -> 2, "uber" -> 2, "oil" -> 2, 
         "statehouse" -> 2, "k" -> 2, "boston" -> 2, "shadows" -> 2, 
         "stillness" -> 2, "cow" -> 2, "craziness" -> 2, "cbs" -> 2, "no-" -> 
         2, "creativity" -> 2, "riverside" -> 2, "shoulders" -> 2, "ra" -> 2, 
         "efficacy" -> 2, "haircut" -> 2, "screening" -> 2, "lap" -> 2, 
         "salary" -> 2, "brand" -> 2, "irritations" -> 2, "conferences" -> 2, 
         "cleaners" -> 2, "scare" -> 2, "responses" -> 2, "wow" -> 2, 
         "counties" -> 2, "training" -> 2, "introduction" -> 2, "aging" -> 2, 
         "provider" -> 2, "lemonade" -> 2, "festival" -> 2, "halloweekend" -> 
         2, "psychology" -> 2, "traitors" -> 2, "nourishment" -> 2, 
         "sanctions" -> 2, "drive-" -> 2, "indians" -> 2, "ideology" -> 2, 
         "regimes" -> 2, "resistance" -> 2, "bolsonaro" -> 2, "venality" -> 2,
          "recognitions" -> 2, "tendency" -> 2, "radar" -> 2, "rush" -> 2, 
         "/" -> 2, "timetable" -> 2, "angle" -> 2, "freeway" -> 2, "sinuses" -> 
         2, "samples" -> 2, "swap" -> 2, "answers" -> 2, "safeway" -> 2, 
         "lunchtime" -> 2, "homemade" -> 2, "mitzvah" -> 2, "bat" -> 2, 
         "cast" -> 2, "cobbler" -> 2, "pluot" -> 2, "supplement" -> 2, 
         "practices" -> 2, "google" -> 2, "vision" -> 2, "rescue" -> 2, 
         "parkland" -> 2, "apology" -> 2, "tool" -> 2, "reds" -> 2, "shapes" -> 
         2, "shades" -> 2, "yellows" -> 2, "laughs" -> 2, "cloud" -> 2, 
         "kittens" -> 2, "root" -> 2, "greens" -> 2, "handwriting" -> 2, 
         "eviction" -> 2, "foreclosure" -> 2, "forecast" -> 2, "director" -> 
         2, "periods" -> 2, "grant" -> 2, "bulkhead" -> 2, "epidemiologists" -> 
         2, "pledge" -> 2, "magazine" -> 2, "departures" -> 2, "sibling" -> 2,
          "plots" -> 2, "load" -> 2, "flies" -> 2, "sorrow" -> 2, "arrival" -> 
         2, "push" -> 2, "foe" -> 2, "arrangements" -> 2, "yearning" -> 2, 
         "club" -> 2, "campuses" -> 2, "finger" -> 2, "excuse" -> 2, "harm" -> 
         2, "supervisor" -> 2, "cocktail" -> 2, "content" -> 2, "bucket" -> 2,
          "boat" -> 2, "quarter" -> 2, "diploma" -> 2, "interviews" -> 2, 
         "presidency" -> 2, "commentators" -> 2, "blacks" -> 2, "chase" -> 2, 
         "coalition" -> 2, "restraint" -> 2, "presidents" -> 2, "justices" -> 
         2, "oath" -> 2, "violations" -> 2, "veterans" -> 2, "contempt" -> 2, 
         "failures" -> 2, "claim" -> 2, "performance" -> 2, "fantasy" -> 2, 
         "commentary" -> 2, "objection" -> 2, "commission" -> 2, "jr" -> 2, 
         "enablers" -> 2, "format" -> 2, "witmer" -> 2, "nomination" -> 2, 
         "bullet" -> 2, "comment" -> 2, "subjects" -> 2, "reed" -> 2, "essay" -> 
         2, "furniture" -> 2, "permission" -> 2, "teams" -> 2, "anxieties" -> 
         2, "recommendation" -> 2, "instructions" -> 2, "sentence" -> 2, 
         "haven" -> 2, "collection" -> 2, "distinction" -> 2, "medicaid" -> 2,
          "advantage" -> 2, "d.c." -> 2, "comparison" -> 2, "absentee" -> 2, 
         "repair" -> 2, "guitar" -> 2, "protein" -> 2, "coma" -> 2, 
         "shortages" -> 2, "seal" -> 2, "metal" -> 2, "minyan" -> 2, 
         "theater" -> 2, "representative" -> 2, "aftermath" -> 2, "shade" -> 
         2, "cord" -> 2, "lounge" -> 2, "sukkah" -> 2, "allergy" -> 2, 
         "london" -> 2, "oct" -> 2, "turmoil" -> 2, "candidate" -> 2, 
         "escape" -> 2, "eternity" -> 2, "jew" -> 2, "citizen" -> 2, "jump" -> 
         2, "heartache" -> 2, "rectangle" -> 2, "dissonance" -> 2, "70s" -> 2,
          "shortage" -> 2, "lace" -> 2, "queen" -> 2, "carolina" -> 2, 
         "cabin" -> 2, "maryland" -> 2, "mothers" -> 2, "horrors" -> 2, 
         "tsunami" -> 2, "mortgage" -> 2, "balance" -> 2, "stressors" -> 2, 
         "assignment" -> 2, "lawyer" -> 2, "wake" -> 2, "wheelchair" -> 2, 
         "letter" -> 2, "shabbat" -> 2, "genes" -> 2, "refrigerator" -> 2, 
         "ceiling" -> 2, "playground" -> 2, "roast" -> 2, "senses" -> 2, 
         "remodeling" -> 2, "bones" -> 2, "paul" -> 2, "cells" -> 2, 
         "stability" -> 2, "pressures" -> 2, "acceleration" -> 2, "good" -> 2,
          "civility" -> 2, "norms" -> 2, "balances" -> 2, "ginsburg" -> 2, 
         "bader" -> 2, "courts" -> 2, "appointees" -> 2, "raft" -> 2, 
         "preparedness" -> 2, "rice" -> 2, "widow" -> 2, "staying" -> 2, 
         "literature" -> 2, "span" -> 2, "coordination" -> 2, "advantages" -> 
         2, "sharing" -> 2, "relaxing" -> 2, "playing" -> 2, "breona" -> 2, 
         "winds" -> 2, "chiefs" -> 2, "seams" -> 2, "chemotherapy" -> 2, 
         "nail" -> 2, "distractions" -> 2, "aches" -> 2, "alert" -> 2, 
         "polarization" -> 2, "beliefs" -> 2, "surroundings" -> 2, "grades" -> 
         2, "workload" -> 2, "environments" -> 2, "existence" -> 2, "gal" -> 
         2, "wildfires" -> 2, "self-isolation" -> 2, "links" -> 2, "alarm" -> 
         2, "funerals" -> 2, "weddings" -> 2, "planner" -> 2, "prayers" -> 2, 
         "pandemic-" -> 2, "cups" -> 2, "orange" -> 2, "duty" -> 2, "beer" -> 
         2, "surf" -> 2, "cottage" -> 2, "nj" -> 2, "executive" -> 2, 
         "ritual" -> 2, "plant" -> 2, "rock" -> 2, "picnic" -> 2, "fades" -> 
         2, "motion" -> 2, "bc" -> 2, "figure" -> 2, "worship" -> 2, "choir" -> 
         2, "bell" -> 2, "sections" -> 2, "habitats" -> 2, "plum" -> 2, 
         "manufacturing" -> 2, "etc" -> 2, "suspensions" -> 2, "pants" -> 2, 
         "plexiglass" -> 2, "dorm" -> 2, "doom" -> 2, "heartbreak" -> 2, 
         "dignity" -> 2, "consciousness" -> 2, "acquaintances" -> 2, "mix" -> 
         2, "sibs" -> 2, "doc" -> 2, "bridge" -> 2, "bullets" -> 2, "fingers" -> 
         2, "mixture" -> 2, "injection" -> 2, "difficulty" -> 2, "substances" -> 
         2, "metaphor" -> 2, "crown" -> 2, "title" -> 2, "sheet" -> 2, "clip" -> 
         2, "web" -> 2, "sums" -> 2, "fly" -> 2, "hikes" -> 2, "spots" -> 2, 
         "hurricane" -> 2, "meltdowns" -> 2, "buddy" -> 2, "copd" -> 2, 
         "bond" -> 2, "educators" -> 2, "amounts" -> 2, "apples" -> 2, 
         "onion" -> 2, "vegetables" -> 2, "refrigeration" -> 2, "towels" -> 2,
          "cup" -> 2, "plate" -> 2, "knife" -> 2, "finals" -> 2, "products" -> 
         2, "lease" -> 2, "writing" -> 2, "friendship" -> 2, "hr" -> 2, 
         "terrorism" -> 2, "chin" -> 2, "rhode" -> 2, "requirement" -> 2, 
         "providence" -> 2, "employer" -> 2, "produce" -> 2, "junior" -> 2, 
         "obligations" -> 2, "mid-summer" -> 2, "ambitions" -> 2, "bemis" -> 
         2, "bibliophile" -> 2, "marches" -> 2, "ravages" -> 2, "venture" -> 
         2, "aisles" -> 2, "souls" -> 2, "clarity" -> 2, "journals" -> 2, 
         "deliveries" -> 2, "madness" -> 2, "blues" -> 2, "puzzles" -> 2, 
         "tortillas" -> 2, "corn" -> 2, "necessities" -> 2, "congresswoman" -> 
         2, "kindle" -> 2, "deck" -> 2, "breezes" -> 2, "clothes" -> 2, 
         "sheets" -> 2, "technician" -> 2, "parks" -> 2, "deppression" -> 2, 
         "gallery" -> 2, "average" -> 2, "disabilities" -> 2, "hearing" -> 2, 
         "equality" -> 2, "amusement" -> 2, "adjustment" -> 2, 
         "coronacoaster" -> 2, "finances" -> 2, "republic" -> 2, "arizona" -> 
         2, "tube" -> 2, "codes" -> 2, "transport" -> 2, "peoples" -> 2, 
         "90s" -> 2, "museum" -> 2, "replacement" -> 2, "mile" -> 2, 
         "survival" -> 2, "gloom" -> 2, "platforms" -> 2, "minority" -> 2, 
         "repairs" -> 2, "sector" -> 2, "classmates" -> 2, "protections" -> 2,
          "furlough" -> 2, "coffin" -> 2, "identification" -> 2, "uncle" -> 2,
          "reservoir" -> 2, "cvs" -> 2, "aisle" -> 2, "continuation" -> 2, 
         "sunsets" -> 2, "math" -> 2, "doorstep" -> 2, "chicken" -> 2, 
         "beans" -> 2, "refuse" -> 2, "photography" -> 2, "newton" -> 2, 
         "availability" -> 2, "shipping" -> 2, "foods" -> 2, "mystery" -> 2, 
         "balcony" -> 2, "stylist" -> 2, "cut" -> 2, "nerve" -> 2, "shoes" -> 
         2, "edinburgh" -> 2, "podiatrist" -> 2, "pieces" -> 2, "aids" -> 2, 
         "variety" -> 2, "grass" -> 2, "newspapers" -> 2, "backgrounds" -> 2, 
         "drain" -> 2, "inequalities" -> 2, "headphones" -> 2, "brutality" -> 
         2, "hamster" -> 2, "foreigner" -> 2, "/c" -> 2, "hopelessness" -> 2, 
         "cloth" -> 2, "inequality" -> 2, "sidelines" -> 2, "decade" -> 2, 
         "clubs" -> 2, "tranquility" -> 2, "delays" -> 2, "rehab" -> 2, 
         "bicycle" -> 2, "aneurysm" -> 2, "simplicity" -> 2, "dinners" -> 2, 
         "solutions" -> 2, "scenarios" -> 2, "puzzle" -> 2, "globe" -> 2, 
         "illusion" -> 2, "scheme" -> 2, "smile" -> 2, "stranger" -> 2, 
         "protocol" -> 2, "wipes" -> 2, "aspect" -> 2, "exercises" -> 2, 
         "strategy" -> 2, "denial" -> 2, "coins" -> 2, "tourist" -> 2, 
         "revolution" -> 2, "ideas" -> 2, "commitments" -> 2, "pleas" -> 2, 
         "cops" -> 2, "knee" -> 2, "hiding" -> 1, "sustenance" -> 1, "fringe" -> 
         1, "infusion" -> 1, "oncologist" -> 1, "conference" -> 1, 
         "component" -> 1, "radiation" -> 1, "investigation" -> 1, "jus" -> 1,
          "defiance" -> 1, "participant" -> 1, "hangings" -> 1, "hanging" -> 
         1, "workshops" -> 1, "hosts" -> 1, "council" -> 1, "close" -> 1, 
         "rowhouse" -> 1, "stoop" -> 1, "suny" -> 1, "historian" -> 1, 
         "habit" -> 1, "prescriptions" -> 1, "drugstore" -> 1, "addiction" -> 
         1, "creatures" -> 1, "attraction" -> 1, "beck" -> 1, "amenities" -> 
         1, "transportation." -> 1, "frontline" -> 1, "aerosol" -> 1, 
         "eating/food" -> 1, "non-complaince" -> 1, "administrator" -> 1, 
         "publc" -> 1, "work-place" -> 1, "vocabulary" -> 1, "hikers" -> 1, 
         "carousels" -> 1, "appt" -> 1, "yrs" -> 1, "r.n." -> 1, 
         "bureaucrats" -> 1, "scarcity" -> 1, "pharmacies" -> 1, "messiness" -> 
         1, "rack" -> 1, "ugh" -> 1, "bottom" -> 1, "snag" -> 1, 
         "co-morbidities" -> 1, "mother-in-law" -> 1, "dozens" -> 1, "virtue" -> 
         1, "negativity" -> 1, "opinions" -> 1, "crouch" -> 1, "shouting" -> 
         1, "monotony" -> 1, "exceptions" -> 1, "pimples" -> 1, "acne" -> 1, 
         "jaw" -> 1, "egyptians" -> 1, "dal" -> 1, "lasagna" -> 1, "plates" -> 
         1, "hallways" -> 1, "framing" -> 1, "elegance" -> 1, "wallpaper" -> 
         1, "rectangles" -> 1, "normal-life" -> 1, "pass" -> 1, "proscenium" -> 
         1, "deposit" -> 1, "listing" -> 1, "listings" -> 1, "repetitiveness" -> 
         1, "heel-clicking" -> 1, "melt-" -> 1, "category" -> 1, 
         "inclination" -> 1, "concentration" -> 1, "frankel" -> 1, 
         "work-from-home" -> 1, "hail" -> 1, "mid-morning" -> 1, "washer" -> 
         1, "workday" -> 1, "reddit" -> 1, "immenseness" -> 1, "mandala" -> 1,
          "openness" -> 1, "clocks" -> 1, "acquaintance" -> 1, "qr" -> 1, 
         "scanning" -> 1, "nz" -> 1, "bureau" -> 1, "bicycles" -> 1, 
         "horseback" -> 1, "playgrounds" -> 1, "flashcards" -> 1, "loophole" -> 
         1, "rides" -> 1, "biochem" -> 1, "extraction" -> 1, "dna" -> 1, 
         "rotations" -> 1, "labs" -> 1, "biochemistry" -> 1, "master" -> 1, 
         "murmur" -> 1, "camaraderie" -> 1, "complexes" -> 1, "recuperating" -> 
         1, "tray" -> 1, "stretches" -> 1, "structures" -> 1, "valves" -> 1, 
         "hose" -> 1, "flare" -> 1, "colitis" -> 1, "recliner" -> 1, 
         "defendants" -> 1, "reschedule." -> 1, "inoculations" -> 1, 
         "inoculation" -> 1, "jeopardy" -> 1, "staffing" -> 1, "i10" -> 1, 
         "towers" -> 1, "pumps" -> 1, "electricity" -> 1, "fuel" -> 1, 
         "utilities" -> 1, "blackouts" -> 1, "el" -> 1, "lubbock" -> 1, 
         "brownsville" -> 1, "passivity" -> 1, "passive" -> 1, "centers" -> 1,
          "bloom" -> 1, "decrease" -> 1, "grocereies" -> 1, "temps" -> 1, 
         "device/s" -> 1, "challenge." -> 1, "guarantee" -> 1, "50s" -> 1, 
         "pandora" -> 1, "processing" -> 1, "stump" -> 1, "shoot" -> 1, 
         "j.v." -> 1, "\[Copyright]" -> 1, "rabbits" -> 1, "malka" -> 1, 
         "trunk" -> 1, "moonlight" -> 1, "threads" -> 1, "jewels" -> 1, 
         "mouths" -> 1, "chainsaws" -> 1, "sunrise" -> 1, "trepidation" -> 1, 
         "venus" -> 1, "eclipse" -> 1, "poet" -> 1, "lovelorn" -> 1, "hearts" -> 
         1, "emoji" -> 1, "love-life" -> 1, "spine" -> 1, "feu" -> 1, 
         "l\[CloseCurlyQuote]amour" -> 1, "cocoon" -> 1, "membership" -> 1, 
         "solarium" -> 1, "rooftop" -> 1, "ymca" -> 1, "steven" -> 1, 
         "lovers" -> 1, "fireman" -> 1, "lowe" -> 1, "rob" -> 1, "brokeback" -> 
         1, "endings" -> 1, "netflix" -> 1, "quest" -> 1, "pittsburg" -> 1, 
         "pc" -> 1, "tire" -> 1, "emogi" -> 1, "starbucks" -> 1, "georgie" -> 
         1, "endearments" -> 1, "beards" -> 1, "ring" -> 1, "paradigm" -> 1, 
         "construct" -> 1, "kovid-krazy" -> 1, "germ-wise" -> 1, "legend" -> 
         1, "gps" -> 1, "arrows" -> 1, "cupid" -> 1, "hunt" -> 1, "remnant" -> 
         1, "cyber-cruising" -> 1, "real-bad-love" -> 1, "bad-love" -> 1, 
         "good-love" -> 1, "boyfriends" -> 1, "beast" -> 1, "gyms" -> 1, 
         "resolve" -> 1, "hollywood" -> 1, "moving" -> 1, "patio" -> 1, 
         "umbabarauma" -> 1, "ben" -> 1, "jorge" -> 1, "itunes" -> 1, 
         "spotify" -> 1, "bluetooth" -> 1, "summers" -> 1, "winters" -> 1, 
         "meta" -> 1, "experiment" -> 1, "overview" -> 1, "meat" -> 1, 
         "construction" -> 1, "tendons" -> 1, "ligaments" -> 1, "muscles" -> 
         1, "joints" -> 1, "indulgence" -> 1, "rouler" -> 1, "ex-pat" -> 1, 
         "jerusalem" -> 1, "manhattan" -> 1, "muffin" -> 1, "faculty" -> 1, 
         "masterclass" -> 1, "obstacle" -> 1, "context" -> 1, "mvp" -> 1, 
         "stepdad" -> 1, "tensions" -> 1, "socialization" -> 1, 
         "facetime/zoom" -> 1, "fracture" -> 1, "extermination" -> 1, "bugs" -> 
         1, "bug" -> 1, "bar" -> 1, "sword" -> 1, "tune" -> 1, "grownups" -> 
         1, "cows" -> 1, "trains" -> 1, "freezer" -> 1, "sundays" -> 1, 
         "disruption" -> 1, "halt" -> 1, "moors" -> 1, "inverness" -> 1, 
         "aberdeen" -> 1, "landscape" -> 1, "gale" -> 1, "drifts" -> 1, 
         "thigh" -> 1, "shin" -> 1, "hills" -> 1, "otoh" -> 1, "precuations" -> 
         1, "pe" -> 1, "exam" -> 1, "tooth" -> 1, "self-treatment" -> 1, 
         "activism" -> 1, "becuase" -> 1, "meltdown" -> 1, "starlit" -> 1, 
         "tubs" -> 1, "mid-winter" -> 1, "todo" -> 1, "fabric" -> 1, 
         "dashing" -> 1, "tub" -> 1, "cod" -> 1, "cape" -> 1, "nyses" -> 1, 
         "ufos" -> 1, "zetreat" -> 1, "passports" -> 1, "fahrenheit" -> 1, 
         "adventure" -> 1, "romance" -> 1, "inquisition" -> 1, "cameraderie" -> 
         1, "castles" -> 1, "lisbon" -> 1, "sintra" -> 1, "peninsula" -> 1, 
         "seville" -> 1, "cordoba" -> 1, "laughingstock" -> 1, "hunger" -> 1, 
         "closures" -> 1, "egos" -> 1, "agendas" -> 1, "taxpayers" -> 1, 
         "foreigners" -> 1, "smoothies" -> 1, "pancakes" -> 1, "principal" -> 
         1, "sign-ups" -> 1, "left" -> 1, "\[Degree]" -> 1, "anti-maskers" -> 
         1, "problem/s" -> 1, "resolution" -> 1, "intimacy" -> 1, "christ" -> 
         1, "taxes" -> 1, "budgeting" -> 1, "snd" -> 1, "endeavor" -> 1, 
         "transaction" -> 1, "notion" -> 1, "physicist" -> 1, "goldhaber" -> 
         1, "convalescent" -> 1, "rant" -> 1, "missives" -> 1, "w" -> 1, 
         "disasters" -> 1, "inequities" -> 1, "colon" -> 1, "colonoscopy" -> 
         1, "groups/orange" -> 1, "monitors" -> 1, "wildfire" -> 1, "valley" -> 
         1, "animal" -> 1, "introvert/extrovert" -> 1, "disregard" -> 1, 
         "provision" -> 1, "reconciliation" -> 1, "lawyers" -> 1, 
         "cross-hairs" -> 1, "eleven" -> 1, "apologist" -> 1, "r-ga" -> 1, 
         "theorist" -> 1, "somerville" -> 1, "clues" -> 1, "ethnographers" -> 
         1, "nuggets" -> 1, 
         "https://www.nytimes.com/2021/02/02/movies/locked-down-anne-hathaway-\
chiwetel-ejiofor.html" -> 1, "dislocation" -> 1, "harrods" -> 1, "heist" -> 1,
          "identities" -> 1, "claustrophobia" -> 1, "stephen" -> 1, "vlds" -> 
         1, "rating" -> 1, "contradictions" -> 1, "fluctuations" -> 1, 
         "analyses" -> 1, "combat" -> 1, "marines" -> 1, "treads" -> 1, 
         "ravens" -> 1, "baltimore" -> 1, "tribute" -> 1, "wearer" -> 1, 
         "masques" -> 1, "protector" -> 1, "contradiction" -> 1, "nudges" -> 
         1, "oncology" -> 1, "surgeries" -> 1, "crises" -> 1, 
         "redistribution" -> 1, "suggestion" -> 1, "controls" -> 1, "8pm-5am" -> 
         1, "province" -> 1, "montreal" -> 1, "logistics" -> 1, "vermont" -> 
         1, "capita" -> 1, "b.c." -> 1, "asians" -> 1, "exceptionalism" -> 1, 
         "traction" -> 1, "aesthetics" -> 1, "exceptionalist" -> 1, 
         "cartoons" -> 1, "editorial" -> 1, "deful" -> 1, "aaron" -> 1, 
         "businessman" -> 1, "scrutiny" -> 1, "legault" -> 1, "analyzing" -> 
         1, "ethnographic" -> 1, "colombia" -> 1, "presentations" -> 1, 
         "chips" -> 1, "raisins" -> 1, "egg" -> 1, "batches" -> 1, "soda" -> 
         1, "whiskey" -> 1, "claps" -> 1, "st." -> 1, "venue" -> 1, 
         "conservatives" -> 1, "productivity" -> 1, "generosity" -> 1, 
         "attitudes" -> 1, "movements" -> 1, "superbowl" -> 1, "bye" -> 1, 
         "stepmother" -> 1, "stepmom" -> 1, "minivan" -> 1, "turnpike" -> 1, 
         "bagels" -> 1, "sweets" -> 1, "waiter" -> 1, "happenings" -> 1, 
         "institute" -> 1, "ophthalmologist" -> 1, "hint" -> 1, "shape" -> 1, 
         "tendencies" -> 1, "beard" -> 1, "suits" -> 1, "communications" -> 1,
          "evenings" -> 1, "bout" -> 1, "seafood" -> 1, "tickle" -> 1, 
         "sniffle" -> 1, "clotting" -> 1, "injections" -> 1, "measure" -> 1, 
         "diarrhea" -> 1, "distress" -> 1, "fortnight" -> 1, "typing" -> 1, 
         "chess" -> 1, "peloton" -> 1, "workouts" -> 1, "homebody" -> 1, 
         "austria" -> 1, "atrocities" -> 1, "vet" -> 1, "discharge" -> 1, 
         "ards" -> 1, "maneuvers" -> 1, "self-care" -> 1, "gorman" -> 1, 
         "amanda" -> 1, "iron" -> 1, "spats" -> 1, "pretenses" -> 1, 
         "double-mask" -> 1, "generator" -> 1, "blackout" -> 1, "freezers" -> 
         1, "seattle" -> 1, "whew" -> 1, "eggs" -> 1, "grandpa" -> 1, 
         "buttigieg" -> 1, "sh" -> 1, "toe" -> 1, "linguistics" -> 1, 
         "textbooks" -> 1, "pdf" -> 1, "printouts" -> 1, "flannel" -> 1, 
         "greenery" -> 1, "porch" -> 1, "locks" -> 1, "outlaid" -> 1, 
         "attitude" -> 1, "directives" -> 1, "foundation" -> 1, "mascara" -> 
         1, "precision" -> 1, "jars" -> 1, "tubes" -> 1, "moves" -> 1, 
         "mar-a-lago" -> 1, "mccarthy" -> 1, "kevin" -> 1, "brushing" -> 1, 
         "condemnation" -> 1, "talking" -> 1, "cori" -> 1, "liking" -> 1, 
         "supporting" -> 1, "congresspeople" -> 1, "publicity" -> 1, "coward" -> 
         1, "teens" -> 1, "killing" -> 1, "fla." -> 1, "hogg" -> 1, "lasers" -> 
         1, "self-videos" -> 1, "detectors" -> 1, "r-georgia" -> 1, 
         "refrigerators" -> 1, "jams" -> 1, "berg" -> 1, "\[UDoubleDot]ber" -> 
         1, "biologist" -> 1, "redemsivir" -> 1, "suggestions" -> 1, 
         "dilemma" -> 1, "projections" -> 1, "logjams" -> 1, "ore" -> 1, 
         "vicissitudes" -> 1, "interval" -> 1, "periphery" -> 1, "toilets" -> 
         1, "learner" -> 1, "warms" -> 1, "pit" -> 1, "minimum" -> 1, 
         "alienation" -> 1, "cage" -> 1, "carpets" -> 1, "cubicles" -> 1, 
         "arabs" -> 1, "jews" -> 1, "awakening" -> 1, "guest" -> 1, 
         "connemara" -> 1, "foley" -> 1, "lucy" -> 1, "stationery" -> 1, 
         "tehran" -> 1, "kamali" -> 1, "marjan" -> 1, "sweden" -> 1, 
         "backman" -> 1, "fredrik" -> 1, "osman" -> 1, "gothic" -> 1, 
         "moreno-garcia" -> 1, "silvia" -> 1, "estate" -> 1, "devils" -> 1, 
         "louise" -> 1, "gamache" -> 1, "inspector" -> 1, "ashes" -> 1, 
         "kinky" -> 1, "chesse" -> 1, "mac" -> 1, "cork" -> 1, "screw" -> 1, 
         "photographs" -> 1, "bernie" -> 1, "fronts" -> 1, "usage" -> 1, 
         "coursera" -> 1, "accounting" -> 1, "korean" -> 1, "philippines" -> 
         1, "insistence" -> 1, "news/statistics" -> 1, "norm" -> 1, "wa" -> 1,
          "daddy" -> 1, "bandwagon" -> 1, "tour" -> 1, "referrals" -> 1, 
         "homeschooling" -> 1, "sensations" -> 1, "intolerance" -> 1, 
         "caffeine" -> 1, "physiology" -> 1, "changer" -> 1, "explanations" -> 
         1, "medics" -> 1, "observations" -> 1, "examinations" -> 1, 
         "antibiotics" -> 1, "admission" -> 1, "analog" -> 1, "method" -> 1, 
         "aliens" -> 1, "stance" -> 1, "nutrients" -> 1, "gains" -> 1, 
         "murderer" -> 1, "tremors" -> 1, "reverberation" -> 1, "free-for-" -> 
         1, "jokes" -> 1, "brunt" -> 1, "pint" -> 1, "burger" -> 1, 
         "greatness" -> 1, "debriefs" -> 1, "theory" -> 1, "tvs" -> 1, 
         "hornets" -> 1, "counselor" -> 1, "shelters" -> 1, "autopsy" -> 1, 
         "nativetexas" -> 1, "locator" -> 1, "vax" -> 1, "smokers" -> 1, 
         "mps" -> 1, "mp" -> 1, "say" -> 1, "discretion" -> 1, "insight" -> 1,
          "inaguration" -> 1, "execution" -> 1, "immigrants" -> 1, "lgbtq" -> 
         1, "windsor" -> 1, "banana" -> 1, "female" -> 1, "ascension" -> 1, 
         "toast" -> 1, "instability" -> 1, "industry" -> 1, "signal" -> 1, 
         "wrappers" -> 1, "weekdays" -> 1, "kitchens" -> 1, "tools" -> 1, 
         "critics" -> 1, "studios" -> 1, "homelessness" -> 1, 
         "interpretation" -> 1, "audience" -> 1, "shortcomings" -> 1, 
         "maximum" -> 1, "dust" -> 1, "insides" -> 1, "genius" -> 1, "key" -> 
         1, "circuitboards" -> 1, "octave" -> 1, "workings" -> 1, "keyboard" -> 
         1, "forum" -> 1, "agra" -> 1, "minorities" -> 1, "outcomes" -> 1, 
         "disparities" -> 1, "aftershocks" -> 1, "legislators" -> 1, 
         "selfishness" -> 1, "scampi" -> 1, "shrimp" -> 1, "lease-signing" -> 
         1, "inspections" -> 1, "sale" -> 1, "stacks" -> 1, "suspense" -> 1, 
         "reeks" -> 1, "indicators" -> 1, "potus" -> 1, "troops" -> 1, 
         "drama" -> 1, "runoff" -> 1, "uptick" -> 1, "goings" -> 1, "chives" -> 
         1, "webinar" -> 1, "miracles" -> 1, "disparity" -> 1, "promise" -> 1,
          "follow-" -> 1, "sickness" -> 1, "orleans" -> 1, "guliani" -> 1, 
         "hues" -> 1, "ink" -> 1, "spikes" -> 1, "globes" -> 1, "print" -> 1, 
         "ifacts" -> 1, "woodward" -> 1, "djt" -> 1, "hurt" -> 1, 
         "lawlessness" -> 1, "uprising" -> 1, "ave." -> 1, "madison" -> 1, 
         "hygiene" -> 1, "interstate" -> 1, "regimen" -> 1, "booster" -> 1, 
         "processes" -> 1, "missouri" -> 1, "1b" -> 1, "command" -> 1, 
         "activation" -> 1, "solution" -> 1, "vengeance" -> 1, 
         "unacceptability" -> 1, "religion" -> 1, "nationalists" -> 1, 
         "compassion" -> 1, "complexities" -> 1, "tenth" -> 1, "backseat" -> 
         1, "fix/heal" -> 1, "threats" -> 1, "folk" -> 1, "mind/body" -> 1, 
         "p.m." -> 1, "dundee" -> 1, "tay" -> 1, "fingertips" -> 1, 
         "centuries" -> 1, "bridges" -> 1, "arthur" -> 1, "firth" -> 1, 
         "fife" -> 1, "wisps" -> 1, "licensing" -> 1, "licenses" -> 1, 
         "european" -> 1, "cessna" -> 1, "skype" -> 1, "humour" -> 1, "irony" -> 
         1, "medium" -> 1, "diary" -> 1, "inauguarion" -> 1, "cleanliness" -> 
         1, "distances" -> 1, "cutbacks" -> 1, "townhome" -> 1, "handyman" -> 
         1, "phoenix" -> 1, "fyi" -> 1, "isa" -> 1, "casualness" -> 1, 
         "werewolf" -> 1, "firepit" -> 1, "firepits" -> 1, "idaho" -> 1, 
         "guarantor" -> 1, "applications" -> 1, "heights" -> 1, "morningside" -> 
         1, "factions" -> 1, "consultant" -> 1, "forums" -> 1, "network" -> 1,
          "fame" -> 1, "racists" -> 1, "detail" -> 1, "score" -> 1, "soooo" -> 
         1, "fb" -> 1, "conscience" -> 1, "libtards" -> 1, "demagogue" -> 1, 
         "attempt" -> 1, "segment" -> 1, "nooses" -> 1, "ties" -> 1, "zip" -> 
         1, "hostage" -> 1, "moratoriums" -> 1, "corporations" -> 1, 
         "mentors" -> 1, "deals" -> 1, "pariahs" -> 1, "pig-god" -> 1, 
         "fall-" -> 1, "beings" -> 1, "swarths" -> 1, "jerks" -> 1, "joshua" -> 
         1, "dnc" -> 1, "headquarters" -> 1, "pipe-bomb" -> 1, "thugs" -> 1, 
         "8pm" -> 1, "satisfaction" -> 1, "selfies" -> 1, "flags" -> 1, 
         "batons" -> 1, "rubber" -> 1, "asshole" -> 1, "label" -> 1, 
         "bunkers" -> 1, "winner" -> 1, "falsehood" -> 1, "talking-head" -> 1,
          "comparisons" -> 1, "acts" -> 1, "affiliation" -> 1, "fox" -> 1, 
         "floors" -> 1, "insects" -> 1, "mo" -> 1, "passer-byers" -> 1, 
         "secretaries" -> 1, "allies" -> 1, "certifications" -> 1, "syllabus" -> 
         1, "iraq" -> 1, "iran-contra" -> 1, "watergate" -> 1, "reference" -> 
         1, "propaganda" -> 1, "normality" -> 1, "nowworking" -> 1, "etc." -> 
         1, "socialising" -> 1, "spin" -> 1, "complaint" -> 1, "max" -> 1, 
         "keepers" -> 1, "intruders" -> 1, "hire" -> 1, "empire" -> 1, "xe" -> 
         1, "blackwater" -> 1, "prince" -> 1, "erik" -> 1, "devois" -> 1, 
         "chow" -> 1, "resignations" -> 1, "judiciary" -> 1, "schumer" -> 1, 
         "chuck" -> 1, "invocation" -> 1, "optimists" -> 1, "bowser" -> 1, 
         "muriel" -> 1, "infiltration" -> 1, "perimeter" -> 1, "astonishment" -> 
         1, "handling" -> 1, "uproar" -> 1, "rifle" -> 1, "rittenhouse" -> 1, 
         "kyle" -> 1, "kenosha" -> 1, "youth" -> 1, "entitlement" -> 1, 
         "smugness" -> 1, "wp" -> 1, "hesse" -> 1, "monica" -> 1, "rosenberg" -> 
         1, "matthew" -> 1, "boot" -> 1, "france-press" -> 1, "agence" -> 1, 
         "prominence" -> 1, "barnett" -> 1, "tarrio" -> 1, "enrique" -> 1, 
         "nominee" -> 1, "ochs" -> 1, "nick" -> 1, "bullhorn" -> 1, "spear" -> 
         1, "tatoo" -> 1, "fur" -> 1, "shaman" -> 1, 
         "https://www.youtube.com/watch?v=jxm6h9elyty" -> 1, "smiles" -> 1, 
         "guilfoyle" -> 1, "camer" -> 1, "sturmer" -> 1, "pro-trump" -> 1, 
         "veteran" -> 1, "babbit" -> 1, "ashli" -> 1, "bombs" -> 1, "pipe" -> 
         1, "establishment" -> 1, "co-signer" -> 1, "nevada" -> 1, 
         "affidavits" -> 1, "4am" -> 1, "likelihood" -> 1, "ease" -> 1, 
         "block" -> 1, "sonny" -> 1, "exporter" -> 1, "insider" -> 1, 
         "broker" -> 1, "elites" -> 1, "spokesperson" -> 1, "chairman" -> 1, 
         "subsidies" -> 1, "beneficiary" -> 1, "repeater" -> 1, "loeffler" -> 
         1, "gamaliel" -> 1, "raphael" -> 1, "reverend" -> 1, 
         "appropriateness" -> 1, "efficiency" -> 1, "intensivist" -> 1, 
         "effectivity" -> 1, "mutations" -> 1, "gene" -> 1, "kits" -> 1, 
         "fluke" -> 1, "detection" -> 1, "foreshadowing" -> 1, 
         "responsiveness" -> 1, "dec" -> 1, "outskirts" -> 1, "tunes" -> 1, 
         "crosby" -> 1, "bing" -> 1, "virtues" -> 1, "flair" -> 1, 
         "re-enactment" -> 1, "mason" -> 1, "casettes" -> 1, "buff" -> 1, 
         "advertisers" -> 1, "rounds" -> 1, "layout" -> 1, "stimulation" -> 1,
          "incidents" -> 1, "organizers" -> 1, "butterfly" -> 1, "inmate" -> 
         1, "soreness" -> 1, "tickets" -> 1, "fit" -> 1, "bland" -> 1, 
         "etiquette" -> 1, "emts" -> 1, "cmu" -> 1, "museums" -> 1, "viruses" -> 
         1, "purposes" -> 1, "troublemakers" -> 1, "expression" -> 1, 
         "outlets" -> 1, "proof" -> 1, "apple" -> 1, "engine" -> 1, "vacancy" -> 
         1, "reporting" -> 1, "coughs" -> 1, "coworker" -> 1, "review" -> 1, 
         "thermometer" -> 1, "managers" -> 1, "stops" -> 1, "louisville" -> 1,
          "https://www.nytimes.com/article/trump-resignations.html" -> 1, 
         "https://www.newsweek.com/video-black-capitol-workers-cleaning-\
capitol-riots-trump-supporters-1559674" -> 1, "mayhem" -> 1, 
         "https://www.washingtonpost.com/dc-md-va/2021/01/06/dc-protests-\
trump-rally-live-updates/" -> 1, "breaches" -> 1, "reid" -> 1, "selfie" -> 1, 
         "complicity" -> 1, "mulvaney" -> 1, "mick" -> 1, "devos" -> 1, 
         "chao" -> 1, "elaine" -> 1, "cowards" -> 1, "lists" -> 1, "devices" -> 
         1, "kiddo" -> 1, "documentaries" -> 1, "tweet" -> 1, "jelani" -> 1, 
         "hill" -> 1, "sirens" -> 1, "hrs" -> 1, "lamps" -> 1, 
         "parliamentarian" -> 1, "crime" -> 1, "rotunda" -> 1, "staffers" -> 
         1, "congressmembers" -> 1, "ram" -> 1, "barricade" -> 1, "apparatus" -> 
         1, "reserve" -> 1, "auschwitz" -> 1, "sweatshirt" -> 1, "whatsapp" -> 
         1, "entrances" -> 1, "trumpists" -> 1, "convergence" -> 1, 
         "coast.long" -> 1, "mailing" -> 1, "brewing" -> 1, "updates" -> 1, 
         "ga" -> 1, "moths" -> 1, "scarf" -> 1, "wool" -> 1, "palm" -> 1, 
         "binge" -> 1, "practicum" -> 1, "reform" -> 1, "adios" -> 1, 
         "aggression" -> 1, "hypocrisy" -> 1, "mold" -> 1, "moisture" -> 1, 
         "flames" -> 1, "fan" -> 1, "substance" -> 1, "tongue" -> 1, "lie" -> 
         1, "truths" -> 1, "rulers" -> 1, "beatings" -> 1, "backburner" -> 1, 
         "volumes" -> 1, "insurrectionists" -> 1, "payor" -> 1, "trumpies" -> 
         1, "trumpism" -> 1, "mcdonnell" -> 1, "tie" -> 1, "democrat" -> 1, 
         "jubilation" -> 1, "mutation" -> 1, "weekshas" -> 1, "germs" -> 1, 
         "cursing" -> 1, "transparency" -> 1, "airline" -> 1, "hyperlink" -> 
         1, "popularity" -> 1, "pounds" -> 1, "styles" -> 1, "'80s" -> 1, 
         "mo." -> 1, "room." -> 1, "dryer" -> 1, "laundromat" -> 1, "pencil" -> 
         1, "outsiders" -> 1, "meditations" -> 1, "enjoyment" -> 1, "racing" -> 
         1, "sketchbook" -> 1, "precovid" -> 1, "battles" -> 1, "selves" -> 1,
          "toddlers" -> 1, "infant" -> 1, "smiley" -> 1, "gowns" -> 1, 
         "goggles" -> 1, "nuance" -> 1, "barrage" -> 1, "specialist" -> 1, 
         "breaking" -> 1, "speeding" -> 1, "lates" -> 1, "patchwork" -> 1, 
         "shortness" -> 1, "dizziness" -> 1, "texting" -> 1, "daze" -> 1, 
         "increase" -> 1, "dynamic" -> 1, "mudslides" -> 1, "foundations" -> 
         1, "drought" -> 1, "factories" -> 1, "roaring" -> 1, "bris" -> 1, 
         "metro" -> 1, "vt" -> 1, "dogg" -> 1, "snoop" -> 1, "fomo" -> 1, 
         "reunions" -> 1, "holliday" -> 1, "spice" -> 1, "eggnog" -> 1, 
         "merriment" -> 1, "butter" -> 1, "flour" -> 1, "chore" -> 1, 
         "wisconsin" -> 1, "cattle" -> 1, "stockyards" -> 1, "gonzales" -> 1, 
         "rockets" -> 1, "sauce" -> 1, "discrimination" -> 1, "karina" -> 1, 
         "call-" -> 1, "pizzas" -> 1, "mutates" -> 1, "nye" -> 1, "schooling" -> 
         1, "handshakes" -> 1, "turd" -> 1, "benefit" -> 1, "caseloads" -> 1, 
         "nov" -> 1, "donation" -> 1, "finish" -> 1, "insecure" -> 1, 
         "pantry" -> 1, "minions" -> 1, "snail" -> 1, "milk" -> 1, "carton" -> 
         1, "ruling" -> 1, "clerks" -> 1, "betters" -> 1, "sweeper" -> 1, 
         "jo" -> 1, "dickens" -> 1, "plantation" -> 1, "malnutrition" -> 1, 
         "repercussions" -> 1, "malice" -> 1, "freaking" -> 1, "doctorate" -> 
         1, "masters" -> 1, "bachelors" -> 1, "cert" -> 1, "oppressors" -> 1, 
         "ceo" -> 1, "element" -> 1, "impermanence" -> 1, "proxy" -> 1, 
         "paperback" -> 1, "scratch" -> 1, "strategies" -> 1, 
         "manifestations" -> 1, "gaps" -> 1, "anxiousness" -> 1, "blossoms" -> 
         1, "hazel" -> 1, "witch" -> 1, "wonders" -> 1, "health-care" -> 1, 
         "dysfunctions" -> 1, "harvest" -> 1, "r." -> 1, "disregulation" -> 1,
          "aggressiveness" -> 1, "legs" -> 1, "bouts" -> 1, "muses" -> 1, 
         "contours" -> 1, "paintings" -> 1, "ce\:0301zanne" -> 1, 
         "merleau-ponty" -> 1, "fortaleza" -> 1, "resumption" -> 1, 
         "proportions" -> 1, "precariousness" -> 1, "contemporanea" -> 1, 
         "fenomenologica" -> 1, "psicopatologia" -> 1, "v.m." -> 1, 
         "nationalisms" -> 1, "co-operations" -> 1, "feature" -> 1, 
         "ethnicities" -> 1, "nationalities" -> 1, "pep" -> 1, "northwell" -> 
         1, "lindsay" -> 1, "sandra" -> 1, "jamaica" -> 1, "bio-ntech" -> 1, 
         "belgium" -> 1, "rna" -> 1, "medals" -> 1, "minecraft" -> 1, 
         "facilitator" -> 1, "gadot" -> 1, "pixar" -> 1, "marathon" -> 1, 
         "leg" -> 1, "end-of-life" -> 1, "task" -> 1, "acuity" -> 1, 
         "mid-march" -> 1, "letdown" -> 1, "bleeding" -> 1, "feasts" -> 1, 
         "compensation" -> 1, "grandstanding" -> 1, "insolvency" -> 1, 
         "brink" -> 1, "retreats" -> 1, "connectedness" -> 1, "musician" -> 1,
          "pathogen" -> 1, "fees" -> 1, "silicone" -> 1, "contigo" -> 1, 
         "discovery" -> 1, "procedurals" -> 1, "absurdities" -> 1, "id" -> 1, 
         "sandwich" -> 1, "spree" -> 1, "commune" -> 1, "phone/facetime/zoom" -> 
         1, "mankind" -> 1, "revenue" -> 1, "aspirations" -> 1, 
         "https://m.youtube.com/watch?v=zdmrkn_ww0g" -> 1, "raid" -> 1, 
         "handcuff" -> 1, "running" -> 1, "bodycam" -> 1, "warrant" -> 1, 
         "https://www.nytimes.com/2020/12/23//susan-moore-black-doctor-\
indiana.html" -> 1, "demise" -> 1, "breadwinner" -> 1, "moore" -> 1, "susan" -> 
         1, "https://www.washingtonpost.com/opinions/2020/12/23/all-i-want-\
christmas-are-covid-19-mandates/" -> 1, 
         "https://www.washingtonpost.com/national/christmas-gatherings-covid/\
2020/12/24/f6232ade-456e-11eb-90fc-79662011cb49_story.html" -> 1, "merry" -> 
         1, "atlanta" -> 1, "mall" -> 1, "downstairs" -> 1, "carols" -> 1, 
         "snowfall" -> 1, "avenue" -> 1, "casualty" -> 1, "golf" -> 1, 
         "strife" -> 1, "gain" -> 1, "aqua" -> 1, "pies" -> 1, "meringue" -> 
         1, "slice" -> 1, "automat" -> 1, "nickels" -> 1, "gimbels" -> 1, 
         "strawbridges" -> 1, "lits" -> 1, "snellenbergs" -> 1, "novelty" -> 
         1, "olney" -> 1, "bucks" -> 1, "pilgrimage" -> 1, "penn" -> 1, 
         "midge" -> 1, "infamy" -> 1, "rendell" -> 1, "estimate" -> 1, "fix" -> 
         1, "cellphones" -> 1, "bronze" -> 1, "sculpture" -> 1, "organ" -> 1, 
         "hymnal" -> 1, "christian-" -> 1, "wanamaker" -> 1, "fixture" -> 1, 
         "vendor" -> 1, "leggings" -> 1, "cloak" -> 1, "thursdays" -> 1, 
         "tuesdays" -> 1, "liz" -> 1, "parkway" -> 1, "aerobics" -> 1, 
         "unnaturalness" -> 1, "goodbyes" -> 1, "lull" -> 1, "wy" -> 1, 
         "quarantines" -> 1, "boxing" -> 1, "sweetie" -> 1, "bra" -> 1, 
         "favourites" -> 1, "lamb" -> 1, "neighbour" -> 1, "upstairs" -> 1, 
         "motions" -> 1, "molasses" -> 1, "idiot" -> 1, "twenty1nine" -> 1, 
         "op" -> 1, "bonnet" -> 1, "liza" -> 1, "snowman" -> 1, "abstraction" -> 
         1, "playschool" -> 1, "hanukka" -> 1, "banks" -> 1, 
         "md/psychiatrist" -> 1, "jail" -> 1, "hampshire" -> 1, 
         "impatience/rage" -> 1, "duck" -> 1, "solstice" -> 1, "spindle" -> 1,
          "afternoons" -> 1, "naps" -> 1, "basil" -> 1, "pot" -> 1, 
         "captions" -> 1, "furloughs" -> 1, "tangle" -> 1, "pancake" -> 1, 
         "rotarian" -> 1, "attendee" -> 1, "cuff" -> 1, "opera" -> 1, "blob" -> 
         1, "lightning" -> 1, "bully" -> 1, "strokes" -> 1, "witness" -> 1, 
         "artery" -> 1, "carotid" -> 1, "dialysis" -> 1, "awash" -> 1, "blue" -> 
         1, "sympathy" -> 1, "troubles" -> 1, "housemates" -> 1, 
         "accommodation" -> 1, "pennsylania" -> 1, "refrain" -> 1, "chews" -> 
         1, "butcher" -> 1, "snack" -> 1, "geo" -> 1, "nat" -> 1, "decibel" -> 
         1, "drives" -> 1, "week." -> 1, "co" -> 1, "housekeeper" -> 1, 
         "liberties" -> 1, "luncheon" -> 1, "linings" -> 1, "desktop" -> 1, 
         "snowstorm" -> 1, "sit-" -> 1, "disobedience" -> 1, "limits" -> 1, 
         "aarghh" -> 1, "canvassing" -> 1, "hard/impossible" -> 1, "aide" -> 
         1, "momentos" -> 1, "double-speak" -> 1, "christianity" -> 1, 
         "ramadan" -> 1, "diwali" -> 1, "recognition" -> 1, "impact/scale" -> 
         1, "materials" -> 1, "scent" -> 1, "valentines" -> 1, "kwanzaa" -> 1,
          "mirror" -> 1, "wear" -> 1, "goal" -> 1, "logic" -> 1, "maskers" -> 
         1, "samething" -> 1, "reassures" -> 1, "ata" -> 1, "baruch" -> 1, 
         "yhis" -> 1, "dedication" -> 1, "sameach" -> 1, "chag" -> 1, "try" -> 
         1, "shore" -> 1, "minimization" -> 1, "bs" -> 1, "bothers" -> 1, 
         "honey" -> 1, "snf" -> 1, "delusions" -> 1, "conspiracies" -> 1, 
         "assemblies" -> 1, "truper" -> 1, "revelation" -> 1, "tn" -> 1, 
         "symptomatology" -> 1, "il" -> 1, "blinker" -> 1, "trivia" -> 1, 
         "kaddish" -> 1, "supports" -> 1, "ditto" -> 1, "milestone" -> 1, 
         "trucks" -> 1, "poppins" -> 1, "hammock" -> 1, "yardwork" -> 1, 
         "phrase" -> 1, "polish" -> 1, "dinosaurs" -> 1, "slippers" -> 1, 
         "superhero" -> 1, "robes" -> 1, "disagreements" -> 1, "candles" -> 1,
          "dessert" -> 1, "latke" -> 1, "togethers" -> 1, "fuckwad" -> 1, 
         "archive" -> 1, "amsterdam" -> 1, "flack" -> 1, "postgraduate" -> 1, 
         "disruptions" -> 1, "sars-cov2" -> 1, "wording" -> 1, "intention" -> 
         1, "scroll" -> 1, "fatiguing" -> 1, "implications" -> 1, 
         "mid-november" -> 1, "garlands" -> 1, "constants" -> 1, "bethlehem" -> 
         1, "moods" -> 1, "co-morbidity" -> 1, "military" -> 1, "cna" -> 1, 
         "cases/deaths" -> 1, "mask/distance" -> 1, "screener" -> 1, 
         "semesters" -> 1, "abreast" -> 1, "recommendations" -> 1, "poodles" -> 
         1, "carers" -> 1, "3rd-9th" -> 1, "kent" -> 1, "incomprehensions" -> 
         1, "limitiations" -> 1, "biomedicine" -> 1, "hauntology" -> 1, 
         "settler" -> 1, "disorders" -> 1, "colonial" -> 1, "myanmar" -> 1, 
         "peru" -> 1, "rwanda" -> 1, "anthropology" -> 1, "methods" -> 1, 
         "ob" -> 1, "complex" -> 1, "catacylsm" -> 1, "stein" -> 1, 
         "gertrude" -> 1, "tommy" -> 1, "de-colonialism" -> 1, "rigors" -> 1, 
         "colonization" -> 1, "dangarembga" -> 1, "tsitsi" -> 1, "trilogy" -> 
         1, "dystopia" -> 1, "warning" -> 1, "continuities" -> 1, "railroad" -> 
         1, "whitehead" -> 1, "colson" -> 1, "pox" -> 1, "collpase" -> 1, 
         "reagan" -> 1, "premonitions" -> 1, "fiction" -> 1, "talents" -> 1, 
         "seeds" -> 1, "butler" -> 1, "octavia" -> 1, "shields" -> 1, 
         "rial/toman" -> 1, "trafficking" -> 1, "price" -> 1, "gasoline" -> 1,
          "irrgc" -> 1, "airliner" -> 1, "fantasies" -> 1, "securitization" -> 
         1, "hotspot" -> 1, "stonewall" -> 1, "epidemics" -> 1, "vu" -> 1, 
         "deja" -> 1, "cessation" -> 1, "statements" -> 1, "recitation" -> 1, 
         "o." -> 1, "insults" -> 1, "pundit" -> 1, "cruelties" -> 1, 
         "unveilings" -> 1, "fo" -> 1, "calculator" -> 1, "misanthrope" -> 1, 
         "sfo" -> 1, "settings" -> 1, "clinician" -> 1, "members." -> 1, 
         "diseases." -> 1, "stickers" -> 1, "priorities" -> 1, "mailboxes" -> 
         1, "disconnection" -> 1, "rolls" -> 1, "sourdough" -> 1, "affair" -> 
         1, "expectation" -> 1, "trend" -> 1, "rope" -> 1, "hemp" -> 1, 
         "balsa" -> 1, "strings" -> 1, "drinks" -> 1, "sleepovers" -> 1, 
         "fold" -> 1, "pajamas" -> 1, "footie" -> 1, "pilgrims" -> 1, 
         "cornucopias" -> 1, "blouse" -> 1, "tureen" -> 1, "creuset" -> 1, 
         "pumpkins" -> 1, "subject" -> 1, "individualist" -> 1, "bubbles" -> 
         1, "realities" -> 1, "approach" -> 1, "hazard" -> 1, "m4a" -> 1, 
         "completion" -> 1, "sunroom" -> 1, "arguments" -> 1, "crap" -> 1, 
         "carver" -> 1, "blossom" -> 1, "dam" -> 1, "provenance" -> 1, 
         "hunting" -> 1, "hunter" -> 1, "datk" -> 1, "dams" -> 1, "treat" -> 
         1, "bunnies" -> 1, "carrots" -> 1, "mugs" -> 1, "mini" -> 1, "cocoa" -> 
         1, "dummies" -> 1, "afar" -> 1, "hindsight" -> 1, "bradley" -> 1, 
         "cargo" -> 1, "streetlight" -> 1, "engines" -> 1, "airlines" -> 1, 
         "southwest" -> 1, "hairpin" -> 1, "tarmac" -> 1, "writers" -> 1, 
         "willow" -> 1, "zinfandel" -> 1, "mi" -> 1, "holland" -> 1, 
         "greyhound" -> 1, "console" -> 1, "bots" -> 1, "scalpers" -> 1, 
         "playstation" -> 1, "tg" -> 1, "ancestry" -> 1, "cooks" -> 1, 
         "30-somethings" -> 1, "discussion." -> 1, "daughter-in-law" -> 1, 
         "attendance" -> 1, "homestead" -> 1, "abundance" -> 1, "firm" -> 1, 
         "consulting" -> 1, "professional" -> 1, "precipice" -> 1, "tracks" -> 
         1, "effectiveness" -> 1, "l." -> 1, "nebulizer" -> 1, "peroxide" -> 
         1, "vitamins" -> 1, "rings" -> 1, "receptionist" -> 1, "t." -> 1, 
         "woe" -> 1, "dictator" -> 1, "ph.d" -> 1, "future." -> 1, 
         "coffee-shop" -> 1, "fingertip" -> 1, "reality-deniers" -> 1, 
         "amazement" -> 1, "skill" -> 1, "saps" -> 1, "interventions" -> 1, 
         "audit" -> 1, "bride" -> 1, "competitions" -> 1, "fluff" -> 1, 
         "compilations" -> 1, "puppies" -> 1, "switch" -> 1, "nonevents" -> 1,
          "disgust" -> 1, "makers" -> 1, "greetings" -> 1, "rages" -> 1, 
         "borders" -> 1, "rat" -> 1, "haha" -> 1, "cliff" -> 1, "detour" -> 1,
          "rooms/dorms" -> 1, "sweater" -> 1, "polaroid" -> 1, "epicenters" -> 
         1, "sacrifice" -> 1, "full-price" -> 1, "extensions" -> 1, "rug" -> 
         1, "influenza" -> 1, "absolutes" -> 1, "grasp" -> 1, "rut" -> 1, 
         "hotline" -> 1, "n.z." -> 1, "ethic" -> 1, "fears." -> 1, "familly" -> 
         1, "essentials" -> 1, "neurologist" -> 1, "philly" -> 1, "yeah" -> 1,
          "seriousness" -> 1, "dump" -> 1, "richmond" -> 1, "limbo" -> 1, 
         "breakdowns" -> 1, "saliva" -> 1, "tightness" -> 1, "flavor" -> 1, 
         "character" -> 1, "decency" -> 1, "euphoria" -> 1, "npr" -> 1, 
         "9pm-6am" -> 1, "france" -> 1, "unknowns" -> 1, "roofs" -> 1, "ends" -> 
         1, "seventies" -> 1, "teeters" -> 1, "trappings" -> 1, "folk-hero" -> 
         1, "anti-heroes" -> 1, "prophecy" -> 1, "festinger" -> 1, "motif" -> 
         1, "superpac" -> 1, "congratulating" -> 1, "acids" -> 1, "amino" -> 
         1, "lipopeptide" -> 1, "columbia" -> 1, "cages" -> 1, "confetti" -> 
         1, "ceilings" -> 1, "streamers" -> 1, "sobs" -> 1, "clinton" -> 1, 
         "lecture" -> 1, "minnesota" -> 1, "shower" -> 1, "chuckle" -> 1, 
         "behaviours" -> 1, "lecturer" -> 1, "deprivation" -> 1, "trance" -> 
         1, "bbc" -> 1, "increments" -> 1, "4.30-5am" -> 1, "educations" -> 1,
          "skidmore" -> 1, "closings" -> 1, "charlie" -> 1, "costume" -> 1, 
         "trick" -> 1, "jeans" -> 1, "attire" -> 1, "briefly" -> 1, 
         "everybody" -> 1, "spurts" -> 1, "cinema" -> 1, "forms" -> 1, 
         "bursts" -> 1, "imaginations" -> 1, "remake" -> 1, "meanings" -> 1, 
         "blows" -> 1, "melody" -> 1, "vibrations" -> 1, "shame" -> 1, 
         "beacon" -> 1, "superiority" -> 1, "revival" -> 1, "distain" -> 1, 
         "hero" -> 1, "dr" -> 1, "misinformation" -> 1, "scientist" -> 1, 
         "consumption" -> 1, "saturdays" -> 1, "sol" -> 1, "dealerships" -> 1,
          "correspondence" -> 1, "nowci" -> 1, "statexis" -> 1, "canvases" -> 
         1, "yhe" -> 1, "amunition" -> 1, "pepper" -> 1, "ine" -> 1, "nixon" -> 
         1, "respinse" -> 1, "electives" -> 1, "umpteenth" -> 1, "serenity" -> 
         1, "grazing" -> 1, "observer" -> 1, "vandalism" -> 1, "looting" -> 1,
          "frame" -> 1, "freelance" -> 1, "anybody" -> 1, "downs" -> 1, "aha" -> 
         1, "orgs" -> 1, "sophmore" -> 1, "safe" -> 1, "freshmen" -> 1, 
         "guideline" -> 1, "boundaries" -> 1, "homie" -> 1, "looks" -> 1, 
         "alright" -> 1, "chillin" -> 1, "weekly" -> 1, "chiropractor" -> 1, 
         "soldiers" -> 1, "ventilation" -> 1, "friendsgiving" -> 1, "popeye" -> 
         1, "gravy" -> 1, "tenders" -> 1, "potatoes" -> 1, "turkey" -> 1, 
         "feds" -> 1, "reimbursements" -> 1, "jamming" -> 1, "printer" -> 1, 
         "fruit" -> 1, "fridge" -> 1, "rapport" -> 1, "toothpaste" -> 1, 
         "shampoo" -> 1, "donations" -> 1, "file" -> 1, "securely." -> 1, 
         "scanners" -> 1, "laptops" -> 1, "capability" -> 1, "fax" -> 1, 
         "printers" -> 1, "norway" -> 1, "rocks" -> 1, "whidbey" -> 1, 
         "ferry" -> 1, "service/communications" -> 1, "questionnaire" -> 1, 
         "prescreen" -> 1, "affairs" -> 1, "houston" -> 1, "licensure" -> 1, 
         "lemons" -> 1, "ambassador" -> 1, "goodies" -> 1, "snacks" -> 1, 
         "package" -> 1, "revenants" -> 1, "renewal" -> 1, "displacements" -> 
         1, "repression" -> 1, "maop" -> 1, "templates" -> 1, "exorcisms" -> 
         1, "psychodynamics" -> 1, "kkk" -> 1, "charlottesville" -> 1, 
         "massacres" -> 1, "dur" -> 1, "gus" -> 1, "pasts" -> 1, 
         "repressions" -> 1, "fungibility" -> 1, "putin" -> 1, "erdogan" -> 1,
          "flynn" -> 1, "smuggling" -> 1, "prosecutors" -> 1, "psychiatrist" -> 
         1, "bolivia" -> 1, "populace" -> 1, "polling" -> 1, "replay" -> 1, 
         "suppression" -> 1, "hysteria" -> 1, "manuals" -> 1, "chains" -> 1, 
         "warfare" -> 1, "dissemination" -> 1, "tactics" -> 1, 
         "land-holdings" -> 1, "dismantlng" -> 1, "hydroxychloroquine" -> 1, 
         "promotion" -> 1, "ministers" -> 1, "cruelty" -> 1, "citizenry" -> 1,
          "latin" -> 1, "pan" -> 1, "alliance" -> 1, "maintenance" -> 1, 
         "isolationnnnn" -> 1, "nephews" -> 1, "fallings" -> 1, "butterflyer" -> 
         1, "backstroker" -> 1, "showboat" -> 1, "worksheet" -> 1, 
         "inferiority" -> 1, "arithmetic" -> 1, "kenya" -> 1, "elbow" -> 1, 
         "crook" -> 1, "chillier" -> 1, "lgbtqia" -> 1, "hillary" -> 1, 
         "glee" -> 1, "extremist" -> 1, "zealots" -> 1, "fri" -> 1, 
         "thoroughness" -> 1, "reaches" -> 1, "practitioner" -> 1, "passover" -> 
         1, "disinfectant" -> 1, "nosebleed" -> 1, "swine" -> 1, "patch" -> 1,
          "eek" -> 1, "needle" -> 1, "payment" -> 1, "kibosh" -> 1, "ship" -> 
         1, "bandmates" -> 1, "thunderbolt" -> 1, "ouch" -> 1, "ark" -> 1, 
         "noah" -> 1, "tallit" -> 1, "shabbos" -> 1, "reinfection" -> 1, 
         "honesty" -> 1, "cliche" -> 1, "catastrophe" -> 1, "minyanim" -> 1, 
         "bonding" -> 1, "allerpet" -> 1, "bamboo" -> 1, "subscriptions" -> 1,
          "notifications" -> 1, "watches" -> 1, "scripts" -> 1, 
         "questionnaires" -> 1, "er" -> 1, "victim" -> 1, "authentication" -> 
         1, "password" -> 1, "togetherness" -> 1, "unions" -> 1, "pope" -> 1, 
         "profuseness" -> 1, "patron" -> 1, "co-owner" -> 1, "philanthropist" -> 
         1, "owner" -> 1, "incident" -> 1, "scum" -> 1, "omen" -> 1, 
         "swastika" -> 1, "whammy" -> 1, "joys" -> 1, "shuffling" -> 1, 
         "shushing" -> 1, "piles" -> 1, "leaf" -> 1, "hoorah" -> 1, "fashion" -> 
         1, "prisoner" -> 1, "standards" -> 1, "theres" -> 1, "wash" -> 1, 
         "shimmer" -> 1, "transfer" -> 1, "encounter" -> 1, "prism" -> 1, 
         "crystal" -> 1, "tiktok" -> 1, "puppy" -> 1, "visions" -> 1, "halls" -> 
         1, "concepts" -> 1, "workshop" -> 1, "squash" -> 1, "kuri" -> 1, 
         "cherokee" -> 1, "popcorn" -> 1, "herbs" -> 1, "rutabagas" -> 1, 
         "turnips" -> 1, "beets" -> 1, "refugees" -> 1, "harassment" -> 1, 
         "super-spreaders" -> 1, "politicization" -> 1, "volunteers" -> 1, 
         "congregation" -> 1, "modalities" -> 1, "learners" -> 1, "setting" -> 
         1, "packaging" -> 1, "ensues" -> 1, "moveon.org" -> 1, "barack" -> 1,
          "script" -> 1, "civid" -> 1, "exhibition" -> 1, "tome" -> 1, 
         "artwork" -> 1, "piem" -> 1, "ifcshe" -> 1, "goidhall" -> 1, "jane" -> 
         1, "ince" -> 1, "biat" -> 1, "doorway" -> 1, "bergs" -> 1, "jirdan" -> 
         1, "petra" -> 1, "ehen" -> 1, "entrance" -> 1, "lagoon" -> 1, 
         "burial" -> 1, "libg" -> 1, "holes" -> 1, "bedside" -> 1, "iv" -> 1, 
         "disappointments" -> 1, "fascism" -> 1, "breeds" -> 1, "victims" -> 
         1, "re-rise" -> 1, "hormones" -> 1, "shekel" -> 1, "upwards" -> 1, 
         "washingtonians" -> 1, "cashier" -> 1, "conjunction" -> 1, "quad" -> 
         1, "jan-" -> 1, "sophomore" -> 1, "splints" -> 1, "walgreens" -> 1, 
         "abomination" -> 1, "stands" -> 1, "espn" -> 1, "midterms" -> 1, 
         "peter" -> 1, "vitriol" -> 1, "compressions" -> 1, "tens" -> 1, 
         "pro-lifers" -> 1, "stem" -> 1, "froggy" -> 1, "deniers" -> 1, 
         "responsiblities" -> 1, "carrying" -> 1, "treason" -> 1, 
         "legislature" -> 1, "agitation" -> 1, "scott" -> 1, "taney" -> 1, 
         "roger" -> 1, "salmon" -> 1, "recess" -> 1, "aba" -> 1, "appeals" -> 
         1, "agency" -> 1, "authoritarianism" -> 1, "barr" -> 1, "attorney" -> 
         1, "suckers" -> 1, "losers" -> 1, "devastation" -> 1, "nafta" -> 1, 
         "silliness" -> 1, "sen." -> 1, "admonishment" -> 1, "moderator" -> 1,
          "rudeness" -> 1, "match" -> 1, "rude-interrupting" -> 1, "monitor" -> 
         1, "parachute" -> 1, "cartoon" -> 1, "robot" -> 1, "vice-president" -> 
         1, "aerosolization" -> 1, "particles" -> 1, "debaters" -> 1, 
         "partitions" -> 1, "placement" -> 1, "mayo" -> 1, "emergencies" -> 1,
          "hippa" -> 1, "spokespeople" -> 1, "reprimand" -> 1, "maddow" -> 1, 
         "rachel" -> 1, "khan" -> 1, "khizr" -> 1, "medicines" -> 1, 
         "gretchen" -> 1, "incitement" -> 1, "barret" -> 1, "steroids" -> 1, 
         "portico" -> 1, "mussolini" -> 1, "mania" -> 1, "bethesda" -> 1, 
         "helicopter" -> 1, "drops" -> 1, "affirmation" -> 1, "oscars" -> 1, 
         "distributor" -> 1, "globo" -> 1, "engagements" -> 1, "ships" -> 1, 
         "freight" -> 1, "husband/father" -> 1, "visas" -> 1, "spacing" -> 1, 
         "youngsters" -> 1, "waltham" -> 1, "thurs" -> 1, "immunization" -> 1,
          "limitations" -> 1, "reply" -> 1, "talent" -> 1, "dependence" -> 1, 
         "compositions" -> 1, "machines" -> 1, "influx" -> 1, "jukeboxes" -> 
         1, "https://www.nytimes.com/2020/04/01/opinion/coronavirus-black-\
people.html?searchresultposition=8" -> 1, "whites" -> 1, "african-americans" -> 
         1, "diabeties" -> 1, "charles" -> 1, "bomb" -> 1, "academics" -> 1, 
         "contemplation" -> 1, "idiocy" -> 1, "obstinacy" -> 1, "dope" -> 1, 
         "cafe" -> 1, "home-schooling" -> 1, "summer-school" -> 1, 
         "signatures" -> 1, "lotion" -> 1, "tissues" -> 1, "valve" -> 1, 
         "steel" -> 1, "mri" -> 1, "backs" -> 1, "dud" -> 1, "torah" -> 1, 
         "simchat" -> 1, "discipline" -> 1, "whitener" -> 1, "gov" -> 1, 
         "terrorist" -> 1, "publications" -> 1, "spite" -> 1, "ordeal" -> 1, 
         "saga" -> 1, "theft" -> 1, "freeze" -> 1, "license" -> 1, "copies" -> 
         1, "equifax" -> 1, "bureaus" -> 1, "bags" -> 1, "banjo" -> 1, 
         "twigs" -> 1, "pad" -> 1, "heating" -> 1, "extension" -> 1, "chaise" -> 
         1, "sukkot" -> 1, "chandelier" -> 1, "suite" -> 1, "lepers" -> 1, 
         "allergist" -> 1, "essex" -> 1, "lifetime" -> 1, "tricks" -> 1, 
         "coursework" -> 1, "reminders" -> 1, "transformations" -> 1, 
         "thinkpieces" -> 1, "anti-semitism" -> 1, "misogyny" -> 1, 
         "smallness" -> 1, "ballots" -> 1, "dropbox" -> 1, "minyans" -> 1, 
         "covidiot-in-chief" -> 1, "grab" -> 1, "vocabularies" -> 1, "vp" -> 
         1, "casket" -> 1, "hallmark" -> 1, "t-shirt" -> 1, "shit-" -> 1, 
         "poll" -> 1, "d.c" -> 1, "tennessee" -> 1, "aster" -> 1, "goldenrod" -> 
         1, "anne" -> 1, "highways" -> 1, "flexibility" -> 1, "rearing" -> 1, 
         "fathers" -> 1, "screams" -> 1, "skylight" -> 1, "nd" -> 1, "karma" -> 
         1, "vehicle" -> 1, 
         "https://www.wfsb.com/news/west-hartford-familys-annual-halloween-\
display-tackles-blm-covid-19/article_b22f79a0-0724-11eb-97fd-5f5558807e19.\
html" -> 1, "hartford" -> 1, 
         "https://www.cnn.com/2020/10/01//connecticut-man-halloween-covid-blm-\
trnd/index.html" -> 1, "#blm" -> 1, "displays" -> 1, "vaginas" -> 1, "venice" -> 
         1, "posts" -> 1, "hudson" -> 1, "turnout" -> 1, "burns" -> 1, 
         "layer" -> 1, "companies/individuals" -> 1, "movers" -> 1, "hvac" -> 
         1, "locksmith" -> 1, "home-buying" -> 1, "affect" -> 1, "protectors" -> 
         1, "stars" -> 1, "responder" -> 1, "epidemiology" -> 1, "mph" -> 1, 
         "outdoors" -> 1, "panes" -> 1, "deadlines" -> 1, "shofar" -> 1, 
         "neilah" -> 1, "psalms" -> 1, "shmira" -> 1, "harper" -> 1, 
         "liberalism" -> 1, "tablet" -> 1, "berman" -> 1, "kippurs" -> 1, 
         "yom" -> 1, "pronouncements" -> 1, "region" -> 1, "definition" -> 1, 
         "luxuries" -> 1, "yogurt" -> 1, "respects" -> 1, "parkinson" -> 1, 
         "omg" -> 1, "sleuthing" -> 1, "tenants" -> 1, "inventory" -> 1, 
         "umemployment" -> 1, "wreck" -> 1, "marshmallows" -> 1, "cabins" -> 
         1, "breanna" -> 1, "aughust" -> 1, "sinus" -> 1, "lands" -> 1, 
         "concept" -> 1, "establishments" -> 1, "fly-" -> 1, "flamingos" -> 1,
          "development" -> 1, "diagnostics" -> 1, "singapore" -> 1, 
         "checking" -> 1, "plays" -> 1, "care-taking" -> 1, "uganda" -> 1, 
         "care-givers" -> 1, "care-takers" -> 1, "drivers" -> 1, "farmer" -> 
         1, "ebola" -> 1, "predictors" -> 1, "components" -> 1, "fda" -> 1, 
         "cdc" -> 1, "rearrangements" -> 1, "carriers" -> 1, "dynamics" -> 1, 
         "debilitation" -> 1, "haulers" -> 1, "progress" -> 1, 
         "policy-politics" -> 1, "biology" -> 1, "banking" -> 1, 
         "organizations" -> 1, "keeper" -> 1, "moblizations" -> 1, 
         "fascination" -> 1, "migration" -> 1, "interdependence" -> 1, 
         "cooperation" -> 1, "militias" -> 1, "rabble" -> 1, "outcome" -> 1, 
         "continuity" -> 1, "judges" -> 1, "governors" -> 1, "obligation" -> 
         1, "confirmation" -> 1, "vetting" -> 1, "intent" -> 1, 
         "infrastructure" -> 1, "sterling" -> 1, "freddie" -> 1, "prude" -> 1,
          "jean" -> 1, "botham" -> 1, "brooks" -> 1, "rayshard" -> 1, 
         "martin" -> 1, "treyvon" -> 1, "tamir" -> 1, "arbery" -> 1, "ahmaud" -> 
         1, "floyd" -> 1, "scholar" -> 1, "philosopher" -> 1, "admonitions" -> 
         1, "co-faculty" -> 1, "undergrads" -> 1, "graduate" -> 1, "potluck" -> 
         1, "sushi" -> 1, "semi-hibernation" -> 1, "4x" -> 1, "schedules" -> 
         1, "loft" -> 1, "factory" -> 1, "plumbing" -> 1, "koi" -> 1, 
         "varieties" -> 1, "sizes" -> 1, "volleyball" -> 1, "soccer" -> 1, 
         "strollers" -> 1, "tots" -> 1, "murderers" -> 1, "warriors" -> 1, 
         "meme" -> 1, "cop" -> 1, "pet" -> 1, "guide" -> 1, "flow" -> 1, 
         "great-grandchildren" -> 1, "dictators" -> 1, "ass-hole" -> 1, 
         "hurricanes" -> 1, "donald" -> 1, "theaters" -> 1, "malls" -> 1, 
         "reward" -> 1, "leftover" -> 1, "sand" -> 1, "kernels" -> 1, 
         "rewards" -> 1, "vogue" -> 1, "metaphors" -> 1, "crop" -> 1, 
         "cherries" -> 1, "quince" -> 1, "grasshopper" -> 1, "ant" -> 1, 
         "vires" -> 1, "scam" -> 1, "cone" -> 1, "intuitions" -> 1, 
         "friendships" -> 1, "teammates" -> 1, "workout" -> 1, 
         "individualism" -> 1, "well-" -> 1, "sample" -> 1, "'t" -> 1, 
         "bittersweet" -> 1, "homeschool" -> 1, "blip" -> 1, "masses" -> 1, 
         "dollars" -> 1, "negligence" -> 1, "insignificance" -> 1, 
         "helplessness" -> 1, "ill-preparedness" -> 1, "half-measures" -> 1, 
         "fizzle" -> 1, "festivals" -> 1, "conventions" -> 1, "ooops" -> 1, 
         "pesach" -> 1, "glue" -> 1, "bubbe" -> 1, "kiddush" -> 1, 
         "driftwood" -> 1, "rental" -> 1, "suspect" -> 1, "pen" -> 1, "cross" -> 
         1, "exxon" -> 1, "lobby" -> 1, "decorator" -> 1, "books-a-million" -> 
         1, "crossover" -> 1, "kohl" -> 1, "coed" -> 1, "kroger" -> 1, 
         "codger" -> 1, "shoppers" -> 1, "player" -> 1, "camper" -> 1, 
         "kenny" -> 1, "diplodocus" -> 1, "triangle" -> 1, "cbt" -> 1, 
         "printout" -> 1, "babies" -> 1, "afterglow" -> 1, "depth" -> 1, 
         "hollowness" -> 1, "gesture" -> 1, "soundwaves" -> 1, "vibes" -> 1, 
         "wix" -> 1, "paras" -> 1, "miscommunication" -> 1, "entrance/exit" -> 
         1, "committees" -> 1, "ac" -> 1, "census" -> 1, "pattern" -> 1, 
         "read" -> 1, "cemetery" -> 1, "wildlife" -> 1, "avail" -> 1, 
         "fridays" -> 1, "tourism" -> 1, "apocalypse" -> 1, "graffiti" -> 1, 
         "storefronts" -> 1, "graders" -> 1, "sweetness" -> 1, "address" -> 1,
          "pink" -> 1, "droplets" -> 1, "bikes" -> 1, "self-isolating" -> 1, 
         "collapse" -> 1, "passages" -> 1, "net" -> 1, "gown" -> 1, "tow" -> 
         1, "check-" -> 1, "ids" -> 1, "ft" -> 1, "symbol" -> 1, "tents" -> 1,
          "eggshells" -> 1, "function" -> 1, "self-doubt" -> 1, "anguish" -> 
         1, "campfire" -> 1, "exit" -> 1, "miracle" -> 1, "7pm" -> 1, 
         "feeding" -> 1, "esophagus" -> 1, "recurrence" -> 1, "bathrobe" -> 1,
          "zattend" -> 1, "kibbitz" -> 1, "phew" -> 1, "rituals" -> 1, 
         "time-of-corona" -> 1, "filings" -> 1, "suspicion" -> 1, "doula" -> 
         1, "connectivity" -> 1, "blending" -> 1, "nostrils" -> 1, "vehicles" -> 
         1, "clipboards" -> 1, "aleve" -> 1, "disc" -> 1, "steroid" -> 1, 
         "tobacco" -> 1, "following" -> 1, "casualties" -> 1, "utterances" -> 
         1, "gradient" -> 1, "briefn" -> 1, "artbook" -> 1, "colbert" -> 1, 
         "dew" -> 1, "spider" -> 1, "bite" -> 1, "horsefly" -> 1, "menu" -> 1,
          "expedition" -> 1, "campground" -> 1, "vacations/outings" -> 1, 
         "hostess" -> 1, "english" -> 1, "superheroes" -> 1, "defeat" -> 1, 
         "adversity" -> 1, "aloneness" -> 1, "awareness/experience" -> 1, 
         "chemo" -> 1, "half-days" -> 1, "cohorts" -> 1, "splitting" -> 1, 
         "garlic" -> 1, "bulb" -> 1, "avocados" -> 1, "pita" -> 1, "pasta" -> 
         1, "noodles" -> 1, "ramen" -> 1, "manner" -> 1, "disposal" -> 1, 
         "mats" -> 1, "whisk" -> 1, "spoon" -> 1, "utensils" -> 1, 
         "wafflemaker" -> 1, "crockpot" -> 1, "coffeemaker" -> 1, 
         "appliances" -> 1, "portrait" -> 1, "unicorn" -> 1, "outputs" -> 1, 
         "midterm" -> 1, "supermarkets" -> 1, "riders" -> 1, "relaxation" -> 
         1, "freefall" -> 1, "asinine" -> 1, "testament" -> 1, "woodshop" -> 
         1, "hunk" -> 1, "marker" -> 1, "outages" -> 1, "isaias" -> 1, 
         "woodworking" -> 1, "bracelets" -> 1, "lanyards" -> 1, "flagpole" -> 
         1, "nagging" -> 1, "screens" -> 1, "zooms" -> 1, "playroom" -> 1, 
         "roughhousing" -> 1, "hugging" -> 1, "backrubs" -> 1, "overnights" -> 
         1, "groups/pods" -> 1, "lunches" -> 1, "drop-" -> 1, "covid-era" -> 
         1, "5g" -> 1, "gates" -> 1, "rumor" -> 1, "plastic" -> 1, "patent" -> 
         1, "phenomenon" -> 1, "tugs" -> 1, "day-trip" -> 1, "violators" -> 1,
          "reunification" -> 1, "berlin" -> 1, "takeout" -> 1, "get-" -> 1, 
         "paw" -> 1, "monkey" -> 1, "cancellation" -> 1, "dominoes" -> 1, 
         "shows" -> 1, "breather" -> 1, "rehearsals" -> 1, "episode" -> 1, 
         "sons" -> 1, "walmart" -> 1, "reorganisation" -> 1, "facets" -> 1, 
         "impacts" -> 1, "lorde" -> 1, "audre" -> 1, "corona-virus" -> 1, 
         "pjp" -> 1, "reliant" -> 1, "baseball" -> 1, "basics" -> 1, "nag" -> 
         1, "carts" -> 1, "mornings" -> 1, "pharmacists" -> 1, "tower" -> 1, 
         "jigsaw" -> 1, "tacos" -> 1, "grind" -> 1, "departure" -> 1, 
         "expenses" -> 1, "cough" -> 1, "slander" -> 1, "yoho" -> 1, 
         "franklin" -> 1, "aretha" -> 1, "taxi" -> 1, "humus-seller" -> 1, 
         "hideout" -> 1, "elements" -> 1, "cucumbers" -> 1, "zucchini" -> 1, 
         "tomatoes" -> 1, "trellis" -> 1, "cucumber" -> 1, "streetcar" -> 1, 
         "dawn" -> 1, "arm" -> 1, "merit" -> 1, "expertise" -> 1, "towns" -> 
         1, "cycles" -> 1, "wont" -> 1, "kidney" -> 1, "damper" -> 1, 
         "destinations" -> 1, "stages" -> 1, "cookie" -> 1, "pasteries" -> 1, 
         "works" -> 1, "artists" -> 1, "bussiness" -> 1, "admissions" -> 1, 
         "ventilators" -> 1, "accommodations" -> 1, "gorge" -> 1, "tightrope" -> 
         1, "ridership" -> 1, "application" -> 1, "ocd" -> 1, "gad" -> 1, 
         "routes" -> 1, "fulfillment" -> 1, "pediatrician" -> 1, 
         "advancement" -> 1, "/enjoyment" -> 1, "abuser" -> 1, "charges" -> 1,
          "gm" -> 1, "novel" -> 1, "incomprehensible" -> 1, "knob" -> 1, 
         "van" -> 1, "speciality" -> 1, "gospel" -> 1, "sj" -> 1, "bias" -> 1,
          "webinars" -> 1, "perceptions" -> 1, "diversity" -> 1, "ladder" -> 
         1, "sabotage" -> 1, "reserves" -> 1, "passengers" -> 1, "sop" -> 1, 
         "exterminator" -> 1, "thermostat" -> 1, "air/heat" -> 1, "marks" -> 
         1, "honours" -> 1, "inslee" -> 1, "jay" -> 1, "retail" -> 1, 
         "returns" -> 1, "tio" -> 1, "rose" -> 1, "initials" -> 1, "vices" -> 
         1, "thirteenth" -> 1, "wonderland" -> 1, "alice" -> 1, "rabbit-hole" -> 
         1, "zen" -> 1, "implication" -> 1, "crafts" -> 1, "frames" -> 1, 
         "notions" -> 1, "fools" -> 1, "prophecies" -> 1, "scriptures" -> 1, 
         "hum" -> 1, "crabs" -> 1, "ecosystems" -> 1, "diety" -> 1, "corpse" -> 
         1, "nothingness" -> 1, "academia" -> 1, "adulthood" -> 1, "stances" -> 
         1, "heydays" -> 1, "impulsivity" -> 1, "wars" -> 1, "backdrop" -> 1, 
         "mountaintops" -> 1, "cassandra" -> 1, "prophet" -> 1, "rises" -> 1, 
         "towel" -> 1, "remorse" -> 1, "buyer" -> 1, "cart" -> 1, 
         "post-solstice" -> 1, "mask-making" -> 1, "inches" -> 1, 
         "recipients" -> 1, "lock-" -> 1, "submission" -> 1, "contest" -> 1, 
         "competition" -> 1, "grids" -> 1, "detergents" -> 1, "soaps" -> 1, 
         "toiletries" -> 1, "staples" -> 1, "commodities" -> 1, "jerk" -> 1, 
         "heaven" -> 1, "nervous." -> 1, "economies" -> 1, "carry-" -> 1, 
         "oz" -> 1, "tsa" -> 1, "lock" -> 1, "resit" -> 1, "occurrence" -> 1, 
         "prescription" -> 1, "groupchats" -> 1, "speed" -> 1, "blankets" -> 
         1, "abilities" -> 1, "stupidity" -> 1, "poverty" -> 1, "adrenaline" -> 
         1, "jog" -> 1, "boroughs" -> 1, "shootings" -> 1, "affiliations" -> 
         1, "worsening" -> 1, "cyst" -> 1, "belly" -> 1, "specialty" -> 1, 
         "psychiatry" -> 1, "//" -> 1, "f-1" -> 1, "muggy" -> 1, "noon" -> 1, 
         "outlook" -> 1, "end-" -> 1, "dandelions" -> 1, "dunkin'" -> 1, 
         "individual" -> 1, "balloons" -> 1, "frustrations" -> 1, "units" -> 
         1, "anonymity" -> 1, "demands" -> 1, "cable" -> 1, "directive" -> 1, 
         "renter" -> 1, "goats" -> 1, "chickens" -> 1, "acres" -> 1, 
         "grandfathers" -> 1, "uncles" -> 1, "tha" -> 1, "nags" -> 1, 
         "bustle" -> 1, "hustle" -> 1, "quiet" -> 1, "pijamas" -> 1, "decay" -> 
         1, "precursor" -> 1, "pains" -> 1, "altercations" -> 1, "syndrome" -> 
         1, "autism" -> 1, "duh" -> 1, "removal" -> 1, "waste" -> 1, 
         "reduction" -> 1, "repeat" -> 1, "end-all-be-" -> 1, "payer" -> 1, 
         "provisions" -> 1, "hunter/gatherer" -> 1, "ambulance" -> 1, "asia" -> 
         1, "developments" -> 1, "reassurance" -> 1, "newborns" -> 1, 
         "children/families" -> 1, "pediatricians" -> 1, "checkup" -> 1, 
         "inconvenience" -> 1, "spa" -> 1, "jogging" -> 1, "resurgence" -> 1, 
         "coposcopy" -> 1, "examination" -> 1, "regresar" -> 1, "pakistan" -> 
         1, "japan" -> 1, "paperweight" -> 1, "figurines" -> 1, 
         "paraphernalia" -> 1, "catalyst" -> 1, "minneapolis" -> 1, 
         "northeast" -> 1, "hip" -> 1, "killer" -> 1, "onlookers" -> 1, 
         "re-entry" -> 1], "InitialShape" -> TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[134.40000000000003`], 
           TypeSystem`PackageScope`AtomShape[34]]], 20, 
         DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 5429], "Meta" -> 
       Association["ID" -> 169522586027433], "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[134.40000000000003`], 
           TypeSystem`PackageScope`AtomShape[34]]], 20, 
         DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 5429], "Path" -> {}, "BaseIndices" -> {}, 
       "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
       5429, "DataColumnCount" -> 1, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["people", 
                    Style[
                    "people", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["people"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["people"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["491"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["people"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["time", 
                    Style[
                    "time", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["time"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["time"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["381"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["time"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["week", 
                    Style[
                    "week", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["week"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["week"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["331"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["week"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["day", 
                    Style[
                    "day", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["day"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["day"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["281"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["day"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["home", 
                    Style[
                    "home", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["home"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["home"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["279"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["home"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["covid", 
                    Style[
                    "covid", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["covid"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["covid"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["247"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["covid"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["family", 
                    Style[
                    "family", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["family"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["family"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["209"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["family"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["pandemic", 
                    Style[
                    "pandemic", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pandemic"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["pandemic"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["195"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["pandemic"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["year", 
                    Style[
                    "year", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["year"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["year"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["189"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["year"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["life", 
                    Style[
                    "life", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["life"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["life"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["179"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["life"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["friends", 
                    Style[
                    "friends", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["friends"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["friends"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["174"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["friends"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["things", 
                    Style[
                    "things", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["things"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["things"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["174"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["things"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["days", 
                    Style[
                    "days", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["days"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["days"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["158"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["days"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["work", 
                    Style[
                    "work", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["work"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["work"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["136"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["work"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["way", 
                    Style[
                    "way", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["way"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["way"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["132"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["way"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["school", 
                    Style[
                    "school", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["school"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["school"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["119"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["school"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["health", 
                    Style[
                    "health", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["health"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["health"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["119"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["health"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["vaccine", 
                    Style[
                    "vaccine", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["vaccine"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["vaccine"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["117"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["vaccine"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["house", 
                    Style[
                    "house", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["house"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["house"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["113"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["house"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["today", 
                    Style[
                    "today", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["today"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["today"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["113"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["today"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Deploy[
                Pane[
                 Row[{
                   Spacer[2], 
                   Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 5429, 1], {1, 5429 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 5429, 1], {1, 5429 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    5429, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    5429, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 5429, 1], {1, 5429 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 5429, 1], {1, 5429 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                   Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
               Background -> 
               RGBColor[
                0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
               Alignment -> {Left, Top}], SpanFromLeft}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
              "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
            Left, Dividers -> All, FrameStyle -> 
            GrayLevel[0.7490196078431373], 
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
           LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
           ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           If[GeneralUtilities`$DebugMode, 
            Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
              TypeSystem`NestedGrid`PackagePrivate`formatState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{211., {210.85052490234375`, 215.14947509765625`}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{211., {210.85052490234375`, 215.14947509765625`}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>
       Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Association[
      "InitialData" -> 
       Association[
        "'s" -> 371, "'m" -> 245, "feel" -> 234, "going" -> 232, "know" -> 
         184, "think" -> 177, "got" -> 147, "'ve" -> 138, "ca" -> 135, 
         "\[CloseCurlyQuote]s" -> 126, "want" -> 123, "make" -> 112, 
         "getting" -> 109, "\[CloseCurlyQuote]m" -> 106, "come" -> 104, 
         "felt" -> 102, "trying" -> 93, "work" -> 89, "working" -> 88, 
         "feels" -> 84, "went" -> 82, "need" -> 81, "started" -> 78, "live" -> 
         73, "stay" -> 69, "'re" -> 68, "said" -> 67, "lost" -> 65, "left" -> 
         63, "say" -> 63, "makes" -> 62, "taking" -> 60, "let" -> 60, "used" -> 
         58, "wear" -> 55, "took" -> 54, "found" -> 53, "seeing" -> 53, 
         "died" -> 52, "help" -> 50, "continue" -> 50, "try" -> 50, "thought" -> 
         50, "\[CloseCurlyQuote]ve" -> 49, "came" -> 48, "making" -> 48, 
         "look" -> 47, "miss" -> 47, "feeling" -> 46, "read" -> 46, "love" -> 
         46, "coming" -> 46, "'ll" -> 45, "thinking" -> 45, "looking" -> 44, 
         "'d" -> 44, "tested" -> 43, "happen" -> 43, "saying" -> 42, "told" -> 
         42, "wo" -> 42, "wearing" -> 42, "start" -> 41, "taken" -> 40, 
         "gone" -> 40, "believe" -> 40, "seen" -> 40, "stop" -> 40, "hope" -> 
         39, "worry" -> 39, "wait" -> 39, "knew" -> 38, "watching" -> 37, 
         "changed" -> 37, "loved" -> 36, "wanted" -> 36, "kept" -> 36, "saw" -> 
         35, "began" -> 35, "decided" -> 33, "moving" -> 33, "write" -> 33, 
         "understand" -> 33, "leave" -> 32, "affected" -> 32, "allowed" -> 31,
          "watch" -> 31, "sit" -> 31, "spent" -> 31, "spend" -> 30, "brought" -> 
         30, "die" -> 30, "means" -> 30, "asked" -> 30, "closed" -> 29, 
         "passed" -> 29, "move" -> 29, "living" -> 28, "visit" -> 28, "hear" -> 
         28, "tell" -> 28, "knowing" -> 27, "happened" -> 27, "waiting" -> 27,
          "called" -> 27, "comes" -> 27, "moved" -> 27, "needed" -> 26, "set" -> 
         26, "hoping" -> 26, "staying" -> 25, "use" -> 25, "given" -> 25, 
         "talking" -> 25, "starting" -> 25, "including" -> 25, "happening" -> 
         25, "gave" -> 24, "goes" -> 24, "walking" -> 24, "care" -> 24, 
         "isolated" -> 24, "\[CloseCurlyQuote]d" -> 24, "gotten" -> 24, 
         "vaccinated" -> 23, "call" -> 23, "eat" -> 23, "end" -> 23, "tried" -> 
         23, "sent" -> 22, "says" -> 22, "supposed" -> 22, "realize" -> 22, 
         "lose" -> 22, "caused" -> 21, "keeping" -> 21, "meet" -> 21, "talk" -> 
         21, "turned" -> 21, "avoid" -> 21, "remember" -> 21, "like" -> 21, 
         "bring" -> 21, "using" -> 21, "worried" -> 21, "change" -> 21, 
         "expected" -> 20, "close" -> 20, "celebrate" -> 20, "received" -> 20,
          "begin" -> 20, "reading" -> 20, "hit" -> 20, "wonder" -> 20, "pick" -> 
         19, "struggling" -> 19, "stuck" -> 19, "worked" -> 19, "writing" -> 
         19, "held" -> 18, "realized" -> 18, "sleep" -> 18, "wrote" -> 18, 
         "walk" -> 18, "knows" -> 18, "mean" -> 17, "planning" -> 17, 
         "wanting" -> 17, "stopped" -> 17, "helped" -> 17, "stayed" -> 17, 
         "covid" -> 17, "noticed" -> 17, "keeps" -> 17, "ask" -> 17, "travel" -> 
         17, "walks" -> 17, "dying" -> 17, "attend" -> 17, "vote" -> 16, 
         "turn" -> 16, "looked" -> 16, "won" -> 16, "wants" -> 16, "met" -> 
         16, "rising" -> 16, "expect" -> 16, "run" -> 16, "affecting" -> 16, 
         "exposed" -> 15, "missed" -> 15, "thank" -> 15, "dealing" -> 15, 
         "scared" -> 15, "filled" -> 15, "share" -> 15, "missing" -> 15, 
         "finding" -> 15, "wondering" -> 15, "excited" -> 15, "thanksgiving" -> 
         14, "\[CloseCurlyQuote]re" -> 14, "heard" -> 14, "eating" -> 14, 
         "listen" -> 14, "sat" -> 14, "imagine" -> 14, "needs" -> 14, "play" -> 
         14, "exhausted" -> 14, "forced" -> 14, "focus" -> 14, "wore" -> 14, 
         "arrived" -> 14, "hanging" -> 13, "known" -> 13, "learning" -> 13, 
         "confirmed" -> 13, "putting" -> 13, "walked" -> 13, "traveling" -> 
         13, "becoming" -> 13, "bought" -> 13, "learned" -> 13, "helps" -> 13,
          "happens" -> 13, "march" -> 13, "fear" -> 13, "takes" -> 13, 
         "return" -> 13, "watched" -> 13, "enjoy" -> 12, "learn" -> 12, 
         "helping" -> 12, "works" -> 12, "continued" -> 12, "hang" -> 12, 
         "planned" -> 12, "gets" -> 12, "increasing" -> 12, "leaves" -> 12, 
         "allow" -> 12, "cancelled" -> 12, "ordered" -> 12, 
         "\[CloseCurlyQuote]ll" -> 12, "receive" -> 12, "check" -> 12, 
         "sitting" -> 12, "masked" -> 12, "lived" -> 12, "reminded" -> 12, 
         "hold" -> 12, "playing" -> 12, "lead" -> 12, "shut" -> 11, "shot" -> 
         11, "delivered" -> 11, "interact" -> 11, "provide" -> 11, "cried" -> 
         11, "results" -> 11, "woke" -> 11, "enjoyed" -> 11, "connect" -> 11, 
         "create" -> 11, "thinks" -> 11, "losing" -> 11, "driving" -> 11, 
         "broke" -> 11, "caught" -> 11, "asking" -> 11, "lives" -> 11, "pull" -> 
         11, "buy" -> 11, "cut" -> 11, "leaving" -> 11, "trapped" -> 11, 
         "flew" -> 11, "visited" -> 11, "open" -> 11, "spreading" -> 11, 
         "trust" -> 10, "voted" -> 10, "speak" -> 10, "handle" -> 10, "grew" -> 
         10, "stand" -> 10, "drove" -> 10, "increased" -> 10, "cry" -> 10, 
         "sleeping" -> 10, "talked" -> 10, "opened" -> 10, "wish" -> 10, 
         "fighting" -> 10, "offered" -> 10, "matter" -> 10, "spending" -> 10, 
         "bringing" -> 10, "express" -> 10, "running" -> 10, "protect" -> 10, 
         "forget" -> 10, "tired" -> 10, "visiting" -> 10, "scheduled" -> 10, 
         "ended" -> 10, "gather" -> 9, "continues" -> 9, "participate" -> 9, 
         "reached" -> 9, "failed" -> 9, "written" -> 9, "beginning" -> 9, 
         "deal" -> 9, "survive" -> 9, "experiencing" -> 9, "elected" -> 9, 
         "creating" -> 9, "reminds" -> 9, "concerned" -> 9, "spread" -> 9, 
         "follow" -> 9, "remain" -> 9, "fall" -> 9, "avoiding" -> 9, "join" -> 
         9, "picked" -> 9, "followed" -> 9, "celebrating" -> 9, "meant" -> 9, 
         "shared" -> 9, "push" -> 9, "preparing" -> 9, "involved" -> 9, 
         "slept" -> 9, "remove" -> 9, "locked" -> 9, "figure" -> 9, "trump" -> 
         9, "created" -> 9, "telling" -> 8, "traveled" -> 8, "drive" -> 8, 
         "quit" -> 8, "gives" -> 8, "calling" -> 8, "signed" -> 8, "reported" -> 
         8, "holding" -> 8, "begun" -> 8, "zoom" -> 8, "giving" -> 8, "break" -> 
         8, "falling" -> 8, "wake" -> 8, "compared" -> 8, "showing" -> 8, 
         "win" -> 8, "forgot" -> 8, "hurt" -> 8, "listening" -> 8, "cause" -> 
         8, "crossed" -> 8, "hiking" -> 8, "wash" -> 8, "remind" -> 8, "pray" -> 
         8, "protected" -> 8, "acting" -> 8, "gon" -> 8, "brings" -> 8, 
         "catch" -> 8, "following" -> 8, "paid" -> 8, "carry" -> 8, "ran" -> 
         8, "growing" -> 8, "afford" -> 8, "connected" -> 8, "experienced" -> 
         8, "grow" -> 8, "risk" -> 8, "riding" -> 8, "affect" -> 8, "stood" -> 
         8, "dealt" -> 7, "journaling" -> 7, "developed" -> 7, "pay" -> 7, 
         "save" -> 7, "sign" -> 7, "crying" -> 7, "support" -> 7, "checking" -> 
         7, "refused" -> 7, "turning" -> 7, "accept" -> 7, "cares" -> 7, 
         "please" -> 7, "worrying" -> 7, "quarantining" -> 7, "refuse" -> 7, 
         "buried" -> 7, "completed" -> 7, "sounds" -> 7, "continuing" -> 7, 
         "suffer" -> 7, "choose" -> 7, "taught" -> 7, "extended" -> 7, 
         "removed" -> 7, "enter" -> 7, "led" -> 7, "letting" -> 7, "closing" -> 
         7, "returning" -> 7, "requires" -> 7, "pass" -> 7, "control" -> 7, 
         "enjoying" -> 7, "breathe" -> 7, "build" -> 7, "appreciate" -> 7, 
         "fight" -> 7, "cope" -> 7, "entering" -> 7, "hospitalized" -> 7, 
         "entered" -> 7, "texting" -> 6, "breaking" -> 6, "heal" -> 6, 
         "pushing" -> 6, "reach" -> 6, "laughing" -> 6, "grown" -> 6, 
         "associated" -> 6, "fallen" -> 6, "slow" -> 6, "reminding" -> 6, 
         "focused" -> 6, "treated" -> 6, "offer" -> 6, "surprised" -> 6, 
         "recognize" -> 6, "holds" -> 6, "depressed" -> 6, "paying" -> 6, 
         "suffered" -> 6, "divided" -> 6, "pushed" -> 6, "decide" -> 6, 
         "quarantined" -> 6, "impacted" -> 6, "struck" -> 6, "sucks" -> 6, 
         "abandoned" -> 6, "meaning" -> 6, "coughing" -> 6, "wishing" -> 6, 
         "considering" -> 6, "leading" -> 6, "maintaining" -> 6, "showed" -> 
         6, "quarantine" -> 6, "socializing" -> 6, "send" -> 6, "meeting" -> 
         6, "passing" -> 6, "surrounding" -> 6, "catching" -> 6, "treat" -> 6,
          "unmasked" -> 6, "shop" -> 6, "teach" -> 6, "required" -> 6, "add" -> 
         6, "face" -> 6, "capture" -> 6, "laughed" -> 6, "registered" -> 6, 
         "wins" -> 6, "hearing" -> 6, "diagnosed" -> 6, "begins" -> 6, 
         "pretend" -> 6, "limited" -> 6, "rise" -> 6, "retired" -> 6, "hate" -> 
         6, "looks" -> 6, "organized" -> 6, "resigned" -> 5, "threatened" -> 
         5, "runs" -> 5, "born" -> 5, "flying" -> 5, "fluttering" -> 5, 
         "added" -> 5, "praying" -> 5, "attempted" -> 5, "clean" -> 5, 
         "process" -> 5, "finished" -> 5, "spoke" -> 5, "terrified" -> 5, 
         "cooped" -> 5, "draw" -> 5, "invited" -> 5, "heading" -> 5, 
         "prepared" -> 5, "invoke" -> 5, "drink" -> 5, "drop" -> 5, "causing" -> 
         5, "fulfilling" -> 5, "agree" -> 5, "tracing" -> 5, "upcoming" -> 5, 
         "figured" -> 5, "drowning" -> 5, "killing" -> 5, "stressed" -> 5, 
         "distancing" -> 5, "carrying" -> 5, "recorded" -> 5, "touch" -> 5, 
         "denied" -> 5, "complain" -> 5, "require" -> 5, "thrilled" -> 5, 
         "remained" -> 5, "dropped" -> 5, "recover" -> 5, "shows" -> 5, 
         "rely" -> 5, "pulled" -> 5, "packed" -> 5, "recovering" -> 5, "ride" -> 
         5, "appear" -> 5, "wears" -> 5, "attending" -> 5, "apply" -> 5, 
         "informed" -> 5, "record" -> 5, "respond" -> 5, "building" -> 5, 
         "suspect" -> 5, "starts" -> 5, "shutting" -> 5, "jumped" -> 5, 
         "shocked" -> 5, "studying" -> 5, "hoped" -> 5, "scream" -> 5, 
         "interacting" -> 5, "upset" -> 5, "maintain" -> 5, "declined" -> 5, 
         "caring" -> 5, "practice" -> 5, "stock" -> 5, "attached" -> 5, 
         "develop" -> 5, "tend" -> 5, "reopen" -> 5, "relieved" -> 5, 
         "realizing" -> 5, "contracted" -> 5, "trails" -> 4, "ted" -> 4, 
         "hiding" -> 4, "compromised" -> 4, "certify" -> 4, "step" -> 4, 
         "fucked" -> 4, "arrested" -> 4, "complaining" -> 4, "remembered" -> 
         4, "posted" -> 4, "furloughed" -> 4, "hitting" -> 4, "click" -> 4, 
         "blessed" -> 4, "deserve" -> 4, "isolate" -> 4, "chatting" -> 4, 
         "stocking" -> 4, "leads" -> 4, "communicate" -> 4, "waited" -> 4, 
         "decorate" -> 4, "rent" -> 4, "relax" -> 4, "spoken" -> 4, "yelling" -> 
         4, "cook" -> 4, "prevent" -> 4, "practicing" -> 4, "pressed" -> 4, 
         "steal" -> 4, "painted" -> 4, "described" -> 4, "introduce" -> 4, 
         "plan" -> 4, "mourning" -> 4, "announced" -> 4, "teaching" -> 4, 
         "act" -> 4, "encouraged" -> 4, "extend" -> 4, "storming" -> 4, 
         "replaced" -> 4, "refusing" -> 4, "violating" -> 4, "included" -> 4, 
         "standing" -> 4, "post" -> 4, "mentioned" -> 4, "stolen" -> 4, 
         "placed" -> 4, "treating" -> 4, "facing" -> 4, "overwhelmed" -> 4, 
         "creates" -> 4, "dressed" -> 4, "ate" -> 4, "suppose" -> 4, "ruined" -> 
         4, "hurting" -> 4, "believes" -> 4, "resume" -> 4, "considered" -> 4,
          "count" -> 4, "dies" -> 4, "spared" -> 4, "grieving" -> 4, "answer" -> 
         4, "struggled" -> 4, "tells" -> 4, "offering" -> 4, "attended" -> 4, 
         "agreed" -> 4, "wasted" -> 4, "sends" -> 4, "gathered" -> 4, 
         "packing" -> 4, "describe" -> 4, "includes" -> 4, "pictured" -> 4, 
         "reaching" -> 4, "lying" -> 4, "isolating" -> 4, "according" -> 4, 
         "married" -> 4, "settled" -> 4, "noticing" -> 4, "fell" -> 4, 
         "notice" -> 4, "fly" -> 4, "played" -> 4, "cancel" -> 4, 
         "accomplish" -> 4, "sending" -> 4, "receiving" -> 4, "contribute" -> 
         4, "stir" -> 4, "covers" -> 4, "distance" -> 4, "expand" -> 4, 
         "issued" -> 4, "separated" -> 4, "breaks" -> 4, "escape" -> 4, 
         "wrap" -> 4, "wandering" -> 4, "laid" -> 4, "daunting" -> 4, 
         "allowing" -> 4, "opening" -> 4, "burn" -> 4, "dreading" -> 4, 
         "cover" -> 4, "remains" -> 4, "celebrated" -> 4, "regarding" -> 4, 
         "responded" -> 4, "scares" -> 4, "travelling" -> 4, "throw" -> 4, 
         "kill" -> 4, "order" -> 4, "replace" -> 4, "sheltering" -> 4, 
         "applied" -> 4, "disappeared" -> 4, "climbing" -> 4, "grieve" -> 4, 
         "dream" -> 4, "robbed" -> 4, "submitted" -> 4, "plays" -> 4, 
         "canned" -> 4, "related" -> 4, "rose" -> 4, "reopening" -> 4, 
         "commit" -> 4, "insisted" -> 4, "serves" -> 4, "represents" -> 4, 
         "educating" -> 4, "buying" -> 4, "pointed" -> 4, "hated" -> 4, 
         "tear" -> 4, "occur" -> 4, "draining" -> 4, "waking" -> 4, 
         "contract" -> 4, "postponed" -> 4, "hugged" -> 4, "believing" -> 4, 
         "admit" -> 4, "struggle" -> 4, "experience" -> 4, "imposed" -> 4, 
         "dating" -> 3, "belong" -> 3, "killed" -> 3, "cheer" -> 3, "appears" -> 
         3, "impeached" -> 3, "forgive" -> 3, "f**king" -> 3, "bless" -> 3, 
         "texted" -> 3, "rattled" -> 3, "drawing" -> 3, "suspended" -> 3, 
         "appalled" -> 3, "fill" -> 3, "pop" -> 3, "broken" -> 3, "pressing" -> 
         3, "saddened" -> 3, "challenge" -> 3, "vaccinating" -> 3, 
         "intubated" -> 3, "picking" -> 3, "increase" -> 3, "rolling" -> 3, 
         "overcome" -> 3, "attacked" -> 3, "misses" -> 3, "obsessed" -> 3, 
         "turns" -> 3, "counting" -> 3, "expressed" -> 3, "revealed" -> 3, 
         "praise" -> 3, "mounting" -> 3, "blocked" -> 3, "block" -> 3, 
         "managing" -> 3, "mention" -> 3, "reports" -> 3, "arrives" -> 3, 
         "collect" -> 3, "associate" -> 3, "improve" -> 3, "finishing" -> 3, 
         "released" -> 3, "replied" -> 3, "developing" -> 3, "surviving" -> 3,
          "thrown" -> 3, "ignoring" -> 3, "ignored" -> 3, "connecting" -> 3, 
         "glued" -> 3, "speaks" -> 3, "wept" -> 3, "interpreted" -> 3, 
         "manage" -> 3, "anticipated" -> 3, "encourage" -> 3, "calm" -> 3, 
         "baking" -> 3, "advised" -> 3, "enforce" -> 3, "based" -> 3, 
         "masking" -> 3, "pointing" -> 3, "accepts" -> 3, "barred" -> 3, 
         "attempting" -> 3, "cheering" -> 3, "disrupt" -> 3, "underlying" -> 
         3, "study" -> 3, "posting" -> 3, "collected" -> 3, "debating" -> 3, 
         "urged" -> 3, "bothered" -> 3, "scattered" -> 3, "sinking" -> 3, 
         "understood" -> 3, "explained" -> 3, "split" -> 3, "devastated" -> 3,
          "approaching" -> 3, "reminiscing" -> 3, "lay" -> 3, "exploded" -> 3,
          "stirred" -> 3, "enforced" -> 3, "infecting" -> 3, "demanding" -> 3,
          "declare" -> 3, "infect" -> 3, "recommended" -> 3, "torn" -> 3, 
         "tuned" -> 3, "forcing" -> 3, "kidnap" -> 3, "supported" -> 3, 
         "chat" -> 3, "lie" -> 3, "calls" -> 3, "arriving" -> 3, "waving" -> 
         3, "handled" -> 3, "qualified" -> 3, "concentrate" -> 3, "hid" -> 3, 
         "snuggled" -> 3, "honor" -> 3, "hike" -> 3, "counted" -> 3, 
         "organizing" -> 3, "destroyed" -> 3, "deny" -> 3, "puts" -> 3, 
         "proves" -> 3, "remembering" -> 3, "admitting" -> 3, "encouraging" -> 
         3, "understands" -> 3, "managed" -> 3, "guess" -> 3, "colored" -> 3, 
         "tracking" -> 3, "shown" -> 3, "prepare" -> 3, "participated" -> 3, 
         "occurred" -> 3, "embracing" -> 3, "graduating" -> 3, "feared" -> 3, 
         "retire" -> 3, "chose" -> 3, "bear" -> 3, "distanced" -> 3, "loves" -> 
         3, "declining" -> 3, "present" -> 3, "planted" -> 3, "shake" -> 3, 
         "self-isolate" -> 3, "joked" -> 3, "covered" -> 3, "surrounded" -> 3,
          "faced" -> 3, "infected" -> 3, "shoved" -> 3, "worsening" -> 3, 
         "complete" -> 3, "declared" -> 3, "assumed" -> 3, "stretched" -> 3, 
         "challenging" -> 3, "marked" -> 3, "eaten" -> 3, "cutting" -> 3, 
         "mixing" -> 3, "dressing" -> 3, "returned" -> 3, "hits" -> 3, 
         "hurts" -> 3, "swimming" -> 3, "sound" -> 3, "touching" -> 3, "worn" -> 
         3, "answered" -> 3, "wondered" -> 3, "exposing" -> 3, "stands" -> 3, 
         "venture" -> 3, "presents" -> 3, "focusing" -> 3, "ignore" -> 3, 
         "designed" -> 3, "built" -> 3, "drew" -> 3, "opposed" -> 3, 
         "contributed" -> 3, "committed" -> 3, "cleaned" -> 3, "knocked" -> 3,
          "explaining" -> 3, "expose" -> 3, "imagined" -> 3, "pretending" -> 
         3, "flooded" -> 3, "confirm" -> 3, "apologize" -> 3, "ends" -> 3, 
         "cleared" -> 3, "setting" -> 3, "promised" -> 3, "occurring" -> 3, 
         "completing" -> 3, "protecting" -> 3, "adjusted" -> 3, "place" -> 3, 
         "reduce" -> 3, "fed" -> 3, "burned" -> 3, "depends" -> 3, "channel" -> 
         3, "clear" -> 3, "engage" -> 3, "addressing" -> 3, "hide" -> 3, 
         "gained" -> 3, "understanding" -> 3, "escaping" -> 3, "tiring" -> 3, 
         "comfort" -> 3, "reassure" -> 3, "arrange" -> 3, "contain" -> 3, 
         "reschedule" -> 3, "challenged" -> 3, "protesting" -> 3, 
         "registering" -> 2, "operating" -> 2, "meditate" -> 2, "tries" -> 2, 
         "granted" -> 2, "blah" -> 2, "grabbed" -> 2, "deliver" -> 2, 
         "recovered" -> 2, "worsened" -> 2, "featured" -> 2, "providing" -> 2,
          "adapting" -> 2, "sees" -> 2, "touched" -> 2, "evacuate" -> 2, 
         "wasting" -> 2, "joining" -> 2, "explore" -> 2, "generated" -> 2, 
         "straightened" -> 2, "exacerbated" -> 2, "controlling" -> 2, "fuck" -> 
         2, "vaccinate" -> 2, "forgotten" -> 2, "socialize" -> 2, 
         "distributed" -> 2, "lectures" -> 2, "consult" -> 2, "uniting" -> 2, 
         "shed" -> 2, "navigate" -> 2, "obey" -> 2, "restrict" -> 2, "relied" -> 
         2, "waits" -> 2, "supporting" -> 2, "solving" -> 2, "lasted" -> 2, 
         "kicked" -> 2, "qualify" -> 2, "raise" -> 2, "paralyze" -> 2, 
         "blaming" -> 2, "resolved" -> 2, "prepping" -> 2, "awakened" -> 2, 
         "pause" -> 2, "requested" -> 2, "ticked" -> 2, "raining" -> 2, 
         "likes" -> 2, "nyc" -> 2, "intended" -> 2, "outraged" -> 2, 
         "rampaging" -> 2, "question" -> 2, "quoted" -> 2, "invoking" -> 2, 
         "smells" -> 2, "waved" -> 2, "occupied" -> 2, "don" -> 2, "smashing" -> 
         2, "noted" -> 2, "confined" -> 2, "infiltrated" -> 2, "stealing" -> 
         2, "blown" -> 2, "storm" -> 2, "bite" -> 2, "milling" -> 2, 
         "disappear" -> 2, "rest" -> 2, "winning" -> 2, "cluttered" -> 2, 
         "dated" -> 2, "sketching" -> 2, "stretch" -> 2, "muffled" -> 2, 
         "shielded" -> 2, "sustained" -> 2, "staffed" -> 2, "administer" -> 2,
          "perceive" -> 2, "boggles" -> 2, "avoided" -> 2, "slowed" -> 2, 
         "dc" -> 2, "screamed" -> 2, "bid" -> 2, "blocking" -> 2, 
         "recognized" -> 2, "rolled" -> 2, "jump" -> 2, "deemed" -> 2, 
         "bothering" -> 2, "explain" -> 2, "looms" -> 2, "invokes" -> 2, 
         "notes" -> 2, "follows" -> 2, "warns" -> 2, "reflects" -> 2, 
         "baffled" -> 2, "sticking" -> 2, "prompted" -> 2, "acquiesced" -> 2, 
         "witnessing" -> 2, "abide" -> 2, "falls" -> 2, "hunkering" -> 2, 
         "stepping" -> 2, "admitted" -> 2, "dismissed" -> 2, "navigating" -> 
         2, "shopping" -> 2, "needing" -> 2, "tap" -> 2, "crushed" -> 2, 
         "parted" -> 2, "shall" -> 2, "snowed" -> 2, "interrupt" -> 2, 
         "swamped" -> 2, "raised" -> 2, "spinning" -> 2, "depleted" -> 2, 
         "confronting" -> 2, "fearing" -> 2, "preceded" -> 2, "evict" -> 2, 
         "discussing" -> 2, "discourage" -> 2, "utilize" -> 2, "realised" -> 
         2, "bake" -> 2, "fought" -> 2, "balanced" -> 2, "reflect" -> 2, 
         "earned" -> 2, "filling" -> 2, "mind" -> 2, "slips" -> 2, 
         "discovered" -> 2, "funded" -> 2, "limiting" -> 2, "vowing" -> 2, 
         "questioned" -> 2, "wrapping" -> 2, "accompanied" -> 2, "governing" -> 
         2, "collapsed" -> 2, "shining" -> 2, "adjusting" -> 2, "unite" -> 2, 
         "booked" -> 2, "preferred" -> 2, "lockdown" -> 2, "widen" -> 2, 
         "drops" -> 2, "shooting" -> 2, "zoomed" -> 2, "listened" -> 2, 
         "wandered" -> 2, "paint" -> 2, "carved" -> 2, "hurry" -> 2, 
         "throwing" -> 2, "canceled" -> 2, "cross" -> 2, "blew" -> 2, 
         "obtaining" -> 2, "hugging" -> 2, "head" -> 2, "stopping" -> 2, 
         "relaxed" -> 2, "stating" -> 2, "testing" -> 2, "automated" -> 2, 
         "access" -> 2, "coping" -> 2, "defeated" -> 2, "warning" -> 2, 
         "concede" -> 2, "stays" -> 2, "register" -> 2, "worsen" -> 2, 
         "devastating" -> 2, "respect" -> 2, "obtain" -> 2, "stops" -> 2, 
         "deflated" -> 2, "proceeded" -> 2, "popping" -> 2, "controlled" -> 2,
          "spiking" -> 2, "contained" -> 2, "noting" -> 2, "fails" -> 2, 
         "containing" -> 2, "rage" -> 2, "accelerated" -> 2, "suggesting" -> 
         2, "minimize" -> 2, "melted" -> 2, "surpassing" -> 2, "desired" -> 2,
          "combined" -> 2, "dictate" -> 2, "hemorrhaging" -> 2, "overlooked" -> 
         2, "demonstrating" -> 2, "retained" -> 2, "succumb" -> 2, "prove" -> 
         2, "fades" -> 2, "questioning" -> 2, "depending" -> 2, "schedule" -> 
         2, "vent" -> 2, "determine" -> 2, "interacted" -> 2, "screened" -> 2,
          "viewing" -> 2, "popularized" -> 2, "politicized" -> 2, 
         "guaranteed" -> 2, "underestimated" -> 2, "slipped" -> 2, "educated" -> 
         2, "ruin" -> 2, "swept" -> 2, "survived" -> 2, "tweeting" -> 2, 
         "ruled" -> 2, "destroying" -> 2, "confused" -> 2, "swabbed" -> 2, 
         "reclined" -> 2, "honored" -> 2, "grieved" -> 2, "comforted" -> 2, 
         "treats" -> 2, "fail" -> 2, "swelling" -> 2, "kissing" -> 2, "bode" -> 
         2, "faces" -> 2, "lets" -> 2, "satisfying" -> 2, "dried" -> 2, 
         "depressing" -> 2, "settling" -> 2, "lift" -> 2, "reeling" -> 2, 
         "fueled" -> 2, "compelled" -> 2, "exit" -> 2, "sharing" -> 2, 
         "smiled" -> 2, "billowing" -> 2, "selected" -> 2, "maintained" -> 2, 
         "finish" -> 2, "buzzing" -> 2, "drank" -> 2, "resumed" -> 2, 
         "trending" -> 2, "smile" -> 2, "cared" -> 2, "pitching" -> 2, 
         "causes" -> 2, "contact" -> 2, "amazed" -> 2, "facetime" -> 2, 
         "partying" -> 2, "download" -> 2, "downloaded" -> 2, "charged" -> 2, 
         "charging" -> 2, "appointed" -> 2, "preoccupied" -> 2, "announcing" -> 
         2, "smiling" -> 2, "repeated" -> 2, "raging" -> 2, "exclude" -> 2, 
         "negotiating" -> 2, "attacking" -> 2, "pursue" -> 2, "demanded" -> 2,
          "claiming" -> 2, "guessing" -> 2, "provided" -> 2, "reflected" -> 2,
          "fix" -> 2, "mailed" -> 2, "stare" -> 2, "injured" -> 2, 
         "acknowledging" -> 2, "succeeded" -> 2, "matching" -> 2, "offers" -> 
         2, "united" -> 2, "endanger" -> 2, "crossing" -> 2, "discussed" -> 2,
          "affects" -> 2, "mute" -> 2, "pitch" -> 2, "await" -> 2, "wrapped" -> 
         2, "expecting" -> 2, "pursuing" -> 2, "horrified" -> 2, "urge" -> 2, 
         "frightened" -> 2, "drifting" -> 2, "named" -> 2, "subscribe" -> 2, 
         "sobbing" -> 2, "invite" -> 2, "remaining" -> 2, "browsing" -> 2, 
         "entailed" -> 2, "derailed" -> 2, "arranged" -> 2, "bury" -> 2, 
         "unpacking" -> 2, "reign" -> 2, "suppress" -> 2, "dismantling" -> 2, 
         "compounded" -> 2, "engaged" -> 2, "revive" -> 2, "transfer" -> 2, 
         "exhausting" -> 2, "immunocompromised" -> 2, "passes" -> 2, 
         "gathering" -> 2, "re-elected" -> 2, "include" -> 2, "handling" -> 2,
          "adding" -> 2, "accomplished" -> 2, "shove" -> 2, "appeared" -> 2, 
         "hire" -> 2, "rethinking" -> 2, "defend" -> 2, "erected" -> 2, 
         "failing" -> 2, "teaches" -> 2, "inherited" -> 2, "smashed" -> 2, 
         "rattle" -> 2, "glanced" -> 2, "repotted" -> 2, "grounded" -> 2, 
         "choosing" -> 2, "washing" -> 2, "complained" -> 2, "produced" -> 2, 
         "impact" -> 2, "hiked" -> 2, "canceling" -> 2, "faded" -> 2, 
         "emerged" -> 2, "boarded" -> 2, "spell" -> 2, "reconnected" -> 2, 
         "exist" -> 2, "doubt" -> 2, "rode" -> 2, "crashing" -> 2, 
         "prevailed" -> 2, "implementing" -> 2, "functioning" -> 2, "reads" -> 
         2, "pumping" -> 2, "overdoing" -> 2, "checked" -> 2, "instructed" -> 
         2, "result" -> 2, "wipe" -> 2, "punished" -> 2, "lifted" -> 2, 
         "refer" -> 2, "discern" -> 2, "tends" -> 2, "exploring" -> 2, 
         "depend" -> 2, "wedged" -> 2, "witnessed" -> 2, "predict" -> 2, 
         "produce" -> 2, "scraping" -> 2, "serve" -> 2, "taped" -> 2, 
         "escaped" -> 2, "dont" -> 2, "/" -> 2, "sneeze" -> 2, "surround" -> 
         2, "drag" -> 2, "wished" -> 2, "pouring" -> 2, "relate" -> 2, 
         "shattered" -> 2, "sequestered" -> 2, "shaken" -> 2, "describes" -> 
         2, "organize" -> 2, "ordering" -> 2, "swelled" -> 2, "boasting" -> 2,
          "mandated" -> 2, "abiding" -> 2, "awaiting" -> 2, "imagining" -> 2, 
         "blowing" -> 2, "climb" -> 2, "flourish" -> 2, "impacting" -> 2, 
         "delayed" -> 2, "didnt" -> 2, "uploaded" -> 2, "selling" -> 2, 
         "presenting" -> 2, "verified" -> 2, "opt" -> 2, "submitting" -> 2, 
         "certified" -> 2, "stripped" -> 2, "commented" -> 2, "drinking" -> 2,
          "define" -> 2, "concerning" -> 2, "interviewed" -> 2, "halt" -> 2, 
         "secure" -> 2, "joined" -> 2, "washed" -> 2, "reserved" -> 2, 
         "distracted" -> 2, "applying" -> 2, "peer" -> 2, "regaining" -> 2, 
         "relies" -> 2, "cleaning" -> 2, "browse" -> 2, "dreaming" -> 2, 
         "screaming" -> 2, "estimated" -> 2, "complicated" -> 2, "changing" -> 
         2, "tape" -> 2, "donate" -> 2, "eases" -> 2, "watering" -> 2, 
         "pondered" -> 2, "strolling" -> 2, "freaking" -> 2, "banned" -> 2, 
         "blame" -> 2, "acted" -> 2, "ai" -> 2, "progress" -> 2, "suffering" -> 
         2, "adjust" -> 2, "ending" -> 2, "snapped" -> 2, "burning" -> 2, 
         "exercising" -> 2, "encountered" -> 2, "allows" -> 2, "fueling" -> 2,
          "observing" -> 2, "craft" -> 2, "interrupting" -> 2, "breathing" -> 
         2, "cherish" -> 2, "insists" -> 2, "tapped" -> 2, "sounding" -> 2, 
         "rejected" -> 2, "hauled" -> 2, "stroll" -> 2, "heightened" -> 2, 
         "displayed" -> 2, "japan" -> 1, "disorganized" -> 1, "improved" -> 1,
          "flip" -> 1, "revitalized" -> 1, "counts" -> 1, "consisting" -> 1, 
         "concluded" -> 1, "undergone" -> 1, "smeared" -> 1, "resist" -> 1, 
         "mark" -> 1, "contemplate" -> 1, "discouraging" -> 1, "attends" -> 1,
          "winding" -> 1, "zigzagged" -> 1, "strolled" -> 1, "relates" -> 1, 
         "niece" -> 1, "dissipate" -> 1, "bbqed" -> 1, "bickering" -> 1, 
         "motivating" -> 1, "suffocating" -> 1, "deteriorating" -> 1, 
         "contrasts" -> 1, "recall" -> 1, "healed" -> 1, "ski" -> 1, "dwell" -> 
         1, "commenting" -> 1, "positioned" -> 1, "highlights" -> 1, "sits" -> 
         1, "linger" -> 1, "lingering" -> 1, "lash" -> 1, "shakes" -> 1, 
         "stated" -> 1, "expired" -> 1, "priced" -> 1, "accumulate" -> 1, 
         "state" -> 1, "sprinkled" -> 1, "inundated" -> 1, "crashed" -> 1, 
         "ticking" -> 1, "compares" -> 1, "referring" -> 1, "snows" -> 1, 
         "rush" -> 1, "bonded" -> 1, "acquainted" -> 1, "uplifting" -> 1, 
         "frustrated" -> 1, "owed" -> 1, "hurtling" -> 1, "lulled" -> 1, 
         "stabilizing" -> 1, "prohibit" -> 1, "pipetting" -> 1, "reassures" -> 
         1, "fascinated" -> 1, "cherishing" -> 1, "cloistered" -> 1, 
         "photographing" -> 1, "reveal" -> 1, "uncover" -> 1, "employ" -> 1, 
         "google" -> 1, "replying" -> 1, "stalled" -> 1, "gasping" -> 1, 
         "resulting" -> 1, "fit" -> 1, "depicting" -> 1, "el" -> 1, 
         "dwindling" -> 1, "subjected" -> 1, "delaying" -> 1, "bloom" -> 1, 
         "blooming" -> 1, "amazes" -> 1, "provides" -> 1, "eats" -> 1, 
         "spends" -> 1, "doubted" -> 1, "shading" -> 1, "rendered" -> 1, 
         "approach" -> 1, "darkened" -> 1, "gripped" -> 1, "sing" -> 1, 
         "yearn" -> 1, "staged" -> 1, "upgraded" -> 1, "scrolling" -> 1, 
         "upgrade" -> 1, "cajoles" -> 1, "flashed" -> 1, "shredded" -> 1, 
         "resent" -> 1, "torpedoed" -> 1, "exchanged" -> 1, "messaged" -> 1, 
         "dissemble" -> 1, "crave" -> 1, "haunt" -> 1, "paraphrase" -> 1, 
         "surfing" -> 1, "intrigued" -> 1, "insulted" -> 1, "boogied" -> 1, 
         "chatted" -> 1, "joke" -> 1, "updated" -> 1, 
         "useful/instructive/entertaining" -> 1, "huddling" -> 1, 
         "interpreting" -> 1, "impose" -> 1, "kidding" -> 1, "tainted" -> 1, 
         "proceed" -> 1, "removing" -> 1, "criticized" -> 1, "savoring" -> 1, 
         "israel" -> 1, "welcome" -> 1, "humiliated" -> 1, "strived" -> 1, 
         "dispersed" -> 1, "strengthen" -> 1, "appreciates" -> 1, "freaked" -> 
         1, "stocked" -> 1, "reconcile" -> 1, "bullies" -> 1, "explode" -> 1, 
         "seeped" -> 1, "scouring" -> 1, "trimmed" -> 1, "ramping" -> 1, 
         "taxis" -> 1, "waist" -> 1, "glimmering" -> 1, "shifting" -> 1, 
         "acquits" -> 1, "tackling" -> 1, "house" -> 1, "portugal" -> 1, 
         "evolving" -> 1, "cooking" -> 1, "punishing" -> 1, "scrolled" -> 1, 
         "disconnect" -> 1, "soaking" -> 1, "goddamned" -> 1, "repairing" -> 
         1, "fixing/painting/patching" -> 1, "recycling" -> 1, "inquiring" -> 
         1, "emanating" -> 1, "concretized" -> 1, "splits" -> 1, "treading" -> 
         1, "deficits/struggled" -> 1, "repainting" -> 1, "reverberate" -> 1, 
         "weathering" -> 1, "infuriated" -> 1, "contracting" -> 1, 
         "pondering" -> 1, "monitored" -> 1, "mitigate" -> 1, "soared" -> 1, 
         "requiring" -> 1, "argue" -> 1, "conceding" -> 1, "deposed" -> 1, 
         "testify" -> 1, "endorsed" -> 1, "toting" -> 1, "endure" -> 1, 
         "devised" -> 1, "consuming" -> 1, "separating" -> 1, "emblazoned" -> 
         1, "liked" -> 1, "propagate" -> 1, "customize" -> 1, "decaying" -> 1,
          "collecting" -> 1, "diffuse" -> 1, "processes" -> 1, "processing" -> 
         1, "pose" -> 1, "ridiculed" -> 1, "judge" -> 1, "evaporated" -> 1, 
         "struggles" -> 1, "diminish" -> 1, "dined" -> 1, "obeyed" -> 1, 
         "btw" -> 1, "stormed" -> 1, "climbed" -> 1, "converted" -> 1, 
         "beating" -> 1, "headed" -> 1, "buzzed" -> 1, "conspired" -> 1, 
         "claims" -> 1, "hired" -> 1, "view" -> 1, "shaping" -> 1, "shaped" -> 
         1, "childcare" -> 1, "devoted" -> 1, "wreaked" -> 1, "suited" -> 1, 
         "dipped" -> 1, "stacked" -> 1, "rediscover" -> 1, "blow" -> 1, 
         "proned" -> 1, "sedated" -> 1, "proning" -> 1, "emphasizing" -> 1, 
         "digesting" -> 1, "doe" -> 1, "deppressed" -> 1, "detected" -> 1, 
         "fog" -> 1, "administered" -> 1, "transporting" -> 1, "monitor" -> 1,
          "lingered" -> 1, "depicts" -> 1, "emerge" -> 1, "concealing" -> 1, 
         "finance" -> 1, "color/highlighting" -> 1, "freeing" -> 1, "adopt" -> 
         1, "executing" -> 1, "seeking" -> 1, "attack" -> 1, "accusing" -> 1, 
         "taunting" -> 1, "bypassing" -> 1, "announces" -> 1, "jibes" -> 1, 
         "frustrating" -> 1, "saving" -> 1, "sourcing" -> 1, "warned" -> 1, 
         "floating" -> 1, "england" -> 1, "refreshing" -> 1, "peering" -> 1, 
         "prefer" -> 1, "alienated" -> 1, "praised" -> 1, "introduced" -> 1, 
         "transported" -> 1, "assisted" -> 1, "quaking" -> 1, "alter" -> 1, 
         "buoy" -> 1, "cries" -> 1, "sniffing" -> 1, "snowball" -> 1, 
         "twisting" -> 1, "puncture" -> 1, "slumped" -> 1, "superimposed" -> 
         1, "reflecting" -> 1, "searching" -> 1, "adds" -> 1, "satisfied" -> 
         1, "reconnect" -> 1, "disconnected" -> 1, "guide" -> 1, "identify" -> 
         1, "shielding" -> 1, "regulate" -> 1, "mismanaged" -> 1, "advanced" -> 
         1, "cost" -> 1, "research" -> 1, "arguing" -> 1, "inaugurated" -> 1, 
         "designated" -> 1, "exhaling" -> 1, "inhaling" -> 1, "avoids" -> 1, 
         "contradicts" -> 1, "compromising" -> 1, "hammer" -> 1, "comment" -> 
         1, "stashed" -> 1, "sneak" -> 1, "desensitized" -> 1, "unleashed" -> 
         1, "unfolded" -> 1, "arises" -> 1, "launch" -> 1, "reside" -> 1, 
         "pledged" -> 1, "acknowledged" -> 1, "brighten" -> 1, "blurred" -> 1,
          "leaning" -> 1, "afforded" -> 1, "sparked" -> 1, "placing" -> 1, 
         "lurking" -> 1, "minded" -> 1, "re" -> 1, "muffles" -> 1, "punch" -> 
         1, "renting" -> 1, "perceives" -> 1, "accumulated" -> 1, "enroll" -> 
         1, "duped" -> 1, "demoralizing" -> 1, "creeps" -> 1, "squandered" -> 
         1, "arisen" -> 1, "eliminate" -> 1, "quell" -> 1, "unwind" -> 1, 
         "policing" -> 1, "sealed" -> 1, "finds" -> 1, "withholding" -> 1, 
         "sketched" -> 1, "shrinking" -> 1, "changes" -> 1, "ripped" -> 1, 
         "perished" -> 1, "encapsulating" -> 1, "radiate" -> 1, "impeach" -> 
         1, "spins" -> 1, "beats" -> 1, "incited" -> 1, "ridding" -> 1, 
         "wail" -> 1, "shouldering" -> 1, "bridge" -> 1, "resort" -> 1, 
         "disturbed" -> 1, "vaccined" -> 1, "track" -> 1, "establish" -> 1, 
         "daddy" -> 1, "solve" -> 1, "stalking" -> 1, "aching" -> 1, 
         "replaying" -> 1, "decides" -> 1, "accomplishing" -> 1, "promise" -> 
         1, "trading" -> 1, "dundee" -> 1, "wreathed" -> 1, "opens" -> 1, 
         "discouraged" -> 1, "convey" -> 1, "rang" -> 1, "suffers" -> 1, 
         "rehired" -> 1, "fatigued" -> 1, "dropping" -> 1, "bundled" -> 1, 
         "meets" -> 1, "administering" -> 1, "moves" -> 1, "fluctuating" -> 1,
          "tarnished" -> 1, "backing" -> 1, "stick" -> 1, "referred" -> 1, 
         "vindicated" -> 1, "threaten" -> 1, "asserted" -> 1, "gratifying" -> 
         1, "combine" -> 1, "intend" -> 1, "tended" -> 1, "stoked" -> 1, 
         "purging" -> 1, "tracked" -> 1, "disenfranchise" -> 1, "tampering" -> 
         1, "targeted" -> 1, "terrorized" -> 1, "mollified" -> 1, "secured" -> 
         1, "usher" -> 1, "infuriating" -> 1, "uphold" -> 1, "herded" -> 1, 
         "inciting" -> 1, "suspend" -> 1, "rigged" -> 1, "accounts" -> 1, 
         "whipped" -> 1, "fbing" -> 1, "escorted" -> 1, "militarized" -> 1, 
         "circulating" -> 1, "materialize" -> 1, "circulate" -> 1, 
         "restarting" -> 1, "blamed" -> 1, "covering" -> 1, "vandalized" -> 1,
          "wander" -> 1, "evacuated" -> 1, "ushered" -> 1, "cowering" -> 1, 
         "rampaged" -> 1, "swarmed" -> 1, "sets" -> 1, "overturn" -> 1, 
         "confront" -> 1, "indicated" -> 1, "override" -> 1, "boarding" -> 1, 
         "converge" -> 1, "rally" -> 1, "trash" -> 1, "egged" -> 1, 
         "consumed" -> 1, "endured" -> 1, "studying/working/" -> 1, "swiped" -> 
         1, "frightens" -> 1, "mum" -> 1, "breached" -> 1, "renamed" -> 1, 
         "elain" -> 1, "resisted" -> 1, "stunned" -> 1, "arresting" -> 1, 
         "scratched" -> 1, "boasted" -> 1, "lounging" -> 1, "outdid" -> 1, 
         "hawaii" -> 1, "helds" -> 1, "posing" -> 1, "tattooed" -> 1, 
         "addressed" -> 1, "accepted" -> 1, "object" -> 1, "objecting" -> 1, 
         "deterred" -> 1, "represent" -> 1, "ousting" -> 1, "assured" -> 1, 
         "wanes" -> 1, "grant" -> 1, "preventing" -> 1, "resettled" -> 1, 
         "reduced" -> 1, "commuting" -> 1, "guarantee" -> 1, "measure" -> 1, 
         "scary." -> 1, "tasted" -> 1, "bragging" -> 1, "safeguard" -> 1, 
         "sworn" -> 1, "filed" -> 1, "infrared" -> 1, "fears" -> 1, 
         "activated" -> 1, "resigning" -> 1, "confirming" -> 1, "recognizing" -> 
         1, "withdrawing" -> 1, "weasel" -> 1, "skimming" -> 1, "cobb" -> 1, 
         "planting" -> 1, "rifling" -> 1, "askew" -> 1, "strewn" -> 1, 
         "ransacked" -> 1, "committing" -> 1, "deleted" -> 1, "reporting" -> 
         1, "barricading" -> 1, "ducking" -> 1, "battering" -> 1, "tussling" -> 
         1, "scaling" -> 1, "plugged" -> 1, "popped" -> 1, "livestreaming" -> 
         1, "coordinate" -> 1, "approve" -> 1, "raphael" -> 1, "guessed" -> 1,
          "bend" -> 1, "mitch" -> 1, "owes" -> 1, "perpetuating" -> 1, 
         "outdated" -> 1, "burnt" -> 1, "cool" -> 1, "simmering" -> 1, 
         "manipulates" -> 1, "fried" -> 1, "steamed" -> 1, "twisted" -> 1, 
         "confide" -> 1, "regulating" -> 1, "reaps" -> 1, "fired" -> 1, 
         "conceal" -> 1, "reassuring" -> 1, "denounced" -> 1, "rile" -> 1, 
         "occupying" -> 1, "upholding" -> 1, "fund" -> 1, "revert" -> 1, 
         "picking/cleaning" -> 1, "float" -> 1, "warbling" -> 1, "swigging" -> 
         1, "poured" -> 1, "bored" -> 1, "staggered" -> 1, "empathize" -> 1, 
         "scheduling" -> 1, "florida" -> 1, "drape" -> 1, "undergoing" -> 1, 
         "upload" -> 1, "recoil" -> 1, "cherished" -> 1, "fared" -> 1, 
         "flowing" -> 1, "unleashing" -> 1, "loosening" -> 1, "ripping" -> 1, 
         "harnessed" -> 1, "hosting" -> 1, "refill" -> 1, "considers" -> 1, 
         "spook" -> 1, "processed" -> 1, "churned" -> 1, "anticipate" -> 1, 
         "apologizing" -> 1, "ghosted" -> 1, "conveyed" -> 1, "declaring" -> 
         1, "suing" -> 1, "fucking" -> 1, "potting" -> 1, "slathered" -> 1, 
         "barreling" -> 1, "infects" -> 1, "refers" -> 1, "cant" -> 1, "wow" -> 
         1, "hella" -> 1, "saves" -> 1, "settle" -> 1, "wound" -> 1, 
         "skating" -> 1, "juggle" -> 1, "conquered" -> 1, "angers" -> 1, 
         "underestimate" -> 1, "bombarded" -> 1, "hover" -> 1, "calibrate" -> 
         1, "hung" -> 1, "woken" -> 1, "collapsing" -> 1, "constitutes" -> 1, 
         "revived" -> 1, "succumbed" -> 1, "manufactured" -> 1, "startled" -> 
         1, "premieres" -> 1, "premiering" -> 1, "restrained" -> 1, "cobble" -> 
         1, "stubbing" -> 1, "triggers" -> 1, "depart" -> 1, "triggered" -> 1,
          "exchanging" -> 1, "sticks" -> 1, "revel" -> 1, "imperiled" -> 1, 
         "starving" -> 1, "bopping" -> 1, "signing" -> 1, "rob" -> 1, "brave" -> 
         1, "multiply" -> 1, "self-isolating" -> 1, "misplaced" -> 1, 
         "valued" -> 1, "cancelling" -> 1, "altering" -> 1, "sustains" -> 1, 
         "ditched" -> 1, "handcuffed" -> 1, "predicting" -> 1, "disparaging" -> 
         1, "ok" -> 1, "snowshoeing" -> 1, "arrive" -> 1, "nixed" -> 1, 
         "hammered" -> 1, "assembling" -> 1, "operate" -> 1, "retrieve" -> 1, 
         "ed" -> 1, "installed" -> 1, "rounded" -> 1, "prevail" -> 1, 
         "surprise" -> 1, "weigh" -> 1, "sacrificing" -> 1, "deprived" -> 1, 
         "prepped" -> 1, "cooked" -> 1, "yell" -> 1, "scramble" -> 1, "ban" -> 
         1, "donald" -> 1, "snowflake" -> 1, "volunteering" -> 1, "lobbying" -> 
         1, "contributing" -> 1, "evicted" -> 1, "dine" -> 1, "liit" -> 1, 
         "c'mon" -> 1, "shift" -> 1, "languished" -> 1, "poisoned" -> 1, 
         "pricking" -> 1, "drifted" -> 1, "messed" -> 1, "prevented" -> 1, 
         "console" -> 1, "lit" -> 1, "snore" -> 1, "assessed" -> 1, "hums" -> 
         1, "stash" -> 1, "loose" -> 1, "realise" -> 1, "renewed" -> 1, 
         "communicating" -> 1, "quitting" -> 1, "match" -> 1, "influence" -> 
         1, "jeopardize" -> 1, "decorated" -> 1, "tops" -> 1, "astounds" -> 1,
          "telecommuting" -> 1, "thrust" -> 1, "pervade" -> 1, "detox" -> 1, 
         "seize" -> 1, "rationalized" -> 1, "unprotected" -> 1, "bubbling" -> 
         1, "alright" -> 1, "listens" -> 1, "grows" -> 1, "disrracted" -> 1, 
         "crafted" -> 1, "dedicate" -> 1, "reversed" -> 1, "book" -> 1, 
         "encode" -> 1, "transferred" -> 1, "wishes" -> 1, "railed" -> 1, 
         "minimized" -> 1, "borrowing" -> 1, "test" -> 1, "debilitating" -> 1,
          "varied" -> 1, "streamed" -> 1, "soaked" -> 1, "zooming" -> 1, 
         "reopened" -> 1, "relocate" -> 1, "finalize" -> 1, "light" -> 1, 
         "shopped" -> 1, "attempts" -> 1, "squirreled" -> 1, "overturning" -> 
         1, "rationing" -> 1, "didn" -> 1, "suit" -> 1, "stem" -> 1, 
         "situated" -> 1, "adorn" -> 1, "hosts" -> 1, "migrating" -> 1, 
         "absorb" -> 1, "supplement" -> 1, "stumbled" -> 1, "hinder" -> 1, 
         "graduate" -> 1, "justify" -> 1, "prioritizing" -> 1, "differing" -> 
         1, "excreting" -> 1, "denotes" -> 1, "decolonizing" -> 1, "inhabit" -> 
         1, "inherit" -> 1, "re-install" -> 1, "deepens" -> 1, "bolstered" -> 
         1, "weakened" -> 1, "quelling" -> 1, "unfolding" -> 1, "culled" -> 1,
          "overwhelms" -> 1, "hunker" -> 1, "bearing" -> 1, "heartened" -> 1, 
         "reheat" -> 1, "subdued" -> 1, "subside" -> 1, "drained" -> 1, 
         "disabling" -> 1, "shipped" -> 1, "piled" -> 1, "tease" -> 1, 
         "embroidered" -> 1, "iron" -> 1, "disgusts" -> 1, "sagging" -> 1, 
         "disappoint" -> 1, "locking" -> 1, "signaled" -> 1, "accelerate" -> 
         1, "clicks" -> 1, "irritates" -> 1, "lapsed" -> 1, "ferling" -> 1, 
         "rests" -> 1, "configured" -> 1, "marveling" -> 1, "crisscrossed" -> 
         1, "revved" -> 1, "departing" -> 1, "departed" -> 1, "grated" -> 1, 
         "unnerving" -> 1, "harboring" -> 1, "disbanded" -> 1, "relive" -> 1, 
         "ny" -> 1, "pleading" -> 1, "tightening" -> 1, "re-thinking" -> 1, 
         "profess" -> 1, "possesses" -> 1, "puffing" -> 1, "deceased" -> 1, 
         "smoked" -> 1, "refrain" -> 1, "hiding/sulking" -> 1, "reiterate" -> 
         1, "expressing" -> 1, "tossed" -> 1, "discarded" -> 1, "dismisses" -> 
         1, "spotted" -> 1, "disliking" -> 1, "casing" -> 1, "believed" -> 1, 
         "disconnects" -> 1, "rings" -> 1, "behaving" -> 1, "subverting" -> 1,
          "hibernate" -> 1, "zoning" -> 1, "thriving" -> 1, "varying" -> 1, 
         "pre-empted" -> 1, "twist" -> 1, "trim" -> 1, "wallowing" -> 1, 
         "tout" -> 1, "matched" -> 1, "shortened" -> 1, "shorten" -> 1, 
         "plague" -> 1, "spiked" -> 1, "shine" -> 1, "pulling" -> 1, 
         "identified" -> 1, "flown" -> 1, "wy" -> 1, "regards" -> 1, 
         "enhance" -> 1, "notified" -> 1, "erring" -> 1, "generalized" -> 1, 
         "envisioned" -> 1, "landed" -> 1, "richmond" -> 1, "shuttling" -> 1, 
         "calculated" -> 1, "trade" -> 1, "manhattan" -> 1, "mccarren" -> 1, 
         "laying" -> 1, "rejoice" -> 1, "sense" -> 1, "dominating" -> 1, 
         "substituted" -> 1, "retrieved" -> 1, "bombard" -> 1, "speculates" -> 
         1, "widowed" -> 1, "propagates" -> 1, "stifle" -> 1, "deflate" -> 1, 
         "denying" -> 1, "honking" -> 1, "matches" -> 1, "ferret" -> 1, 
         "hangs" -> 1, "gender" -> 1, "dissolving" -> 1, "symbolise" -> 1, 
         "documented" -> 1, "devastate" -> 1, "welling" -> 1, "stabilised" -> 
         1, "curled" -> 1, "stroked" -> 1, "sucked" -> 1, "disgusted" -> 1, 
         "disgusting" -> 1, "dispersing" -> 1, "congregated" -> 1, "sank" -> 
         1, "disappointed" -> 1, "directed" -> 1, "alleviated" -> 1, "sip" -> 
         1, "sewing" -> 1, "suturing" -> 1, "edit" -> 1, "log" -> 1, "digest" -> 
         1, "feeds" -> 1, "illuminating" -> 1, "intoxicated" -> 1, 
         "cascading" -> 1, "masquerading" -> 1, "sung" -> 1, "speculated" -> 
         1, "articulated" -> 1, "thrive" -> 1, "wrecks" -> 1, "rid" -> 1, 
         "stepped" -> 1, "progresses" -> 1, "psinted" -> 1, "depositing" -> 1,
          "sprayed" -> 1, "majoring" -> 1, "lengthen" -> 1, "gasp" -> 1, 
         "bracing" -> 1, "justified" -> 1, "encourages" -> 1, "inspire" -> 1, 
         "slide" -> 1, "report" -> 1, "bet" -> 1, "confronted" -> 1, 
         "jeopardy.strong" -> 1, "assumes" -> 1, "refuses" -> 1, "resemble" -> 
         1, "ensue" -> 1, "print" -> 1, "mashed" -> 1, "host" -> 1, 
         "expanding" -> 1, "emptied" -> 1, "swore" -> 1, "lacking" -> 1, 
         "permitted" -> 1, "feed" -> 1, "capped" -> 1, "breathed" -> 1, 
         "plead" -> 1, "reserve" -> 1, "listed" -> 1, "fainted" -> 1, 
         "revised" -> 1, "themed" -> 1, "motivated" -> 1, "empty" -> 1, 
         "violate" -> 1, "crowding" -> 1, "pledging" -> 1, "haunted" -> 1, 
         "hidden" -> 1, "hinted" -> 1, "hovering" -> 1, "enmeshing" -> 1, 
         "disempower" -> 1, "dismantle" -> 1, "itching" -> 1, "bunched" -> 1, 
         "polarized" -> 1, "dispossess" -> 1, "owned" -> 1, "routed" -> 1, 
         "despised" -> 1, "disturbing" -> 1, "defund" -> 1, "implode" -> 1, 
         "force" -> 1, "bruised" -> 1, "withered" -> 1, "clutching" -> 1, 
         "argued" -> 1, "raises" -> 1, "destroy" -> 1, "poised" -> 1, 
         "tickled" -> 1, "burst" -> 1, "instruct" -> 1, "contraindicated" -> 
         1, "jammed" -> 1, "accommodates" -> 1, "filmed" -> 1, "swallowing" -> 
         1, "mind/knowing" -> 1, "reimburse" -> 1, "finalized" -> 1, "bawled" -> 
         1, "thanked" -> 1, "rehearsed" -> 1, "r." -> 1, "looming" -> 1, 
         "purring" -> 1, "filming" -> 1, "attaching" -> 1, "nurturing" -> 1, 
         "supports" -> 1, "apologized" -> 1, "pursued" -> 1, "accuse" -> 1, 
         "taunt" -> 1, "dancing" -> 1, "relaxing" -> 1, "brief" -> 1, 
         "shimmered" -> 1, "danced" -> 1, "tiptoeing" -> 1, "flipping" -> 1, 
         "demoralized" -> 1, "spreads" -> 1, "mobilize" -> 1, "narrowed" -> 1,
          "address" -> 1, "differentiated" -> 1, "facilitate" -> 1, "fixing" -> 
         1, "relocated" -> 1, "microwaved" -> 1, "disinfecting" -> 1, "maine" -> 
         1, "lecturing" -> 1, "collaging" -> 1, "overlook" -> 1, "cremated" -> 
         1, "select" -> 1, "existed" -> 1, "undergo" -> 1, "chooses" -> 1, 
         "rearing" -> 1, "heartbreaking" -> 1, "comparing" -> 1, "regained" -> 
         1, "nis" -> 1, "costs" -> 1, "gaining" -> 1, "nodding" -> 1, 
         "reimbursed" -> 1, "scrambling" -> 1, "deciding" -> 1, "dress" -> 1, 
         "disregard" -> 1, "demotivating" -> 1, "abstain" -> 1, "contains" -> 
         1, "indicate" -> 1, "invites" -> 1, "satisfy" -> 1, "excel" -> 1, 
         "detailing" -> 1, "ruining" -> 1, "bogged" -> 1, "graduated" -> 1, 
         "concealed" -> 1, "armed" -> 1, "abetted" -> 1, "suggest" -> 1, 
         "disagreed" -> 1, "authored" -> 1, "neutralize" -> 1, "stumped" -> 1,
          "chase" -> 1, "tempted" -> 1, "disliked" -> 1, "canvass" -> 1, 
         "appointing" -> 1, "nominated" -> 1, "counter" -> 1, "pack" -> 1, 
         "interfere" -> 1, "prosecute" -> 1, "wade" -> 1, "roe" -> 1, "amy" -> 
         1, "harris" -> 1, "restored" -> 1, "speaking" -> 1, "admonishing" -> 
         1, "trampling" -> 1, "patronizing" -> 1, "labeled" -> 1, 
         "parachuting" -> 1, "cited" -> 1, "headlined" -> 1, "blames" -> 1, 
         "issue" -> 1, "urging" -> 1, "liberate" -> 1, "stoking" -> 1, "wave" -> 
         1, "paraded" -> 1, "saluting" -> 1, "cured" -> 1, "infused" -> 1, 
         "reed" -> 1, "reunite" -> 1, "welcoming" -> 1, "boiling" -> 1, 
         "confusing" -> 1, "cemented" -> 1, "waver" -> 1, "releases" -> 1, 
         "marvel" -> 1, "daydream" -> 1, "submerged" -> 1, "sustain" -> 1, 
         "discuss" -> 1, "manages" -> 1, "biked" -> 1, "portrays" -> 1, 
         "effecting" -> 1, "voting" -> 1, "dislike" -> 1, "exploding" -> 1, 
         "uses" -> 1, "wonders" -> 1, "scan" -> 1, "mentioning" -> 1, 
         "enrages" -> 1, "pivoted" -> 1, "achieve" -> 1, "freezes" -> 1, 
         "negotiate" -> 1, "freak" -> 1, "kent" -> 1, "backed" -> 1, 
         "envision" -> 1, "decompress" -> 1, "disoriented" -> 1, "corrupted" -> 
         1, "defined" -> 1, "reclaim" -> 1, "demonstrate" -> 1, "abdicated" -> 
         1, "dividing" -> 1, "withstand" -> 1, "nfected" -> 1, "staff" -> 1, 
         "training" -> 1, "restore" -> 1, "adorned" -> 1, "topped" -> 1, 
         "slack" -> 1, "neglected" -> 1, "pisses" -> 1, "lowered" -> 1, 
         "shaking" -> 1, "bothers" -> 1, "tackles" -> 1, "features" -> 1, 
         "snap" -> 1, "tackled" -> 1, "asks" -> 1, "splashed" -> 1, 
         "descending" -> 1, "dreamt" -> 1, "represented" -> 1, "crushing" -> 
         1, "titled" -> 1, "contacted" -> 1, "unpack" -> 1, "weighs" -> 1, 
         "lies" -> 1, "linked" -> 1, "frame" -> 1, "condemn" -> 1, "bullying" -> 
         1, "dreaded" -> 1, "clung" -> 1, "sang" -> 1, "depriving" -> 1, 
         "envy" -> 1, "fits" -> 1, "balance" -> 1, "chanted" -> 1, "booed" -> 
         1, "sell" -> 1, "leaned" -> 1, "rejoiced" -> 1, "shifted" -> 1, 
         "oversteps" -> 1, "frisbee" -> 1, "sanitized" -> 1, "strayed" -> 1, 
         "redefined" -> 1, "translating" -> 1, "revealing" -> 1, "disabled" -> 
         1, "shedding" -> 1, "deserves" -> 1, "intensify" -> 1, "rebuild" -> 
         1, "depended" -> 1, "prided" -> 1, "dispensed" -> 1, "ensure" -> 1, 
         "legitimize" -> 1, "tilting" -> 1, "appoint" -> 1, "agitated" -> 1, 
         "curb" -> 1, "facilitated" -> 1, "restoring" -> 1, "contributes" -> 
         1, "garner" -> 1, "accompany" -> 1, "timed" -> 1, "enriched" -> 1, 
         "gentrified" -> 1, "populated" -> 1, "forces" -> 1, "wont" -> 1, 
         "distributing" -> 1, "delivering" -> 1, "sulk" -> 1, "adapt" -> 1, 
         "embraces" -> 1, "dictates" -> 1, "pry" -> 1, "hates" -> 1, "value" -> 
         1, "engulfed" -> 1, "underlie" -> 1, "canning" -> 1, "perceiving" -> 
         1, "arose" -> 1, "tie" -> 1, "accustomed" -> 1, "volunteer" -> 1, 
         "retested" -> 1, "transpire" -> 1, "involves" -> 1, "rack" -> 1, 
         "discriminate" -> 1, "lower" -> 1, "resign" -> 1, "picture" -> 1, 
         "opted" -> 1, "plans" -> 1, "vanish" -> 1, "exhale" -> 1, "cracked" -> 
         1, "waste" -> 1, "tosses" -> 1, "prayed" -> 1, "pieced" -> 1, 
         "harmed" -> 1, "arising" -> 1, "flaunting" -> 1, "entitled" -> 1, 
         "behave" -> 1, "brag" -> 1, "pinpointed" -> 1, "darting" -> 1, 
         "slipping" -> 1, "repotting" -> 1, "absorbed" -> 1, "owe" -> 1, 
         "ping-ponging" -> 1, "echo" -> 1, "resonating" -> 1, "persuading" -> 
         1, "risking" -> 1, "transmit" -> 1, "vacationing" -> 1, 
         "live-streamed" -> 1, "reduces" -> 1, "rehearsing" -> 1, 
         "housewarming" -> 1, "threw" -> 1, "monitoring" -> 1, "roaming" -> 1,
          "exuded" -> 1, "travelled" -> 1, "suggested" -> 1, "murdering" -> 1,
          "imploding" -> 1, "hesitate" -> 1, "plunges" -> 1, "pre-register" -> 
         1, "impending" -> 1, "entertain" -> 1, "coordinated" -> 1, "rallied" -> 
         1, "swallow" -> 1, "dodged" -> 1, "compromise" -> 1, "reevaluated" -> 
         1, "weighing" -> 1, "rusted" -> 1, "established" -> 1, "conducting" -> 
         1, "directing" -> 1, "exacerbate" -> 1, "pinching" -> 1, "bulging" -> 
         1, "resulted" -> 1, "concentrating" -> 1, "easing" -> 1, "serving" -> 
         1, "pinned" -> 1, "tearing" -> 1, "blends" -> 1, "tromp" -> 1, 
         "laced" -> 1, "rained" -> 1, "scrambled" -> 1, "coordinating" -> 1, 
         "swinging" -> 1, "exhibited" -> 1, "revered" -> 1, "exhibit" -> 1, 
         "revisiting" -> 1, "nurtured" -> 1, "free" -> 1, "boring" -> 1, 
         "perish" -> 1, "drying" -> 1, "possess" -> 1, "suggests" -> 1, 
         "texas" -> 1, "stressing" -> 1, "overthinking" -> 1, "participating" -> 
         1, "slobbers" -> 1, "snuggles" -> 1, "refracting" -> 1, "absorbing" -> 
         1, "pummeled" -> 1, "retooled" -> 1, "protects" -> 1, "sold" -> 1, 
         "yearned" -> 1, "persecuted" -> 1, "sounded" -> 1, "studied" -> 1, 
         "impede" -> 1, "reared" -> 1, "occupy" -> 1, "resonated" -> 1, 
         "implement" -> 1, "enabled" -> 1, "target" -> 1, "purchased" -> 1, 
         "formed" -> 1, "showcased" -> 1, "annoyed" -> 1, "swim" -> 1, "blur" -> 
         1, "restocked" -> 1, "lined" -> 1, "consider" -> 1, "ease" -> 1, 
         "served" -> 1, "napped" -> 1, "divorced" -> 1, "enclosed" -> 1, 
         "replacing" -> 1, "sliding" -> 1, "emerges" -> 1, "measuring" -> 1, 
         "intrude" -> 1, "intimidating" -> 1, "showered" -> 1, "aired" -> 1, 
         "enraging" -> 1, "serviced" -> 1, "braced" -> 1, "gaze" -> 1, 
         "matters" -> 1, "sharpened" -> 1, "welcomed" -> 1, "inducing" -> 1, 
         "overpriced" -> 1, "upsetting" -> 1, "reducing" -> 1, "stomped" -> 1,
          "crowded" -> 1, "ravaging" -> 1, "decrease" -> 1, "surging" -> 1, 
         "labored" -> 1, "inviting" -> 1, "transformed" -> 1, "att" -> 1, 
         "james" -> 1, "gain" -> 1, "examine" -> 1, "edified" -> 1, "pander" -> 
         1, "driven" -> 1, "gloved" -> 1, "practising" -> 1, "lack" -> 1, 
         "roll" -> 1, "caving" -> 1, "sorting" -> 1, "indulge" -> 1, "bleed" -> 
         1, "frozen" -> 1, "tumbling" -> 1, "gasped" -> 1, "cvs" -> 1, 
         "repeat" -> 1, "rhyme" -> 1, "conquer" -> 1, "dooming" -> 1, 
         "lucked" -> 1, "bargained" -> 1, "profiting" -> 1, "accepting" -> 1, 
         "dedicating" -> 1, "punching" -> 1, "waged" -> 1, "release" -> 1, 
         "rotting" -> 1, "dragging" -> 1, "cursed" -> 1, "intimidated" -> 1, 
         "approached" -> 1, "acknowledge" -> 1, "darkening" -> 1, "darken" -> 
         1, "remarking" -> 1, "sewed" -> 1, "flies" -> 1, "denote" -> 1, 
         "betting" -> 1, "overloaded" -> 1, "overtaxed" -> 1, "shamed" -> 1, 
         "exists" -> 1, "edinburgh" -> 1, "invested" -> 1, "rediscovering" -> 
         1, "rediscovered" -> 1, "separate" -> 1, "stabled" -> 1, "swivel" -> 
         1, "rethink" -> 1, "preserve" -> 1, "benefited" -> 1, "abandon" -> 1,
          "adopted" -> 1, "suck" -> 1, "documenting" -> 1, "sparks" -> 1, 
         "realizes" -> 1, "panic" -> 1, "normalize" -> 1, "toss" -> 1, 
         "determined" -> 1, "stretching" -> 1, "abound" -> 1, "reenergize" -> 
         1, "flagged" -> 1, "admire" -> 1, "cower" -> 1, "preferring" -> 1, 
         "traumatized" -> 1, "arise" -> 1, "intensified" -> 1, "unfuck" -> 1, 
         "screams" -> 1, "regressed" -> 1, "intervene" -> 1], "InitialShape" -> 
       TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
           TypeSystem`PackageScope`AtomShape[34]]], 20, 
         DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 2880], "Meta" -> 
       Association["ID" -> 169526880994729], "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
           TypeSystem`PackageScope`AtomShape[34]]], 20, 
         DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 2880], "Path" -> {}, "BaseIndices" -> {}, 
       "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
       2880, "DataColumnCount" -> 1, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["'s", 
                    Style[
                    "'s", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["'s"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["'s"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["371"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["'s"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["'m", 
                    Style[
                    "'m", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["'m"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["'m"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["245"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["'m"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["feel", 
                    Style[
                    "feel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["feel"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["feel"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["234"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["feel"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["going", 
                    Style[
                    "going", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["going"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["going"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["232"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["going"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["know", 
                    Style[
                    "know", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["know"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["know"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["184"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["know"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["think", 
                    Style[
                    "think", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["think"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["think"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["177"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["think"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["got", 
                    Style[
                    "got", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["got"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["got"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["147"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["got"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["'ve", 
                    Style[
                    "'ve", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["'ve"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["'ve"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["138"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["'ve"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["ca", 
                    Style[
                    "ca", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ca"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["ca"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["135"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["ca"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\[CloseCurlyQuote]s", 
                    Style[
                    "\[CloseCurlyQuote]s", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CloseCurlyQuote]s"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\[CloseCurlyQuote]s"]}, "RowHeader", False], "Mouse"],
                 ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["126"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\[CloseCurlyQuote]s"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["want", 
                    Style[
                    "want", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["want"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["want"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["123"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["want"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["make", 
                    Style[
                    "make", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["make"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["make"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["112"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["make"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["getting", 
                    Style[
                    "getting", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["getting"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["getting"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["109"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["getting"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["\[CloseCurlyQuote]m", 
                    Style[
                    "\[CloseCurlyQuote]m", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CloseCurlyQuote]m"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\[CloseCurlyQuote]m"]}, "RowHeader", False], "Mouse"],
                 ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["106"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["\[CloseCurlyQuote]m"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["come", 
                    Style[
                    "come", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["come"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["come"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["104"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["come"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["felt", 
                    Style[
                    "felt", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["felt"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["felt"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["102"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["felt"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["trying", 
                    Style[
                    "trying", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["trying"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["trying"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["93"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["trying"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["work", 
                    Style[
                    "work", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["work"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["work"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["89"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["work"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["working", 
                    Style[
                    "working", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["working"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["working"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["88"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["working"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["feels", 
                    Style[
                    "feels", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["feels"]}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["feels"]}, "RowHeader", False], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["84"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["feels"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Deploy[
                Pane[
                 Row[{
                   Spacer[2], 
                   Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 2880, 1], {1, 2880 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 2880, 1], {1, 2880 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    2880, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    2880, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 2880, 1], {1, 2880 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 2880, 1], {1, 2880 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                   Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
               Background -> 
               RGBColor[
                0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
               Alignment -> {Left, Top}], SpanFromLeft}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
              "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
            Left, Dividers -> All, FrameStyle -> 
            GrayLevel[0.7490196078431373], 
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
           LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
           ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           If[GeneralUtilities`$DebugMode, 
            Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
              TypeSystem`NestedGrid`PackagePrivate`formatState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{182., {210.85052490234375`, 215.14947509765625`}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{182., {210.85052490234375`, 215.14947509765625`}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>
       Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.824370198717668*^9, 3.824370258397697*^9}, 
   3.824370312981242*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"775da208-5b3e-4e36-9d0b-356a0379dd21"]
}, Open  ]],

Cell[TextData[StyleBox["Reflection question: What words are interesting, and \
why?",
 FontSlant->"Italic"]], "Subsubsection",
 CellChangeTimes->{{3.8243705535442047`*^9, 3.8243705612761602`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"d4fa182e-098e-43f7-896e-ff2dcd7e1985"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What words follow other words?", "Section",
 CellChangeTimes->{{3.824370580046577*^9, 
  3.824370583454116*^9}},ExpressionUUID->"53fe858c-be5e-4e87-84c7-\
04fdedb19404"],

Cell[CellGroupData[{

Cell["How yo use the command \[OpenCurlyDoubleQuote]Partition\
\[CloseCurlyDoubleQuote]", "Subsubsection",
 CellChangeTimes->{{3.82437060346623*^9, 
  3.824370612059319*^9}},ExpressionUUID->"b456a334-ebbd-4937-89c7-\
b30ce2333f69"],

Cell["Start with a sentence", "Text",
 CellChangeTimes->{{3.824370617984406*^9, 
  3.824370621216874*^9}},ExpressionUUID->"e34dca7c-f94f-4c3b-9db2-\
de00743f90be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Greeting", "=", 
  RowBox[{
  "TextWords", "[", "\"\<How are you on this fine and pleasant day?\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8243706253038597`*^9, 3.8243706590428*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"04a946d2-e26b-448d-97f0-ae91f82d8a99"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"How\"\>", ",", "\<\"are\"\>", ",", "\<\"you\"\>", 
   ",", "\<\"on\"\>", ",", "\<\"this\"\>", ",", "\<\"fine\"\>", 
   ",", "\<\"and\"\>", ",", "\<\"pleasant\"\>", ",", "\<\"day\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.82437066348286*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"4f0684d3-fd85-4467-b9d4-6a0840056817"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s use partition to break it into groups", "Text",
 CellChangeTimes->{{3.824370727481867*^9, 
  3.824370732571198*^9}},ExpressionUUID->"ac7f15ec-5483-4950-8cef-\
021ad9c853fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{"Greeting", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.824370736909068*^9, 3.824370741257221*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"381ac10f-3076-49cd-9193-3fbc6e5027dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"How\"\>", ",", "\<\"are\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"you\"\>", ",", "\<\"on\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"this\"\>", ",", "\<\"fine\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"and\"\>", ",", "\<\"pleasant\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.824370742019519*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"a2e38fad-b491-4e68-8a62-9a7d31b1297e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{"Greeting", ",", " ", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.824370762590938*^9, 3.8243707673494987`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"774d7e1f-9e5a-48c1-880f-f3869e2d2fc4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"How\"\>", ",", "\<\"are\"\>", ",", "\<\"you\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"on\"\>", ",", "\<\"this\"\>", ",", "\<\"fine\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"and\"\>", ",", "\<\"pleasant\"\>", ",", "\<\"day\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.824370772185938*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"66f6ef05-83c0-44a8-86d5-a164cfc853a5"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s start the partitions at different intervals", \
"Text",
 CellChangeTimes->{{3.824370778335103*^9, 
  3.8243707859541407`*^9}},ExpressionUUID->"4079f6de-b51e-489d-955e-\
11575a1bafa0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{"Greeting", ",", " ", "3", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.824370793808404*^9, 3.824370805983585*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"90402add-9247-45b4-be40-1b8da8f8cf73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"How\"\>", ",", "\<\"are\"\>", ",", "\<\"you\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"are\"\>", ",", "\<\"you\"\>", ",", "\<\"on\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"you\"\>", ",", "\<\"on\"\>", ",", "\<\"this\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"on\"\>", ",", "\<\"this\"\>", ",", "\<\"fine\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"this\"\>", ",", "\<\"fine\"\>", ",", "\<\"and\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"fine\"\>", ",", "\<\"and\"\>", ",", "\<\"pleasant\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"and\"\>", ",", "\<\"pleasant\"\>", ",", "\<\"day\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8243708073499527`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"a02d53c4-9f4f-4e96-89b3-e74a7bf3eebd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{"Greeting", ",", " ", "3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8243708413085012`*^9, 3.824370846905477*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"df425e92-e30c-4ada-8548-ac475408c0a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"How\"\>", ",", "\<\"are\"\>", ",", "\<\"you\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"you\"\>", ",", "\<\"on\"\>", ",", "\<\"this\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"this\"\>", ",", "\<\"fine\"\>", ",", "\<\"and\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"and\"\>", ",", "\<\"pleasant\"\>", ",", "\<\"day\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.824370880243218*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"7505ba7e-6d46-42bf-a310-0c58a773a448"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s use partition to make bigrams of our source \
text", "Subsubsection",
 CellChangeTimes->{{3.824370892813398*^9, 
  3.824370902987996*^9}},ExpressionUUID->"219c83fd-d2de-4a2a-ae2b-\
dea89c21a08a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PJPbigrams", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{"PJPWords", ",", " ", "2", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.824370907103331*^9, 3.824370946690172*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"d4fe88fc-9361-49ac-9924-af783c4dc175"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"how\"\>", ",", "\<\"is\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"is\"\>", ",", "\<\"the\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"the\"\>", ",", "\<\"coronavirus\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"coronavirus\"\>", ",", "\<\"pandemic\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"pandemic\"\>", ",", "\<\"affecting\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"affecting\"\>", ",", "\<\"your\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"your\"\>", ",", "\<\"life\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"life\"\>", ",", "\<\"right\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"right\"\>", ",", "\<\"now\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"now\"\>", ",", "\<\"tell\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"tell\"\>", ",", "\<\"us\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"us\"\>", ",", "\<\"about\"\>"}], "}"}], ",", 
           TemplateBox[{"124610"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"travel\"\>", ",", "\<\"to\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"to\"\>", ",", "\<\"japan\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"japan\"\>", ",", "\<\"will\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"will\"\>", ",", "\<\"happen\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"happen\"\>", ",", "\<\"this\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"this\"\>", ",", "\<\"year\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"year\"\>", ",", "\<\"but\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"but\"\>", ",", "\<\"i'm\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"i'm\"\>", ",", "\<\"starting\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"starting\"\>", ",", "\<\"to\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"to\"\>", ",", "\<\"doubt\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"doubt\"\>", ",", "\<\"it\"\>"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{46., {2., 6.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 29, 16036513112279889770, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{43., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{43., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 29, 16036513112279889770, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{33., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{33., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 29, 16036513112279889770, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16036513112279889770 === $SessionID, 
   Out[29], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.824370948425654*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"d362157c-32ba-42cb-a085-f2ec6a549e91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "[", "PJPbigrams", "]"}]], "Input",
 CellChangeTimes->{{3.824370997425001*^9, 3.8243710010618887`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"dc52a863-7d09-4477-8c6d-187aca78940b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"how\"\>", ",", "\<\"is\"\>"}], "}"}], ",", "8"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"is\"\>", ",", "\<\"the\"\>"}], "}"}], ",", "74"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"the\"\>", ",", "\<\"coronavirus\"\>"}], "}"}], ",",
              "20"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"coronavirus\"\>", ",", "\<\"pandemic\"\>"}], "}"}],
              ",", "9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"pandemic\"\>", ",", "\<\"affecting\"\>"}], "}"}], 
             ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"affecting\"\>", ",", "\<\"your\"\>"}], "}"}], ",", 
             "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"your\"\>", ",", "\<\"life\"\>"}], "}"}], ",", 
             "6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"life\"\>", ",", "\<\"right\"\>"}], "}"}], ",", 
             "7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"right\"\>", ",", "\<\"now\"\>"}], "}"}], ",", 
             "57"}], "}"}], ",", 
           TemplateBox[{"65921"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"infiltrated\"\>", ",", "\<\"our\"\>"}], "}"}], ",",
              "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"our\"\>", ",", "\<\"healthcare\"\>"}], "}"}], ",", 
             "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"healthcare\"\>", ",", "\<\"system\"\>"}], "}"}], 
             ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"my\"\>", ",", "\<\"plans\"\>"}], "}"}], ",", "1"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"to\"\>", ",", "\<\"japan\"\>"}], "}"}], ",", "1"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"japan\"\>", ",", "\<\"will\"\>"}], "}"}], ",", 
             "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"happen\"\>", ",", "\<\"this\"\>"}], "}"}], ",", 
             "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"doubt\"\>", ",", "\<\"it\"\>"}], "}"}], ",", "1"}],
             "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{46., {2., 6.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 30, 16036513112279889770, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{43., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 30, 16036513112279889770, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{33., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{33., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 30, 16036513112279889770, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16036513112279889770 === $SessionID, 
   Out[30], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.8243710023645906`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"7a292073-0ca6-4121-8135-f83dca83c641"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"SortBy", "[", 
   RowBox[{
    RowBox[{"Tally", "[", "PJPbigrams", "]"}], ",", "Last"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8243710243045397`*^9, 3.8243710475551157`*^9}, {
  3.824371082139035*^9, 3.8243710856286917`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"b058eea0-d0b7-41fb-8a55-5c44d6af6288"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"of\"\>", ",", "\<\"the\"\>"}], "}"}], ",", "564"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"in\"\>", ",", "\<\"the\"\>"}], "}"}], ",", "533"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"i\"\>", ",", "\<\"am\"\>"}], "}"}], ",", "409"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"i\"\>", ",", "\<\"have\"\>"}], "}"}], ",", "300"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"to\"\>", ",", "\<\"be\"\>"}], "}"}], ",", "283"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"to\"\>", ",", "\<\"the\"\>"}], "}"}], ",", "273"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"and\"\>", ",", "\<\"i\"\>"}], "}"}], ",", "266"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"on\"\>", ",", "\<\"the\"\>"}], "}"}], ",", "236"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"the\"\>", ",", "\<\"pandemic\"\>"}], "}"}], ",", 
             "219"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"i\"\>", ",", "\<\"was\"\>"}], "}"}], ",", "208"}], 
            "}"}], ",", 
           TemplateBox[{"65918"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"%\"\>", ",", "\<\"pay\"\>"}], "}"}], ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"%\"\>", ",", "\<\"journalist\"\>"}], "}"}], ",", 
             "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"%\"\>", ",", "\<\"isolation\"\>"}], "}"}], ",", 
             "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"%\"\>", ",", "\<\"is\"\>"}], "}"}], ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"%\"\>", ",", "\<\"in\"\>"}], "}"}], ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"%\"\>", ",", "\<\"going\"\>"}], "}"}], ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"%\"\>", ",", "\<\"for\"\>"}], "}"}], ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"%\"\>", ",", "\<\"efficacy\"\>"}], "}"}], ",", 
             "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"%\"\>", ",", "\<\"effectiveness\"\>"}], "}"}], ",",
              "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\"%\"\>", ",", "\<\"because\"\>"}], "}"}], ",", 
             "1"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{46., {2., 6.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 33, 16036513112279889770, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{43., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{43., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 33, 16036513112279889770, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{33., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{33., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 33, 16036513112279889770, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16036513112279889770 === $SessionID, 
   Out[33], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.824371033420355*^9, {3.824371074787589*^9, 3.824371087064351*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"4d4dcc95-9fed-4bd4-8dfc-545f487fcc82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Reverse", "[", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"Tally", "[", "PJPbigrams", "]"}], ",", " ", "Last"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.824371202290186*^9, 3.824371216882124*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"ea20525b-125c-44ae-859b-d4e5f9d331b3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          
          RowBox[{"\<\"of\"\>", ",", "\<\"the\"\>", ",", "564", 
           ",", "\<\"in\"\>", ",", "\<\"the\"\>", ",", "533", 
           ",", "\<\"i\"\>", ",", "\<\"am\"\>", ",", "409", ",", "\<\"i\"\>", 
           ",", "\<\"have\"\>", ",", "300", ",", "\<\"to\"\>", 
           ",", "\<\"be\"\>", ",", "283", ",", "\<\"to\"\>", 
           ",", "\<\"the\"\>", ",", "273", ",", "\<\"and\"\>", 
           ",", "\<\"i\"\>", ",", "266", ",", "\<\"on\"\>", 
           ",", "\<\"the\"\>", ",", "236", ",", "\<\"the\"\>", 
           ",", "\<\"pandemic\"\>", ",", "219", ",", "\<\"i\"\>", 
           ",", "\<\"was\"\>", ",", "208", ",", "\<\"and\"\>", 
           ",", "\<\"the\"\>", ",", "200", ",", "\<\"it\"\>", 
           ",", "\<\"was\"\>", ",", "186", ",", "\<\"that\"\>", 
           ",", "\<\"i\"\>", ",", "182", ",", "\<\"it\"\>", ",", "\<\"is\"\>",
            ",", 
           TemplateBox[{"197732"},
            "OutputSizeLimit`Skeleton"], ",", "\<\"virtual\"\>", ",", "1", 
           ",", "\<\"%\"\>", ",", "\<\"vaccinated\"\>", ",", "1", 
           ",", "\<\"%\"\>", ",", "\<\"she\"\>", ",", "1", ",", "\<\"%\"\>", 
           ",", "\<\"positivity\"\>", ",", "1", ",", "\<\"%\"\>", 
           ",", "\<\"pay\"\>", ",", "1", ",", "\<\"%\"\>", 
           ",", "\<\"journalist\"\>", ",", "1", ",", "\<\"%\"\>", 
           ",", "\<\"isolation\"\>", ",", "1", ",", "\<\"%\"\>", 
           ",", "\<\"is\"\>", ",", "1", ",", "\<\"%\"\>", ",", "\<\"in\"\>", 
           ",", "1", ",", "\<\"%\"\>", ",", "\<\"going\"\>", ",", "1", 
           ",", "\<\"%\"\>", ",", "\<\"for\"\>", ",", "1", ",", "\<\"%\"\>", 
           ",", "\<\"efficacy\"\>", ",", "1", ",", "\<\"%\"\>", 
           ",", "\<\"effectiveness\"\>", ",", "1", ",", "\<\"%\"\>", 
           ",", "\<\"because\"\>", ",", "1"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{46., {2., 6.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 34, 16036513112279889770, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{43., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{43., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 34, 16036513112279889770, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{33., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 34, 16036513112279889770, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16036513112279889770 === $SessionID, 
   Out[34], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.824371219199583*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"81242436-bf4b-47a9-bfc5-33209f62139d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PJPbigramlist", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Reverse", "[", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"Tally", "[", "PJPbigrams", "]"}], ",", "Last"}], "]"}], 
      "]"}], "]"}], ",", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.82437124799194*^9, 3.8243713060276337`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"3f22f088-8866-4972-b429-f360771dc86f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"of\"\>", ",", "\<\"the\"\>", ",", "564"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"in\"\>", ",", "\<\"the\"\>", ",", "533"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"i\"\>", ",", "\<\"am\"\>", ",", "409"}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"\<\"i\"\>", ",", "\<\"have\"\>", ",", "300"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"to\"\>", ",", "\<\"be\"\>", ",", "283"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"to\"\>", ",", "\<\"the\"\>", ",", "273"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"and\"\>", ",", "\<\"i\"\>", ",", "266"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"on\"\>", ",", "\<\"the\"\>", ",", "236"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"the\"\>", ",", "\<\"pandemic\"\>", ",", "219"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"i\"\>", ",", "\<\"was\"\>", ",", "208"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"and\"\>", ",", "\<\"the\"\>", ",", "200"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"it\"\>", ",", "\<\"was\"\>", ",", "186"}], "}"}], 
           ",", 
           TemplateBox[{"65914"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"%\"\>", ",", "\<\"she\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"%\"\>", ",", "\<\"positivity\"\>", ",", "1"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\<\"%\"\>", ",", "\<\"pay\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"%\"\>", ",", "\<\"journalist\"\>", ",", "1"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\<\"%\"\>", ",", "\<\"isolation\"\>", ",", "1"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"%\"\>", ",", "\<\"is\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"%\"\>", ",", "\<\"in\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"%\"\>", ",", "\<\"going\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"%\"\>", ",", "\<\"for\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"%\"\>", ",", "\<\"efficacy\"\>", ",", "1"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\<\"%\"\>", ",", "\<\"effectiveness\"\>", ",", "1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"%\"\>", ",", "\<\"because\"\>", ",", "1"}], "}"}]}], 
          "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{46., {2., 6.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 36, 16036513112279889770, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{43., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{43., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 36, 16036513112279889770, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{33., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 36, 16036513112279889770, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59., {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16036513112279889770 === $SessionID, 
   Out[36], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{{3.8243713021908073`*^9, 3.824371307325638*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"544f498a-d16d-4629-8b0d-41ac4f2446aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", "PJPbigramlist"}]], "Input",
 CellChangeTimes->{{3.824371315989491*^9, 3.824371337054462*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"f366ac4c-2c12-4afb-971d-15d3bb8f9243"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          5456942639005266290088096898570320890712190879383875932200], 
         "InitialShape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[{
               TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
               TypeSystem`PackageScope`AtomShape[86.4], 
               TypeSystem`PackageScope`AtomShape[34]}], 
             DirectedInfinity[1], 3, {All}]], 20, 
           DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
           TypeSystem`Tuple[{
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer]}], 65938], "Meta" -> 
         Association["ID" -> 169531175963051], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[{
               TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
               TypeSystem`PackageScope`AtomShape[86.4], 
               TypeSystem`PackageScope`AtomShape[34]}], 
             DirectedInfinity[1], 3, {All}]], 20, 
           DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
           TypeSystem`Tuple[{
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer]}], 65938], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 20, 
         "DisplayedColumnCount" -> 3, "DataRowCount" -> 65938, 
         "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation["of", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["the", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["564"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["in", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["the", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["533"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["i", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["am", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["409"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["i", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["have", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["300"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["to", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["be", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["283"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["to", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["the", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["273"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["and", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["i", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["266"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["on", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["the", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["236"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["the", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["pandemic", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["219"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["i", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["was", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["208"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["and", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["the", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["200"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["it", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["was", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["186"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["that", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["i", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["182"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["it", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["is", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["181"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["in", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["a", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["177"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["for", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["the", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["163"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["able", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["to", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["159"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["we", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["are", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["148"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["but", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["i", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["147"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["at", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["the", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["146"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 65938, 1], {1, 65938 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 65938, 1], {1, 65938 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    65938, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    65938, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 65938, 1], {1, 65938 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 65938, 1], {1, 65938 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {275., {214.35052490234375`, 218.64947509765625`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {275., {214.35052490234375`, 218.64947509765625`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 5456942639005266290088096898570320890712190879383875932200,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.824371338916703*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"8b5672dd-b9ea-440e-8f85-4322ae4c81fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"PJPbigramlist", ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", "\"\<feel\>\"", ",", "_"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.824371400013579*^9, 3.8243714198613577`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"a28e6c02-7051-4281-9313-bb7899d66cf2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"i\"\>", ",", "\<\"feel\"\>", ",", "103"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"to\"\>", ",", "\<\"feel\"\>", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"me\"\>", ",", "\<\"feel\"\>", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"don't\"\>", ",", "\<\"feel\"\>", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"just\"\>", ",", "\<\"feel\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"and\"\>", ",", "\<\"feel\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"would\"\>", ",", "\<\"feel\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"do\"\>", ",", "\<\"feel\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"not\"\>", ",", "\<\"feel\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"can\"\>", ",", "\<\"feel\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"you\"\>", ",", "\<\"feel\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"i'll\"\>", ",", "\<\"feel\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"didn't\"\>", ",", "\<\"feel\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"always\"\>", ",", "\<\"feel\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"we\"\>", ",", "\<\"feel\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"this\"\>", ",", "\<\"feel\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"still\"\>", ",", "\<\"feel\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ever\"\>", ",", "\<\"feel\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"doesn\[CloseCurlyQuote]t\"\>", ",", "\<\"feel\"\>", ",", 
     "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"didn\[CloseCurlyQuote]t\"\>", ",", "\<\"feel\"\>", ",", 
     "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"also\"\>", ",", "\<\"feel\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"almost\"\>", ",", "\<\"feel\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"woman\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"truly\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"together\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"things\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"they\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"them\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"that\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"really\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"often\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"normally\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"may\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"kittens\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"it\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"her\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"experts\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"everything\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"even\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"does\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"dictators\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"department\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"can't\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"but\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"feel\"\>", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.82437142532664*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"6473b80e-1e8d-4a28-b4dc-b82522cf52a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"PJPbigramlist", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<feel\>\"", ",", "_", ",", "_"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8243715193394136`*^9, 3.824371544632203*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"590f6916-c82d-44dd-b16a-a018465be7ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"like\"\>", ",", "53"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"that\"\>", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"so\"\>", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"the\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"safe\"\>", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"really\"\>", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"angry\"\>", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"sad\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"more\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"less\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"it\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"guilty\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"as\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"a\"\>", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"not\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"i\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"hopeful\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"bad\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"we\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"very\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"trapped\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"too\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"this\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"super\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"small\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"normal\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"much\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"lucky\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"isolated\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"hopeless\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"good\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"extremely\"\>", ",", "2"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"even\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"comfortable\"\>", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"better\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"anything\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"anxious\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"alone\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"worse\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"when\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"well\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"totally\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"tired\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"these\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"their\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"terrible\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"such\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"stuck\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"strongly\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"strong\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"spurts\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"sorry\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"something\"\>", ",", "1"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"she's\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"shattered\"\>", ",", "1"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"selfish\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"right\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"quite\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"pride\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"pressured\"\>", ",", "1"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"powerful\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"pessimistic\"\>", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"persecuted\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"overwhelmed\"\>", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"okay\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"now\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"nervous\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"my\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"left\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"it\[CloseCurlyQuote]s\"\>", ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"incredibly\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"ill\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"his\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"her\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"helpless\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"heard\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"happy\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"full\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"from\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"free\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"for\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"expendable\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"during\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"despairing\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"cut\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"crowded\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"content\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"connected\"\>", ",", "1"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"compelled\"\>", ",", "1"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"closer\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"close\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"both\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"because\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"badly\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"ashamed\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"an\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"feel\"\>", ",", "\<\"alleviated\"\>", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8243715527914143`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"4e6df891-c1a5-48f4-a2e3-89b6aadc8328"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Can we make a function of this, so we can use any text, and any word within \
it?\
\>", "Subsubsection",
 CellChangeTimes->{{3.8243715828806553`*^9, 
  3.824371595824422*^9}},ExpressionUUID->"e8b6e0eb-cfe7-4762-ba4a-\
1a4537d6d84f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BigramSelectAfter", "[", 
   RowBox[{"text_", ",", "word_"}], "]"}], ":=", " ", 
  RowBox[{"Dataset", "@", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Reverse", "[", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Tally", "[", 
            RowBox[{"Partition", "[", 
             RowBox[{"text", ",", " ", "2", ",", "1"}], "]"}], "]"}], ",", 
           "Last"}], "]"}], "]"}], "]"}], ",", "3"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"word", ",", "_", ",", "_"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8243716454576283`*^9, 3.8243717271482077`*^9}, {
  3.824372171770783*^9, 3.824372174116746*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"f8711d0b-4006-41a9-bd67-8b87c69f7044"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BigramSelectAfter", "[", 
  RowBox[{"PJPWords", ",", "\"\<feel\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.824371762384172*^9, 3.824371769903056*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"0062e7b1-dcb7-4fad-b21e-dc8c1403a5f6"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{"feel", "like", 53}, {"feel", "that", 13}, {
       "feel", "so", 8}, {"feel", "the", 7}, {"feel", "safe", 7}, {
       "feel", "really", 6}, {"feel", "angry", 5}, {"feel", "sad", 4}, {
       "feel", "more", 4}, {"feel", "less", 4}, {"feel", "it", 4}, {
       "feel", "guilty", 4}, {"feel", "as", 4}, {"feel", "a", 4}, {
       "feel", "not", 3}, {"feel", "i", 3}, {"feel", "hopeful", 3}, {
       "feel", "bad", 3}, {"feel", "we", 2}, {"feel", "very", 2}, {
       "feel", "trapped", 2}, {"feel", "too", 2}, {"feel", "this", 2}, {
       "feel", "super", 2}, {"feel", "small", 2}, {"feel", "normal", 2}, {
       "feel", "much", 2}, {"feel", "lucky", 2}, {"feel", "isolated", 2}, {
       "feel", "hopeless", 2}, {"feel", "good", 2}, {
       "feel", "extremely", 2}, {"feel", "even", 2}, {
       "feel", "comfortable", 2}, {"feel", "better", 2}, {
       "feel", "anything", 2}, {"feel", "anxious", 2}, {"feel", "alone", 2}, {
       "feel", "worse", 1}, {"feel", "when", 1}, {"feel", "well", 1}, {
       "feel", "totally", 1}, {"feel", "tired", 1}, {"feel", "these", 1}, {
       "feel", "their", 1}, {"feel", "terrible", 1}, {"feel", "such", 1}, {
       "feel", "stuck", 1}, {"feel", "strongly", 1}, {"feel", "strong", 1}, {
       "feel", "spurts", 1}, {"feel", "sorry", 1}, {"feel", "something", 1}, {
       "feel", "she's", 1}, {"feel", "shattered", 1}, {
       "feel", "selfish", 1}, {"feel", "right", 1}, {"feel", "quite", 1}, {
       "feel", "pride", 1}, {"feel", "pressured", 1}, {
       "feel", "powerful", 1}, {"feel", "pessimistic", 1}, {
       "feel", "persecuted", 1}, {"feel", "overwhelmed", 1}, {
       "feel", "okay", 1}, {"feel", "now", 1}, {"feel", "nervous", 1}, {
       "feel", "my", 1}, {"feel", "left", 1}, {
       "feel", "it\[CloseCurlyQuote]s", 1}, {"feel", "incredibly", 1}, {
       "feel", "ill", 1}, {"feel", "his", 1}, {"feel", "her", 1}, {
       "feel", "helpless", 1}, {"feel", "heard", 1}, {"feel", "happy", 1}, {
       "feel", "full", 1}, {"feel", "from", 1}, {"feel", "free", 1}, {
       "feel", "for", 1}, {"feel", "expendable", 1}, {"feel", "during", 1}, {
       "feel", "despairing", 1}, {"feel", "cut", 1}, {"feel", "crowded", 1}, {
       "feel", "content", 1}, {"feel", "connected", 1}, {
       "feel", "compelled", 1}, {"feel", "closer", 1}, {"feel", "close", 1}, {
       "feel", "both", 1}, {"feel", "because", 1}, {"feel", "badly", 1}, {
       "feel", "ashamed", 1}, {"feel", "an", 1}, {"feel", "alleviated", 1}}, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`RowShape[{
           TypeSystem`PackageScope`AtomShape[36.], 
           TypeSystem`PackageScope`AtomShape[96.00000000000001], 
           TypeSystem`PackageScope`AtomShape[34]}], 
         DirectedInfinity[1], 3, {All}]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Tuple[{
         TypeSystem`Atom[
          TypeSystem`Enumeration["feel"]], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 97], "Meta" -> 
     Association["ID" -> 169548355833074], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`RowShape[{
           TypeSystem`PackageScope`AtomShape[36.], 
           TypeSystem`PackageScope`AtomShape[96.00000000000001], 
           TypeSystem`PackageScope`AtomShape[34]}], 
         DirectedInfinity[1], 3, {All}]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Tuple[{
         TypeSystem`Atom[
          TypeSystem`Enumeration["feel"]], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 97], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     97, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["like", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["that", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["so", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["the", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["safe", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["really", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["angry", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["sad", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["more", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["less", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["it", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["guilty", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["as", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["a", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["not", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["i", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["hopeful", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["bad", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["we", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["feel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{36., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["very", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 97, 1], {1, 97 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 97, 1], {1, 97 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    97, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    97, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 97, 1], {1, 97 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 97, 1], {1, 97 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{
                   TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{215., {210.85052490234375`, 215.14947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{215., {210.85052490234375`, 215.14947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.824371774114797*^9, 3.824372178205728*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"6f45c569-d155-4947-8d40-e939df77333b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Let\[CloseCurlyQuote]s make a function for finding the word ",
 StyleBox["before",
  FontSlant->"Italic"],
 " a word"
}], "Subsubsection",
 CellChangeTimes->{{3.824372071989325*^9, 
  3.824372079294011*^9}},ExpressionUUID->"5bd242fc-05ab-4eac-a392-\
283f95fa1cb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BigramSelectBefore", "[", 
   RowBox[{"text_", ",", "word_"}], "]"}], ":=", " ", 
  RowBox[{"Dataset", "@", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Reverse", "[", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Tally", "[", 
            RowBox[{"Partition", "[", 
             RowBox[{"text", ",", " ", "2", ",", "1"}], "]"}], "]"}], ",", 
           "Last"}], "]"}], "]"}], "]"}], ",", "3"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"_", ",", "word", ",", "_"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8243720905649557`*^9, 3.824372114257847*^9}, {
  3.824372155074143*^9, 3.824372159027512*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"1056f255-709f-4bcc-9842-bec394fd54a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BigramSelectBefore", "[", 
  RowBox[{"PJPWords", ",", "\"\<health\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.82437211852896*^9, 3.824372163748095*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"d4555bd6-ebdd-4dca-8a4b-05e40dfe9dc8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{"mental", "health", 27}, {"public", "health", 14}, {
       "of", "health", 6}, {"a", "health", 6}, {"the", "health", 5}, {
       "their", "health", 4}, {"our", "health", 4}, {"my", "health", 4}, {
       "and", "health", 4}, {"own", "health", 2}, {"in", "health", 2}, {
       "his", "health", 2}, {"good", "health", 2}, {"for", "health", 2}, {
       "until", "health", 1}, {"universal", "health", 1}, {
       "two", "health", 1}, {"state", "health", 1}, {
       "regarding", "health", 1}, {"power", "health", 1}, {
       "poor", "health", 1}, {"physical/mental", "health", 1}, {
       "physical", "health", 1}, {"people\[CloseCurlyQuote]s", "health", 1}, {
       "people's", "health", 1}, {"others", "health", 1}, {
       "other", "health", 1}, {"or", "health", 1}, {
       "long-term", "health", 1}, {"her", "health", 1}, {
       "had", "health", 1}, {"general", "health", 1}, {"from", "health", 1}, {
       "food", "health", 1}, {"family\[CloseCurlyQuote]s", "health", 1}, {
       "family", "health", 1}, {"experienced", "health", 1}, {
       "everyone's", "health", 1}, {"disparity", "health", 1}, {
       "disabling", "health", 1}, {"designated", "health", 1}, {
       "county", "health", 1}, {"chronic", "health", 1}, {
       "but", "health", 1}, {"anti-public", "health", 1}, {
       "another", "health", 1}, {"american", "health", 1}, {
       "all", "health", 1}, {"access", "health", 1}}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`RowShape[{
           TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
           TypeSystem`PackageScope`AtomShape[54.], 
           TypeSystem`PackageScope`AtomShape[34]}], 
         DirectedInfinity[1], 3, {All}]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Tuple[{
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["health"]], 
         TypeSystem`Atom[Integer]}], 49], "Meta" -> 
     Association["ID" -> 169544060865765], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`RowShape[{
           TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
           TypeSystem`PackageScope`AtomShape[54.], 
           TypeSystem`PackageScope`AtomShape[34]}], 
         DirectedInfinity[1], 3, {All}]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Tuple[{
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["health"]], 
         TypeSystem`Atom[Integer]}], 49], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     49, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["mental", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["public", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["of", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["a", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["the", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["their", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["our", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["my", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["and", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["own", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["in", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["his", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["good", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["for", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["until", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["universal", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["two", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["state", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["regarding", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["power", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["health", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 49, 1], {1, 49 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 49, 1], {1, 49 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    49, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    49, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 49, 1], {1, 49 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 49, 1], {1, 49 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{242., {210.85052490234375`, 215.14947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{242., {210.85052490234375`, 215.14947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.824372129788858*^9, 3.824372164904791*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"88e81de7-f416-4a05-8f5c-3077fea4e60b"]
}, Open  ]]
}, Open  ]],

Cell[TextData[StyleBox["Research question: what words might yield interesting \
results? Come to our next class with five different bigram lists that you \
find interesting.",
 FontSlant->"Italic"]], "Subsubsection",
 CellChangeTimes->{{3.824372198276629*^9, 3.8243722271569157`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"34d2f541-cba5-4f00-a218-4744d7a9dc87"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finding other words within a sentence", "Section",
 CellChangeTimes->{{3.8243722560143423`*^9, 
  3.824372260021565*^9}},ExpressionUUID->"e32c96fd-d13a-44d5-8bcc-\
1924edb2aa0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{"PJPSentences", ",", 
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"{", "\"\<vaccine\>\"", "}"}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.824372271282502*^9, 3.8243723374340878`*^9}, 
   3.8243723737522497`*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"46f2da24-0add-4be0-b375-ed26476f0f4f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"WordCounts", "@", 
   RowBox[{"DeleteStopwords", "@", 
    RowBox[{"TextString", "@", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Select", "[", 
       RowBox[{"PJPSentences", ",", 
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"{", "\"\<vaccine\>\"", "}"}], "]"}]}], 
       "]"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.824372376781259*^9, 3.82437243859196*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"f9b8119a-49a0-4a48-824f-5b29749b3843"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "vaccine" -> 94, "vaccines" -> 36, "people" -> 23, "vaccine." -> 23, 
       "getting" -> 17, "got" -> 14, "new" -> 12, "week" -> 12, "like" -> 12, 
       "despite" -> 12, "health" -> 11, "covid" -> 10, "news" -> 10, "think" -> 
       9, "friends" -> 9, "end" -> 9, "second" -> 8, "hope" -> 8, "know" -> 8,
        "received" -> 7, "\[CloseCurlyQuote]m" -> 7, "going" -> 7, "pandemic" -> 
       7, "year" -> 7, "able" -> 7, "care" -> 7, "effective" -> 7, 
       "available" -> 7, "shot" -> 6, "call" -> 6, "months" -> 6, "today" -> 
       6, "%" -> 6, "home" -> 6, "just" -> 5, "appointment" -> 5, "dose" -> 5,
        "make" -> 5, "vaccines." -> 5, "2" -> 5, "long" -> 5, "family" -> 5, 
       "wanting" -> 5, "social" -> 5, "actually" -> 4, "transportation" -> 4, 
       "shots" -> 4, "teachers" -> 4, "system" -> 4, "roll" -> 4, "life" -> 4,
        "time" -> 4, "receive" -> 4, "nursing" -> 4, "workers" -> 4, "light" -> 
       4, "good" -> 4, "really" -> 4, "age" -> 4, "becoming" -> 4, "feeling" -> 
       4, "wondering" -> 4, "public" -> 4, "safe" -> 4, "\[CloseCurlyQuote]s" -> 
       4, "felt" -> 4, "needs" -> 4, "comes" -> 4, "beginning" -> 4, "weeks" -> 
       3, "alternate" -> 3, "gotten" -> 3, "hospital" -> 3, "feel" -> 3, 
       "jan" -> 3, "finally" -> 3, "appointments" -> 3, "said" -> 3, "supply" -> 
       3, "need" -> 3, "picture" -> 3, "available." -> 3, "south" -> 3, 
       "husband" -> 3, "longer" -> 3, "brother" -> 3, "yesterday" -> 3, 
       "wish" -> 3, "friend" -> 3, "line" -> 3, "wait" -> 3, "taking" -> 3, 
       "doses" -> 3, "list" -> 3, "eligible" -> 3, "daughter" -> 3, "work" -> 
       3, "stop" -> 3, "tested" -> 3, "staff" -> 3, "mother" -> 3, "moderna" -> 
       3, "six" -> 3, "maybe" -> 3, "hoping" -> 3, "given" -> 3, "slowly" -> 
       3, "slow" -> 3, "phase" -> 3, "mom" -> 3, "feels" -> 3, "way" -> 3, 
       "distribution" -> 3, "want" -> 3, "come" -> 3, "order" -> 3, "old" -> 
       3, "soon" -> 3, "happen" -> 3, "open" -> 3, "trying" -> 3, "cold" -> 3,
        "coming" -> 3, "covid-19" -> 3, "change" -> 3, "country" -> 3, "idea" -> 
       3, "spring" -> 3, "week." -> 2, "program" -> 2, "shot." -> 2, "big" -> 
       2, "struggle" -> 2, "guy" -> 2, "looking" -> 2, "threatened" -> 2, "6" -> 
       2, "fact" -> 2, "vaccination" -> 2, "studio" -> 2, "instructor" -> 2, 
       "square" -> 2, "crazy" -> 2, "called" -> 2, "person" -> 2, "works" -> 
       2, "grandma" -> 2, "grandparents" -> 2, "massachusetts." -> 2, 
       "pathetic" -> 2, "scheduled" -> 2, "j" -> 2, "clinics" -> 2, "neither" -> 
       2, "providers" -> 2, "state" -> 2, "doctors" -> 2, "sending" -> 2, 
       "grateful" -> 2, "virus" -> 2, "uk" -> 2, "reason" -> 2, "past" -> 2, 
       "meanwhile" -> 2, "deep" -> 2, "carolina" -> 2, "dose." -> 2, 
       "teacher" -> 2, "grandmother" -> 2, "compromised" -> 2, "re" -> 2, 
       "president" -> 2, "unfortunately" -> 2, "properly" -> 2, "included" -> 
       2, "totally" -> 2, "jersey" -> 2, "parents" -> 2, "phone" -> 2, 
       "hours" -> 2, "legal" -> 2, "praying" -> 2, "dad" -> 2, "reports" -> 2,
        "thing" -> 2, "later" -> 2, "turn" -> 2, "away" -> 2, "relief" -> 2, 
       "sometimes" -> 2, "strange" -> 2, "adult" -> 2, "healthy" -> 2, 
       "rollout" -> 2, "scary" -> 2, "short" -> 2, "administer" -> 2, 
       "realization" -> 2, "far" -> 2, "biden" -> 2, "positive." -> 2, 
       "thinks" -> 2, "israel" -> 2, "gave" -> 2, "head" -> 2, "nurse" -> 2, 
       "pfizer" -> 2, "developed" -> 2, "rolling" -> 2, "yes" -> 2, 
       "distribution." -> 2, "worker" -> 2, "successful" -> 2, "protected" -> 
       2, "happy" -> 2, "started" -> 2, "arms" -> 2, "arrived" -> 2, "needed" -> 
       2, "hopeful" -> 2, "people." -> 2, "ahead" -> 2, "county" -> 2, 
       "reality" -> 2, "flu" -> 2, "sense" -> 2, "went" -> 2, "true" -> 2, 
       "theories" -> 2, "conspiracy" -> 2, "number" -> 2, "probably" -> 2, 
       "response" -> 2, "e." -> 2, "color" -> 2, "groups" -> 2, "thoughts" -> 
       2, "priority" -> 2, "distancing" -> 2, "separation" -> 2, 
       "availability" -> 2, "working" -> 2, "obtaining" -> 1, "disorganized" -> 
       1, "quite" -> 1, "situation" -> 1, "present" -> 1, "strong" -> 1, 
       "counts" -> 1, "blood" -> 1, "important" -> 1, "immune" -> 1, 
       "vulnerability" -> 1, "efforts" -> 1, "fruitless" -> 1, "widely" -> 1, 
       "yearlong" -> 1, "unreal" -> 1, "begin" -> 1, "possible." -> 1, "2nd" -> 
       1, "father" -> 1, "bring" -> 1, "relates" -> 1, "accomplishment" -> 1, 
       "week's" -> 1, "bus" -> 1, "apartment" -> 1, "walks" -> 1, "alive" -> 
       1, "photo" -> 1, "scared" -> 1, "65" -> 1, "racist" -> 1, "classist" -> 
       1, "skeptical" -> 1, "patience" -> 1, "lost" -> 1, "vaccinate." -> 1, 
       "stringent" -> 1, "pharmacies" -> 1, "ton" -> 1, "republican" -> 1, 
       "governor" -> 1, "poor" -> 1, "tons" -> 1, "holding" -> 1, "equitable" -> 
       1, "effort" -> 1, "progressive" -> 1, "depressing." -> 1, "messiness" -> 
       1, "winter" -> 1, "protect" -> 1, "shitty" -> 1, "ugh" -> 1, "bottom" -> 
       1, "set" -> 1, "tomorrow." -> 1, "register" -> 1, "help" -> 1, "try" -> 
       1, "online" -> 1, "ability" -> 1, "lottery." -> 1, "winning" -> 1, 
       "game" -> 1, "cruel" -> 1, "registering" -> 1, "took" -> 1, 
       "mother-in-law" -> 1, "companion" -> 1, "massachusetts" -> 1, "corona" -> 
       1, "supply." -> 1, "limited" -> 1, "fight" -> 1, "thankfully" -> 1, 
       "compared" -> 1, "canada" -> 1, "lack" -> 1, "commenting" -> 1, 
       "continually" -> 1, "wife" -> 1, "supposed" -> 1, "material" -> 1, 
       "infectious" -> 1, "contact" -> 1, "direct" -> 1, "vaccinated" -> 1, 
       "happening" -> 1, "frustrating" -> 1, "statistics" -> 1, 
       "inoculations" -> 1, "emergency" -> 1, "left" -> 1, "hospitals" -> 1, 
       "patient." -> 1, "inoculation" -> 1, "kept" -> 1, "jeopardy" -> 1, 
       "electrical" -> 1, "terms" -> 1, "problem" -> 1, "real" -> 1, 
       "success" -> 1, "ran" -> 1, "taken" -> 1, "operating" -> 1, "tent" -> 
       1, "delaying" -> 1, "festival" -> 1, "younger" -> 1, "including" -> 1, 
       "60" -> 1, "relatives" -> 1, "resolve" -> 1, "feet" -> 1, "mask" -> 1, 
       "meeting" -> 1, "exceptional" -> 1, "message" -> 1, "laughed" -> 1, 
       "criticized" -> 1, "car." -> 1, "don\[CloseCurlyQuote]t" -> 1, 
       "acknowledging" -> 1, "tradition" -> 1, "minus" -> 1, "transition" -> 
       1, "smooth" -> 1, "20th" -> 1, "eventually" -> 1, "anytime" -> 1, 
       "explode" -> 1, "universe" -> 1, "seeped" -> 1, "hold" -> 1, "grabbed" -> 
       1, "whatever" -> 1, "scouring" -> 1, "mundane" -> 1, "trimmed" -> 1, 
       "hooves" -> 1, "cows" -> 1, "videos" -> 1, "watching" -> 1, 
       "connected" -> 1, "aren\[CloseCurlyQuote]t" -> 1, "slots" -> 1, 
       "websites" -> 1, "sign-ups" -> 1, "email" -> 1, "continues" -> 1, 
       "frustration" -> 1, "75" -> 1, "dangerous." -> 1, "overblown" -> 1, 
       "qanon" -> 1, "believe" -> 1, "conservatives" -> 1, "type" -> 1, 
       "involved" -> 1, "risk" -> 1, "stupid" -> 1, "colossally" -> 1, 
       "restrictions" -> 1, "classes" -> 1, "shots." -> 1, "await" -> 1, 
       "day" -> 1, "shining" -> 1, "truth" -> 1, "clarity" -> 1, "rest" -> 1, 
       "place" -> 1, "stuff" -> 1, "washington" -> 1, "pretenses." -> 1, 
       "honest" -> 1, "pushing" -> 1, "dad's" -> 1, "rabin" -> 1, "waiting" -> 
       1, "forward" -> 1, "looked" -> 1, "30" -> 1, "friend's" -> 1, 
       "administered." -> 1, "generator" -> 1, "there'd" -> 1, "blackout" -> 
       1, "shut" -> 1, "freezers" -> 1, "university" -> 1, "seattle" -> 1, 
       "cars" -> 1, "lines" -> 1, "wandered" -> 1, "traffic" -> 1, "stuck" -> 
       1, "oregon" -> 1, "transporting" -> 1, "heard" -> 1, "place." -> 1, 
       "stories" -> 1, "whew" -> 1, "seniors" -> 1, "knew" -> 1, "kid" -> 1, 
       "wrong" -> 1, "love" -> 1, "uncomfortable." -> 1, "distributed" -> 1, 
       "site." -> 1, "drive" -> 1, "opposed" -> 1, "afterwards" -> 1, 
       "monitor" -> 1, "closely" -> 1, "grown" -> 1, "eggs" -> 1, "allergic" -> 
       1, "grandpa" -> 1, "thrilled" -> 1, "tense." -> 1, "confirmed" -> 1, 
       "pick" -> 1, "developing" -> 1, "lot" -> 1, "department" -> 1, 
       "smoothly" -> 1, "glad" -> 1, "deaths." -> 1, "block" -> 1, "50" -> 1, 
       "reminded" -> 1, "variant" -> 1, "transmissible" -> 1, "57" -> 1, 
       "pfizer's" -> 1, "95" -> 1, "vs" -> 1, "infection" -> 1, "blocking" -> 
       1, "74" -> 1, "refrigeration" -> 1, "29th" -> 1, "announces" -> 1, 
       "schedule" -> 1, "plan" -> 1, "issue" -> 1, "key" -> 1, "unclear." -> 
       1, "held" -> 1, "unused" -> 1, "refrigerators" -> 1, "sitting" -> 1, 
       "jibes" -> 1, "possible" -> 1, "checking" -> 1, "entered" -> 1, "mass" -> 
       1, "group." -> 1, "55" -> 1, "saving" -> 1, "unqualified" -> 1, 
       "200,000" -> 1, "ordered" -> 1, "minister" -> 1, "german" -> 1, 
       "noted" -> 1, "biologist" -> 1, "redemsivir" -> 1, "main" -> 1, 
       "suggestions" -> 1, "helpful" -> 1, "request" -> 1, "sourcing" -> 1, 
       "crowd" -> 1, "nights" -> 1, "especially" -> 1, "crazy." -> 1, 
       "playing" -> 1, "appropriate" -> 1, "eu" -> 1, "right" -> 1, "chance." -> 
       1, "fighting" -> 1, "variants" -> 1, "worrying" -> 1, "challenges" -> 
       1, "relax" -> 1, "test" -> 1, "negative" -> 1, "enter" -> 1, 
       "boarders" -> 1, "closed" -> 1, "spreading" -> 1, "whatsoever" -> 1, 
       "movement" -> 1, "lockdown" -> 1, "bigger" -> 1, "lies" -> 1, "63" -> 
       1, "sister-in-law" -> 1, "90-year-old" -> 1, "nativetexas" -> 1, 
       "hand." -> 1, "arises" -> 1, "group" -> 1, "pray" -> 1, "shake" -> 1, 
       "sigh" -> 1, "36" -> 1, "ranks" -> 1, "associated" -> 1, "selected" -> 
       1, "location" -> 1, "sites" -> 1, "locator" -> 1, "vax" -> 1, 
       "utilize" -> 1, "drive." -> 1, "fallen" -> 1, "here" -> 1, "surprises" -> 
       1, "states" -> 1, "east" -> 1, "tightly" -> 1, "wedged" -> 1, "reside" -> 
       1, "damn" -> 1, "interact" -> 1, "classroom" -> 1, "smokers" -> 1, 
       "changed" -> 1, "words" -> 1, "65-year-old" -> 1, "96-year-old" -> 1, 
       "usa" -> 1, "simply" -> 1, "terrified" -> 1, "roof" -> 1, "anxiety" -> 
       1, "work." -> 1, "economy" -> 1, "masks" -> 1, "horizon." -> 1, 
       "month" -> 1, "lifted." -> 1, "spirits" -> 1, "tunnel" -> 1, 
       "vaccined" -> 1, "folks" -> 1, "worry" -> 1, "booster" -> 1, "push" -> 
       1, "matter" -> 1, "doesn\[CloseCurlyQuote]t" -> 1, "says" -> 1, "eric" -> 
       1, "1a." -> 1, "1b" -> 1, "registered" -> 1, "\[CloseCurlyQuote]ve" -> 
       1, "notice" -> 1, "caution" -> 1, "heartrending" -> 1, "nine" -> 1, 
       "coronavirus." -> 1, "positive" -> 1, "telling" -> 1, "residence" -> 1,
        "nurses" -> 1, "rang" -> 1, "philadelphia" -> 1, "join" -> 1, 
       "waited" -> 1, "virgina" -> 1, "aunt" -> 1, "chatting" -> 1, 
       "scotland" -> 1, "perth" -> 1, "weekly" -> 1, "opening" -> 1, 
       "guardian" -> 1, "disabled" -> 1, "sign" -> 1, "form" -> 1, 
       "permission" -> 1, "afternoon" -> 1, "quick." -> 1, "improvement" -> 1,
        "eventual" -> 1, "anew" -> 1, "page" -> 1, "turning" -> 1, 
       "vaccinated." -> 1, "huge" -> 1, "copd" -> 1, "february" -> 1, "slow." -> 
       1, "mess" -> 1, "crisis" -> 1, "currently" -> 1, "la" -> 1, "job" -> 1,
        "start" -> 1, "hopefully" -> 1, "rules" -> 1, "follow" -> 1, 
       "selfish" -> 1, "xmas" -> 1, "relieved." -> 1, "sister" -> 1, "care." -> 
       1, "standard" -> 1, "rooms" -> 1, "handled" -> 1, "patients" -> 1, 
       "beds" -> 1, "icu" -> 1, "physician" -> 1, "intensivist" -> 1, 
       "angeles" -> 1, "los" -> 1, "unclear" -> 1, "current" -> 1, 
       "effectivity" -> 1, "means" -> 1, "best" -> 1, "guarantee" -> 1, 
       "live." -> 1, "inmate" -> 1, "prison" -> 1, "resident" -> 1, 
       "essential" -> 1, "certainly" -> 1, "instead" -> 1, "covid." -> 1, 
       "antibodies" -> 1, "develop" -> 1, "fever" -> 1, "soreness" -> 1, 
       "bit" -> 1, "little" -> 1, "option" -> 1, "likely" -> 1, 
       "statistically" -> 1, "anxiety." -> 1, "protection" -> 1, "level" -> 1,
        "additional" -> 1, "offering" -> 1, "soon." -> 1, "zoom" -> 1, "talk" -> 
       1, "infiltrated" -> 1, "kind" -> 1, "program." -> 1, "attention" -> 1, 
       "closest" -> 1, "paying" -> 1, "young" -> 1, "assumed" -> 1, 
       "concrete." -> 1, "makes" -> 1, "practicum" -> 1, "final" -> 1, 
       "student" -> 1, "president." -> 1, "declare" -> 1, "congress" -> 1, 
       "vote" -> 1, "certification" -> 1, "elections" -> 1, "georgia" -> 1, 
       "numbers" -> 1, "case" -> 1, "increasing" -> 1, "upset" -> 1, 
       "mutation." -> 1, "staffed." -> 1, "majorly" -> 1, "branches" -> 1, 
       "different" -> 1, "gone" -> 1, "quit" -> 1, "retired" -> 1, "library" -> 
       1, "death" -> 1, "worked" -> 1, "shipment" -> 1, "problems" -> 1, 
       "countless" -> 1, "faded" -> 1, "quickly" -> 1, "bright" -> 1, 
       "hopeful." -> 1, "receiving" -> 1, "share" -> 1, "write" -> 1, 
       "appreciate" -> 1, "surprised" -> 1, "pressing" -> 1, "aspects" -> 1, 
       "citizens" -> 1, "fellow" -> 1, "neighbors" -> 1, "members" -> 1, 
       "alongside" -> 1, "distance" -> 1, "appreciative" -> 1, "equally" -> 1,
        "unscathed" -> 1, "emerged" -> 1, "thankful" -> 1, "extremely" -> 1, 
       "charge" -> 1, "turd" -> 1, "unlike" -> 1, "benefit" -> 1, 
       "leadership" -> 1, "organized" -> 1, "house" -> 1, "white" -> 1, 
       "dying" -> 1, "caseloads" -> 1, "stay" -> 1, "post-holiday" -> 1, 
       "residents" -> 1, "monday" -> 1, "line." -> 1, "jump" -> 1, "pace" -> 
       1, "snail's" -> 1, "rolled" -> 1, "colleague" -> 1, "60-year" -> 1, 
       "homes" -> 1, "health-care" -> 1, "supplies" -> 1, "collapsed" -> 1, 
       "government" -> 1, "coalition" -> 1, "dysfunctions" -> 1, "later." -> 
       1, "days" -> 1, "tv" -> 1, "publically" -> 1, "fauci" -> 1, "anthony" -> 
       1, "dr." -> 1, "else" -> 1, "speech" -> 1, "pep" -> 1, "accent" -> 1, 
       "jamaican" -> 1, "familiar" -> 1, "lovely" -> 1, "center" -> 1, 
       "medical" -> 1, "jewish" -> 1, "island" -> 1, "northwell" -> 1, 
       "lindsay" -> 1, "sandra" -> 1, "critical" -> 1, "born" -> 1, "jamaica" -> 
       1, "bio-ntech" -> 1, "technology" -> 1, "couples" -> 1, 
       "turkish-german" -> 1, "via" -> 1, "manufactured" -> 1, "belgium" -> 1,
        "delivered" -> 1, "u.s." -> 1, "pfizer-bio-ntech" -> 1, "control" -> 
       1, "gives" -> 1, "rna" -> 1, "optimism" -> 1, "tunnel." -> 1, 
       "molasses" -> 1, "road" -> 1, "healthcare" -> 1, "workers." -> 1, "co" -> 
       1, "awful." -> 1, "saying" -> 1, "everyone's" -> 1, "people's" -> 1, 
       "making" -> 1, "ones" -> 1, "loved" -> 1, "wrap" -> 1, "connecticut." -> 
       1, "vaccinations." -> 1, "successive" -> 1, "storage" -> 1, "special" -> 
       1, "funded" -> 1, "haven\[CloseCurlyQuote]t" -> 1, "funds" -> 1, 
       "sight." -> 1, "welcome" -> 1, "milestone" -> 1, "trucks" -> 1, 
       "seeing" -> 1, "difference" -> 1, "lord" -> 1, "praise" -> 1, "time." -> 
       1, "deaths" -> 1, "infections" -> 1, "flood" -> 1, "stem" -> 1, 
       "it'll" -> 1, "mean" -> 1, "survivor" -> 1, "participate" -> 1, 
       "booked" -> 1, "15" -> 1, "found" -> 1, "million" -> 1, "280" -> 1, 
       "son" -> 1, "21" -> 1, "fo" -> 1, "front" -> 1, "approximately" -> 1, 
       "tell" -> 1, "status" -> 1, "profession" -> 1, "calculator" -> 1, 
       "nyt" -> 1, "priorities" -> 1, "conditions" -> 1, "optimistic" -> 1, 
       "rate" -> 1, "effectiveness" -> 1, "90" -> 1, "1" -> 1, "efficacy." -> 
       1, "94" -> 1, "excellent" -> 1, "beneath" -> 1, "rages" -> 1, "leads" -> 
       1, "depends" -> 1, "borders" -> 1, "policies" -> 1, "announcing" -> 1, 
       "democrats" -> 1, "sea." -> 1, "streets" -> 1, "gloomy" -> 1, 
       "still-empty" -> 1, "detour" -> 1, "lengthen." -> 1, "shadows" -> 1, 
       "watch" -> 1, "fence" -> 1, "lean" -> 1, "serenity" -> 1, "calm" -> 1, 
       "beauty" -> 1, "stillness" -> 1, "expected" -> 1, "flew" -> 1, 
       "autumn" -> 1, "summer" -> 1, "figure" -> 1, "snow" -> 1, "ready" -> 1,
        "succumb" -> 1, "fatal" -> 1, "prove" -> 1, "store" -> 1, "grocery" -> 
       1, "trip" -> 1, "hug" -> 1, "cure" -> 1, "cases" -> 1, "spike" -> 1, 
       "weather" -> 1, "hints" -> 1, "sky" -> 1, "gray" -> 1, "cloudy" -> 1, 
       "2022." -> 1, "measures" -> 1, "preventative" -> 1, "efficacy" -> 1, 
       "depending" -> 1, "support" -> 1, "free" -> 1, "clinic" -> 1, "local" -> 
       1, "walk" -> 1, "was" -> 1, "truly" -> 1, "understood" -> 1, 
       "americans" -> 1, "sure" -> 1, "pretty" -> 1, "funerals" -> 1, 
       "weddings" -> 1, "festivals" -> 1, "conventions" -> 1, "gatherings" -> 
       1, "large" -> 1, "attend" -> 1, "ravages" -> 1, "suffer" -> 1, "die" -> 
       1, "doorstep" -> 1, "filled" -> 1, "jobs" -> 1, "school" -> 1, 
       "children" -> 1, "street" -> 1, "walking" -> 1, "safety" -> 1, 
       "unlikely" -> 1, "shared" -> 1, "ideas" -> 1, "daily" -> 1, 
       "occurring" -> 1, "politicians" -> 1, "actual" -> 1, 
       "people\[CloseCurlyQuote]s" -> 1, "grids" -> 1, "betting" -> 1, "2021" -> 
       1, "talking" -> 1], "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[86.4], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 979], "Meta" -> 
     Association["ID" -> 169552650800638], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[86.4], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 979], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     979, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["vaccine", 
                  Style[
                  "vaccine", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["vaccine"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["vaccine"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["vaccine"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["vaccines", 
                  Style[
                  "vaccines", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["vaccines"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["vaccines"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["vaccines"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["people", 
                  Style[
                  "people", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["people"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["people"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["people"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["vaccine.", 
                  Style[
                  "vaccine.", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["vaccine."]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["vaccine."]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["vaccine."]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["getting", 
                  Style[
                  "getting", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["getting"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["getting"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["getting"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["got", 
                  Style[
                  "got", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["got"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["got"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["got"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["new", 
                  Style[
                  "new", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["new"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["new"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["new"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["week", 
                  Style[
                  "week", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["week"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["week"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["week"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["like", 
                  Style[
                  "like", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["like"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["like"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["like"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["despite", 
                  Style[
                  "despite", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["despite"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["despite"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["despite"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["health", 
                  Style[
                  "health", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["health"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["health"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["health"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["covid", 
                  Style[
                  "covid", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["covid"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["covid"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["covid"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["news", 
                  Style[
                  "news", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["news"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["news"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["news"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["think", 
                  Style[
                  "think", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["think"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["think"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["think"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["friends", 
                  Style[
                  "friends", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["friends"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["friends"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["friends"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["end", 
                  Style[
                  "end", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["end"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["end"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["end"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["second", 
                  Style[
                  "second", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["second"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["second"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["second"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["hope", 
                  Style[
                  "hope", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["hope"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hope"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hope"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["know", 
                  Style[
                  "know", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["know"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["know"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["know"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["received", 
                  Style[
                  "received", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["received"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["received"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["received"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 979, 1], {1, 979 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 979, 1], {1, 979 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    979, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    979, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 979, 1], {1, 979 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 979, 1], {1, 979 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{163., {210.85052490234375`, 215.14947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{163., {210.85052490234375`, 215.14947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8243724464969997`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"30429818-f112-446d-8e4b-2f2374a8e8a1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"WordsInSentences", "[", 
   RowBox[{"Text_", ",", "Word_"}], "]"}], ":=", 
  RowBox[{"Dataset", "@", 
   RowBox[{"WordCounts", "@", 
    RowBox[{"DeleteStopwords", "@", 
     RowBox[{"TextString", "@", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Select", "[", 
        RowBox[{"Text", ",", 
         RowBox[{"StringContainsQ", "[", 
          RowBox[{"{", "Word", "}"}], "]"}]}], "]"}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.82437248490275*^9, 3.824372528504094*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"13f31a87-1a52-4e8a-a0f5-d5e6057787e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordsInSentences", "[", 
  RowBox[{"PJPSentences", ",", "\"\<feel\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.82437253814077*^9, 3.824372579315331*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"fd163ad0-221d-4025-af20-afd8d86f6c5d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "feel" -> 237, "like" -> 126, "feels" -> 84, "feeling" -> 83, "just" -> 
       37, "time" -> 35, "people" -> 35, "really" -> 32, "going" -> 26, 
       "week" -> 23, "things" -> 22, "know" -> 22, "day" -> 21, "able" -> 20, 
       "home" -> 20, "feelings" -> 19, "friends" -> 17, "new" -> 16, 
       "\[CloseCurlyQuote]s" -> 16, "getting" -> 16, "year" -> 15, "hard" -> 
       15, "way" -> 14, "pandemic" -> 14, "life" -> 14, "right" -> 14, 
       "makes" -> 14, "despite" -> 13, "care" -> 13, "make" -> 12, "days" -> 
       12, "sense" -> 12, "lot" -> 12, "work" -> 11, "family" -> 11, "good" -> 
       11, "bad" -> 11, "\[CloseCurlyQuote]m" -> 11, "news" -> 11, "sad" -> 
       10, "world" -> 10, "stay" -> 10, "trying" -> 10, "got" -> 9, "better" -> 
       9, "hope" -> 9, "anxious" -> 9, "started" -> 9, "covid" -> 9, 
       "working" -> 9, "virus" -> 9, "left" -> 9, "safe" -> 9, "country" -> 9,
        "end" -> 8, "christmas" -> 8, "little" -> 8, "wanting" -> 8, "loss" -> 
       8, "think" -> 8, "need" -> 8, "maybe" -> 8, "school" -> 8, "lucky" -> 
       8, "angry" -> 8, "time." -> 8, "due" -> 7, "different" -> 7, "live" -> 
       7, "house" -> 7, "\[CloseCurlyQuote]ve" -> 7, "anxiety" -> 7, 
       "depressed" -> 7, "come" -> 7, "found" -> 7, "normal" -> 7, "outside" -> 
       7, "history" -> 6, "vaccine" -> 6, "beautiful" -> 6, "week." -> 6, 
       "connected" -> 6, "months" -> 6, "today" -> 6, "person" -> 6, 
       "especially" -> 6, "human" -> 6, "scared" -> 6, "sick" -> 6, "else" -> 
       6, "thing" -> 6, "guilty" -> 6, "job" -> 6, "leave" -> 6, "used" -> 6, 
       "want" -> 6, "social" -> 5, "worry" -> 5, "saying" -> 5, "nearly" -> 5,
        "staying" -> 5, "love" -> 5, "hold" -> 5, "election" -> 5, "past" -> 
       5, "wondering" -> 5, "change" -> 5, "ready" -> 5, 
       "don\[CloseCurlyQuote]t" -> 5, "bit" -> 5, "food" -> 5, "couple" -> 5, 
       "important" -> 5, "making" -> 5, "trump" -> 5, "kids" -> 5, "wish" -> 
       5, "beginning" -> 5, "weeks" -> 5, "isolated" -> 5, "reason" -> 5, 
       "actually" -> 5, "taking" -> 5, "seeing" -> 5, "easy" -> 5, "hours" -> 
       5, "crazy" -> 5, "close" -> 5, "level" -> 5, "ones" -> 5, "loved" -> 5,
        "health" -> 5, "second" -> 5, "great" -> 5, "longer" -> 5, "gotten" -> 
       5, "long" -> 5, "living" -> 5, "miss" -> 5, "try" -> 5, "let" -> 5, 
       "coming" -> 5, "tell" -> 5, "die" -> 4, "told" -> 4, "could've" -> 4, 
       "help" -> 4, "away" -> 4, "happy" -> 4, "express" -> 4, "say" -> 4, 
       "moving" -> 4, "stress" -> 4, "ways" -> 4, "t" -> 4, "nation" -> 4, 
       "face" -> 4, "birthday" -> 4, "far" -> 4, "closer" -> 4, "forth" -> 4, 
       "real" -> 4, "felt" -> 4, "hand" -> 4, "watch" -> 4, "writing" -> 4, 
       "teaching" -> 4, "turn" -> 4, "worried" -> 4, "beauty" -> 4, "matter" -> 
       4, "death" -> 4, "mom" -> 4, "grateful" -> 4, "expected" -> 4, 
       "hopeless" -> 4, "waiting" -> 4, "scheduled" -> 4, "reminds" -> 4, 
       "day." -> 4, "march" -> 4, "project" -> 4, "situation" -> 4, 
       "possible" -> 4, "morning" -> 4, "totally" -> 4, "room" -> 4, 
       "possibly" -> 4, "home." -> 4, "nervous" -> 4, "excited" -> 4, "avoid" -> 
       4, "sometimes" -> 4, "years" -> 4, "weird" -> 4, "believe" -> 4, 
       "head" -> 4, "best" -> 4, "tired" -> 4, "peace" -> 4, "thoughts." -> 4,
        "experiences" -> 4, "blah" -> 3, "group" -> 3, "shot" -> 3, 
       "stressed" -> 3, "drop" -> 3, "change." -> 3, "needs" -> 3, "capitol" -> 
       3, "lost" -> 3, "quarantine" -> 3, "support" -> 3, "fact" -> 3, "zoom" -> 
       3, "cancer" -> 3, "parents" -> 3, "run" -> 3, "place" -> 3, "looking" -> 
       3, "swimming" -> 3, "dream" -> 3, "cover" -> 3, "knowing" -> 3, 
       "feelings." -> 3, "sad." -> 3, "thanksgiving" -> 3, "excitement" -> 3, 
       "thank" -> 3, "okay" -> 3, "general" -> 3, "course" -> 3, "depression" -> 
       3, "lockdown" -> 3, "super" -> 3, "reading" -> 3, "emotions" -> 3, 
       "flew" -> 3, "deal" -> 3, "look" -> 3, "small" -> 3, "pain" -> 3, 
       "kinds" -> 3, "gives" -> 3, "grief" -> 3, "cat" -> 3, "safer" -> 3, 
       "entire" -> 3, "goes" -> 3, "learn" -> 3, "pretty" -> 3, "energy" -> 3,
        "moved" -> 3, "holiday" -> 3, "completely" -> 3, "times" -> 3, 
       "worker" -> 3, "option" -> 3, "losing" -> 3, "helpless" -> 3, 
       "missing" -> 3, "window" -> 3, "certain" -> 3, "pick" -> 3, "tension" -> 
       3, "building" -> 3, "president" -> 3, "college" -> 3, "positive" -> 3, 
       "outdoor" -> 3, "summer" -> 3, "empty" -> 3, "mental" -> 3, "black" -> 
       3, "use" -> 3, "keeps" -> 3, "read" -> 3, "recently" -> 3, "point" -> 
       3, "lots" -> 3, "went" -> 3, "missed" -> 3, "quite" -> 3, "normally" -> 
       3, "lonely" -> 3, "masks" -> 3, "inside" -> 3, "thoughts" -> 3, "test" -> 
       3, "kept" -> 3, "affected" -> 3, "needed" -> 3, "order" -> 3, 
       "trapped" -> 3, "cold" -> 3, "sadness" -> 3, "month" -> 3, "tuesday" -> 
       3, "write" -> 3, "campus" -> 3, "office" -> 3, "numbers" -> 3, "hard." -> 
       3, "risk" -> 3, "worst" -> 3, "wanted" -> 3, "sorry" -> 3, "supposed" -> 
       3, "walking" -> 3, "lately" -> 3, "happening" -> 3, "negative" -> 3, 
       "months." -> 3, "truly" -> 3, "media" -> 2, "blank" -> 2, "circles" -> 
       2, "infections" -> 2, "towards" -> 2, "wave" -> 2, "finding" -> 2, 
       "skills" -> 2, "theatre" -> 2, "response" -> 2, "meeting" -> 2, 
       "forget" -> 2, "precious" -> 2, "e.g." -> 2, "studies" -> 2, "freely" -> 
       2, "case." -> 2, "transportation" -> 2, "students" -> 2, "opportunity" -> 
       2, "forever" -> 2, "honestly" -> 2, "lab" -> 2, "medical" -> 2, 
       "variants" -> 2, "worrying" -> 2, "hopeful" -> 2, "reasons" -> 2, 
       "art" -> 2, "accomplish" -> 2, "10" -> 2, "impossible" -> 2, "crossed" -> 
       2, "perth" -> 2, "comes" -> 2, "late" -> 2, "1" -> 2, "talking" -> 2, 
       "things." -> 2, "turned" -> 2, "rules" -> 2, "continue" -> 2, 
       "comfortable" -> 2, "distancing" -> 2, "helps" -> 2, "pandemic." -> 2, 
       "hey" -> 2, "brother" -> 2, "position" -> 2, "aunt" -> 2, "mind" -> 2, 
       "personally" -> 2, "overcome" -> 2, "fiance's" -> 2, "session" -> 2, 
       "share" -> 2, "taken" -> 2, "minute" -> 2, "wonder" -> 2, "s" -> 2, 
       "grow" -> 2, "alive" -> 2, "lights" -> 2, "night" -> 2, "flying" -> 2, 
       "died" -> 2, "passing." -> 2, "begin" -> 2, "blue" -> 2, "worse" -> 2, 
       "meet" -> 2, "stuff" -> 2, "angry." -> 2, "people's" -> 2, "vaccines" -> 
       2, "future." -> 2, "words" -> 2, "information" -> 2, "keeping" -> 2, 
       "sustained" -> 2, "starting" -> 2, "distance" -> 2, "deserve" -> 2, 
       "great." -> 2, "weekend" -> 2, "stretched" -> 2, "cooking" -> 2, 
       "mixed" -> 2, "growing" -> 2, "hoping" -> 2, "vaccines." -> 2, "heard" -> 
       2, "god" -> 2, "tested" -> 2, "temperature" -> 2, "experiencing" -> 2, 
       "public" -> 2, "considering" -> 2, "city" -> 2, "activities" -> 2, 
       "fall" -> 2, "gift" -> 2, "allowed" -> 2, "enjoying" -> 2, "cautious" -> 
       2, "deflated" -> 2, "heart" -> 2, "absolutely" -> 2, "pessimistic" -> 
       2, "class" -> 2, "spend" -> 2, "effort" -> 2, "attend" -> 2, 
       "extremely" -> 2, "focus" -> 2, "rest" -> 2, "harder" -> 2, "creating" -> 
       2, "stop" -> 2, "yes" -> 2, "recipe" -> 2, "leader" -> 2, "page" -> 2, 
       "shadows" -> 2, "calm" -> 2, "store" -> 2, "effective" -> 2, 
       "apartment" -> 2, "cookies" -> 2, "baking" -> 2, "anymore." -> 2, 
       "forward" -> 2, "clients" -> 2, "car" -> 2, "front" -> 2, "tried" -> 2,
        "pod" -> 2, "win" -> 2, "extent" -> 2, "climate" -> 2, "related" -> 2,
        "begun" -> 2, "practices" -> 2, "given" -> 2, "using" -> 2, "trip" -> 
       2, "talk" -> 2, "restaurant" -> 2, "divisiveness" -> 2, "knowledge" -> 
       2, "difference" -> 2, "thought" -> 2, "fine" -> 2, "sinking" -> 2, 
       "soon" -> 2, "nightmare" -> 2, "optimistic" -> 2, "figure" -> 2, 
       "stuck." -> 2, "walk" -> 2, "forcing" -> 2, "worse." -> 2, "thinking" -> 
       2, "youtube" -> 2, "sleep" -> 2, "remember" -> 2, "kid" -> 2, "young" -> 
       2, "eternity" -> 2, "polls" -> 2, "vote" -> 2, "u.s." -> 2, "mountain" -> 
       2, "mask" -> 2, "sight" -> 2, "soul" -> 2, "classes" -> 2, "burden" -> 
       2, "son" -> 2, "mine" -> 2, "photo" -> 2, "fighting" -> 2, "busy" -> 2,
        "took" -> 2, "debate" -> 2, "outdoors" -> 2, "genes" -> 2, "white" -> 
       2, "injury" -> 2, "travel" -> 2, "touch" -> 2, 
       "wasn\[CloseCurlyQuote]t" -> 2, "world." -> 2, "zone" -> 2, "near" -> 
       2, "bones" -> 2, "deep" -> 2, "attention" -> 2, "lives" -> 2, 
       "scared." -> 2, "apart" -> 2, "falling" -> 2, "twitter" -> 2, 
       "connect" -> 2, "america" -> 2, "kind" -> 2, "fine." -> 2, "personal" -> 
       2, "main" -> 2, "current" -> 2, "right." -> 2, 
       "doesn\[CloseCurlyQuote]t" -> 2, "good." -> 2, "lighter" -> 2, "area" -> 
       2, "abandoned" -> 2, "health." -> 2, "2" -> 2, "continuing" -> 2, 
       "schools" -> 2, "teachers" -> 2, "innocent" -> 2, "line" -> 2, "june" -> 
       2, "optimistic." -> 2, "neighbors" -> 2, "stuck" -> 2, "12" -> 2, 
       "pages" -> 2, "enjoyed" -> 2, "fishing" -> 2, "fly" -> 2, "saw" -> 2, 
       "single" -> 2, "didn\[CloseCurlyQuote]t" -> 2, "traffic" -> 2, 
       "nearby" -> 2, "probably" -> 2, "happened" -> 2, "terrible" -> 2, 
       "children" -> 2, "evening" -> 2, "spent" -> 2, "friend" -> 2, 
       "serious" -> 2, "dealing" -> 2, "wearing" -> 2, "8" -> 2, "kids." -> 2,
        "move" -> 2, "stores" -> 2, "future" -> 2, "somehow" -> 2, 
       "journaling" -> 2, "state" -> 2, "start" -> 2, "masked" -> 2, "spouse" -> 
       2, "eyes" -> 2, "closing" -> 2, "walls" -> 2, "crowded" -> 2, 
       "department" -> 2, "today." -> 2, "closed" -> 2, "air" -> 2, "greater" -> 
       2, "strong" -> 2, "party" -> 2, "met" -> 2, "edinburgh" -> 2, 
       "freedom" -> 2, "husband" -> 2, "joke" -> 2, "contract" -> 2, "mode" -> 
       2, "constantly" -> 2, "feeling." -> 2, "wild" -> 2, "capture" -> 2, 
       "wishes" -> 2, "corona" -> 2, "forced" -> 2, "degrees" -> 2, "exams" -> 
       2, "covid-19." -> 2, "united" -> 2, "gone" -> 2, "income" -> 2, "low" -> 
       2, "running" -> 2, "despair." -> 2, "lose" -> 2, "big" -> 2, "comfort" -> 
       2, "badly" -> 2, "return" -> 2, "means" -> 2, "escaping" -> 1, 
       "butterflies" -> 1, "showing" -> 1, "citizens" -> 1, "revitalized" -> 
       1, "vaccinated" -> 1, "fringe" -> 1, "passage" -> 1, "routine" -> 1, 
       "organization." -> 1, "unneeded" -> 1, "lungs" -> 1, "suffocating" -> 
       1, "icu" -> 1, "complaining" -> 1, "65" -> 1, "racist" -> 1, 
       "classist" -> 1, "direction." -> 1, "scattered" -> 1, "personally." -> 
       1, "reopen" -> 1, "relieved" -> 1, "incredibly" -> 1, "co-morbidities" -> 
       1, "multiple" -> 1, "left." -> 1, "humanity" -> 1, "faith" -> 1, 
       "destroyed" -> 1, "surrounded" -> 1, "paralyze" -> 1, "virtue" -> 1, 
       "patience" -> 1, "opinions." -> 1, "facts" -> 1, "based" -> 1, 
       "likewise" -> 1, "states." -> 1, "officials" -> 1, "elected" -> 1, 
       "trust" -> 1, "shoulders." -> 1, "neck" -> 1, "jaw" -> 1, "layers" -> 
       1, "nested" -> 1, "subway." -> 1, "underground" -> 1, "spending" -> 1, 
       "rush" -> 1, "observant" -> 1, "grounded" -> 1, "uncomfortable" -> 1, 
       "handle" -> 1, "reaching" -> 1, "reach" -> 1, "dog" -> 1, "hurtling" -> 
       1, "stopped" -> 1, "better." -> 1, "singing" -> 1, "birds" -> 1, 
       "laughing" -> 1, "hearing" -> 1, "vaccinations" -> 1, "difficult." -> 
       1, "rotations." -> 1, "labs" -> 1, "biochemistry" -> 1, "master's" -> 
       1, "reassures" -> 1, "murmur" -> 1, "homes" -> 1, "camaraderie" -> 1, 
       "friendship" -> 1, "akin" -> 1, "hobbies" -> 1, "comforted." -> 1, 
       "circumstances" -> 1, "backgrounds" -> 1, "amazes" -> 1, "play" -> 1, 
       "afterschool" -> 1, "needy" -> 1, "understand" -> 1, "stories." -> 1, 
       "story" -> 1, "interpreting" -> 1, "valuable" -> 1, "raw" -> 1, 
       "scientists" -> 1, "tainted" -> 1, "experiment" -> 1, "researchers" -> 
       1, "results" -> 1, "overview" -> 1, "fun" -> 1, "60s." -> 1, 
       "savoring" -> 1, "meaningless." -> 1, "remote" -> 1, "terrifying" -> 1,
        "ride" -> 1, "physical/mental" -> 1, "prime" -> 1, "sure" -> 1, 
       "day/week/month" -> 1, "hopelessness" -> 1, "overwhelming" -> 1, 
       "daunting." -> 1, "applying" -> 1, "context" -> 1, "heavy" -> 1, 
       "unexpectedly" -> 1, "apply" -> 1, "3" -> 1, "dancer" -> 1, "artist" -> 
       1, "car." -> 1, "realize" -> 1, "appreciation" -> 1, "developed" -> 1, 
       "granted" -> 1, "realized" -> 1, "sword" -> 1, "double-edged" -> 1, 
       "tune" -> 1, "periods" -> 1, "extended" -> 1, "longing" -> 1, 
       "person." -> 1, "clear" -> 1, "1c" -> 1, "educator" -> 1, 
       "technically" -> 1, "counting." -> 1, "11" -> 1, "improve" -> 1, 
       "baby" -> 1, "grieving" -> 1, "available" -> 1, "impersonal" -> 1, 
       "technical" -> 1, "adapting" -> 1, "noticing" -> 1, "outrageous" -> 1, 
       "appropriate" -> 1, "says" -> 1, "remembered" -> 1, "conversation" -> 
       1, "staff" -> 1, "plan" -> 1, "forever." -> 1, "hanging" -> 1, 
       "grimly" -> 1, "ok" -> 1, "confidence" -> 1, "w" -> 1, "struggled" -> 
       1, "homeless" -> 1, "tough" -> 1, "touched." -> 1, "hardly" -> 1, 
       "australia" -> 1, "control" -> 1, "europe" -> 1, "society" -> 1, 
       "adrift" -> 1, "running." -> 1, "except" -> 1, "hot" -> 1, "open" -> 1,
        "windows" -> 1, "colon" -> 1, "likely" -> 1, "family's" -> 1, 
       "colonoscopy" -> 1, "pondering" -> 1, "crisis." -> 1, "despairing" -> 
       1, "f" -> 1, "130" -> 1, "valley" -> 1, "recorded" -> 1, "record" -> 1,
        "everyday." -> 1, "declining" -> 1, "life." -> 1, "terms" -> 1, 
       "wasting" -> 1, "socialize" -> 1, "posted" -> 1, "accounts" -> 1, 
       "narrative" -> 1, "week's" -> 1, "rating" -> 1, "contradictions" -> 1, 
       "fluctuations" -> 1, "analyses" -> 1, "contemporary" -> 1, 
       "inherently" -> 1, "generated" -> 1, "weak" -> 1, "hate" -> 1, 
       "anyway" -> 1, "sweets" -> 1, "arriving" -> 1, "girlfriend" -> 1, 
       "conspired" -> 1, "yesterday" -> 1, "long." -> 1, "errands" -> 1, 
       "snowy" -> 1, "tendencies" -> 1, "sedentary" -> 1, "beard" -> 1, 
       "suits" -> 1, "lifestyle" -> 1, "thin." -> 1, "edge" -> 1, "cutting" -> 
       1, "data" -> 1, "research" -> 1, "implementing" -> 1, "tunnel" -> 1, 
       "light" -> 1, "particularly" -> 1, "movies." -> 1, "older" -> 1, 
       "cooped" -> 1, "connections" -> 1, "tense." -> 1, "confirmed" -> 1, 
       "developing" -> 1, "occupied" -> 1, "attacks" -> 1, "panic" -> 1, 
       "campus." -> 1, "talked" -> 1, "exhaustion." -> 1, "wrote" -> 1, 
       "wife" -> 1, "navigate." -> 1, "contagious" -> 1, "ore" -> 1, 
       "telling" -> 1, "vicissitudes" -> 1, "bubble." -> 1, "comfortable." -> 
       1, "praised" -> 1, "vaccination." -> 1, "philippines" -> 1, 
       "traveling" -> 1, "insistence" -> 1, "husband\[CloseCurlyQuote]s" -> 1,
        "overseas" -> 1, "requirements" -> 1, "increasing" -> 1, 
       "news/statistics" -> 1, "coronavirus" -> 1, "worsening" -> 1, "speak." -> 
       1, "shoe" -> 1, "stock" -> 1, "complacent" -> 1, "becoming" -> 1, 
       "norm" -> 1, "shut" -> 1, "slowly." -> 1, "overwhelmed." -> 1, 
       "afraid." -> 1, "disconnected" -> 1, "direction" -> 1, "lack" -> 1, 
       "slightly" -> 1, "anyways." -> 1, "planned" -> 1, "april" -> 1, "5" -> 
       1, "advice." -> 1, "access" -> 1, "this" -> 1, "background" -> 1, 
       "helpful" -> 1, "problem." -> 1, "directly" -> 1, "stance" -> 1, 
       "tend" -> 1, "chance." -> 1, "supply" -> 1, "challenges" -> 1, 
       "counselor" -> 1, "her" -> 1, "contact" -> 1, "blocked" -> 1, "killed" -> 
       1, "hopeful." -> 1, "brighten" -> 1, "unethical" -> 1, "immoral" -> 1, 
       "ill." -> 1, "inauguration" -> 1, "eve" -> 1, "experiences." -> 1, 
       "draw" -> 1, "choose" -> 1, "fluently" -> 1, "role" -> 1, "connecting" -> 
       1, "universal" -> 1, "interpretation" -> 1, "people." -> 1, "hygiene" -> 
       1, "aware" -> 1, "lives." -> 1, "cost" -> 1, "sudden" -> 1, "amount" -> 
       1, "describe" -> 1, "empty." -> 1, "rage" -> 1, "substantially" -> 1, 
       "list." -> 1, "to" -> 1, "lengthy" -> 1, "long-standing" -> 1, 
       "accomplished" -> 1, "jam." -> 1, "ultimate" -> 1, "mind/body" -> 1, 
       "flood" -> 1, "unspeakable" -> 1, "terrorists" -> 1, "fingertips." -> 
       1, "flight" -> 1, "crisis" -> 1, "blessed" -> 1, "fortunate" -> 1, 
       "centuries" -> 1, "bridges" -> 1, "seat" -> 1, "arthur's" -> 1, 
       "firth" -> 1, "andrew's" -> 1, "st." -> 1, "fife" -> 1, "kingdom" -> 1,
        "dundee" -> 1, "ticked" -> 1, "army" -> 1, "trump's" -> 1, "capital" -> 
       1, "nation's" -> 1, "siege" -> 1, "quick." -> 1, "improvement" -> 1, 
       "eventual" -> 1, "anew" -> 1, "turning" -> 1, "suppose." -> 1, 
       "regard." -> 1, "apologize" -> 1, "clearly" -> 1, "conscience." -> 1, 
       "game" -> 1, "finally" -> 1, "sedition" -> 1, "petrified" -> 1, 
       "complaint" -> 1, "frightens" -> 1, "imagine" -> 1, "relieved." -> 1, 
       "dose" -> 1, "sister" -> 1, "office." -> 1, "networks" -> 1, 
       "relationships" -> 1, "maintaining" -> 1, "hang" -> 1, "stride" -> 1, 
       "hitting" -> 1, "unreal." -> 1, "strolling" -> 1, "maniacs" -> 1, 
       "maga" -> 1, "photos" -> 1, "clips" -> 1, "video" -> 1, "process" -> 1,
        "36" -> 1, "body." -> 1, "viscerally" -> 1, "middle" -> 1, 
       "certainly" -> 1, "tv" -> 1, "eventually" -> 1, "nbc" -> 1, "cnn" -> 1,
        "popped" -> 1, "livestreaming" -> 1, "images" -> 1, "entered" -> 1, 
       "mob" -> 1, "law" -> 1, "bend" -> 1, "laws" -> 1, "norms" -> 1, 
       "reform" -> 1, "legislative" -> 1, "hopefully" -> 1, "majority" -> 1, 
       "mcconnell" -> 1, "mitch" -> 1, "adios" -> 1, "debt" -> 1, "georgia" -> 
       1, "owes" -> 1, "homebound" -> 1, "alas" -> 1, "simmering" -> 1, 
       "picking/cleaning" -> 1, "perpetually" -> 1, "chaos" -> 1, "messy" -> 
       1, "cluttered" -> 1, "value" -> 1, "unequal" -> 1, "immense" -> 1, 
       "short" -> 1, "remotely" -> 1, "attempts" -> 1, "decent" -> 1, 
       "weekshas" -> 1, "pic" -> 1, "na" -> 1, "wan" -> 1, "situation." -> 1, 
       "foot" -> 1, "safely" -> 1, "darkness" -> 1, "daughter" -> 1, "father" -> 
       1, "online" -> 1, "listening" -> 1, "\[CloseCurlyQuote]re" -> 1, 
       "fomo" -> 1, "jump" -> 1, "soil" -> 1, "potting" -> 1, "bag" -> 1, 
       "milk" -> 1, "carton" -> 1, "14" -> 1, "intubated" -> 1, "sanitizer" -> 
       1, "slathered" -> 1, "freaking" -> 1, "break" -> 1, "money" -> 1, 
       "hella" -> 1, "saves" -> 1, "lover" -> 1, "currently" -> 1, "teacher" -> 
       1, "education" -> 1, "jumped" -> 1, "benefits" -> 1, "pouring" -> 1, 
       "broken" -> 1, "presence." -> 1, "ptsd" -> 1, "strategies" -> 1, 
       "coping" -> 1, "manifestations" -> 1, "excitement." -> 1, 
       "anxiousness" -> 1, "tragic" -> 1, "bombarded" -> 1, "productive" -> 1,
        "spring" -> 1, "novel" -> 1, "adventurous" -> 1, "house-bound" -> 1, 
       "2021" -> 1, "heading" -> 1, "vacation" -> 1, "cobble" -> 1, 
       "effortful" -> 1, "pain." -> 1, "surprise" -> 1, "unexpected" -> 1, 
       "causing" -> 1, "sticking" -> 1, "stubbing" -> 1, "crying" -> 1, 
       "slept" -> 1, "g-d" -> 1, "christmas." -> 1, "member" -> 1, "c." -> 1, 
       "sensitive" -> 1, "mid-march" -> 1, "exclusive" -> 1, "mutually" -> 1, 
       "privileged" -> 1, "depart." -> 1, "compelled" -> 1, "prompted" -> 1, 
       "abruptly" -> 1, "ran" -> 1, "portion" -> 1, "agreed" -> 1, "siblings" -> 
       1, "lackluster" -> 1, "minutes" -> 1, "glitches" -> 1, "tech" -> 1, 
       "hoped" -> 1, "love." -> 1, "hugs" -> 1, "needing" -> 1, "talks" -> 1, 
       "biden" -> 1, "president-elect" -> 1, "moments" -> 1, "dreadful" -> 1, 
       "painful" -> 1, "strife" -> 1, "racial" -> 1, "shoulder" -> 1, "tap" -> 
       1, "free" -> 1, "woman" -> 1, "mix" -> 1, "2002" -> 1, "pancreatic" -> 
       1, "handwriting" -> 1, "card" -> 1, "mom's" -> 1, "melancholy" -> 1, 
       "quarantines." -> 1, "carefully" -> 1, "luckily" -> 1, "deeply." -> 1, 
       "away." -> 1, "glimmer" -> 1, "date" -> 1, "decorations" -> 1, 
       "scramble" -> 1, "cancelled" -> 1, "plans" -> 1, "paper" -> 1, 
       "headlines" -> 1, "hurry" -> 1, "space" -> 1, "enclosed" -> 1, "ta" -> 
       1, "c'mon" -> 1, "pharmacy" -> 1, "wait" -> 1, "panicky" -> 1, "hi" -> 
       1, "duck" -> 1, "oh" -> 1, "shift" -> 1, "reaction" -> 1, "partner." -> 
       1, "workplace." -> 1, "furloughs" -> 1, "mandatory" -> 1, 
       "covid-related" -> 1, "messed" -> 1, "paycheck" -> 1, "tangle" -> 1, 
       "peaceful" -> 1, "blast" -> 1, "silence" -> 1, "pools" -> 1, "lit" -> 
       1, "strokes" -> 1, "joy" -> 1, "there" -> 1, "barred" -> 1, "mentally" -> 
       1, "isolation" -> 1, "awful" -> 1, "present" -> 1, "self-centred" -> 1,
        "misery" -> 1, "leads" -> 1, "ungrateful" -> 1, "selfish" -> 1, 
       "personal." -> 1, "loose" -> 1, "illegally" -> 1, "february" -> 1, 
       "realised" -> 1, "sit" -> 1, "stupid" -> 1, "action." -> 1, "compared" -> 
       1, "pale" -> 1, "somehow." -> 1, "different." -> 1, "angel" -> 1, 
       "that" -> 1, "momentos" -> 1, "ornaments" -> 1, "awful." -> 1, 
       "everyone's" -> 1, "arms" -> 1, "line." -> 1, "pay" -> 1, "sex" -> 1, 
       "unprotected" -> 1, "flat" -> 1, "hospitalized." -> 1, "proximity" -> 
       1, "paranoid" -> 1, "alternative" -> 1, "dystopian" -> 1, "utter" -> 1,
        "experts" -> 1, "complete" -> 1, "toll" -> 1, "mounting" -> 1, 
       "constant" -> 1, "effect" -> 1, "pressured" -> 1, "invite" -> 1, 
       "excuse" -> 1, "convenient" -> 1, "measures" -> 1, "sounds" -> 1, 
       "savings." -> 1, "steady" -> 1, "thing." -> 1, "reports" -> 1, "stay." -> 
       1, "hole" -> 1, "rabbit" -> 1, "who've" -> 1, "inevitable" -> 1, 
       "stayed" -> 1, "opposite" -> 1, "spared" -> 1, "september" -> 1, 
       "sometime" -> 1, "missed." -> 1, "greatly" -> 1, "dear" -> 1, "held" -> 
       1, "members" -> 1, "doubly" -> 1, "disconnection" -> 1, "marked" -> 1, 
       "efforts." -> 1, "cares" -> 1, "symptoms" -> 1, "classic" -> 1, "old" -> 
       1, "depressed." -> 1, "drained" -> 1, "anticipation" -> 1, "quick" -> 
       1, "friday" -> 1, "lazy" -> 1, "wednesday" -> 1, "unlike" -> 1, 
       "definitely" -> 1, "community." -> 1, "helped" -> 1, "1950s" -> 1, 
       "neighborhood" -> 1, "western" -> 1, "mid" -> 1, "predominantly" -> 1, 
       "celebrated" -> 1, "jewish" -> 1, "notice" -> 1, "accomplishment." -> 
       1, "completion" -> 1, "finishing" -> 1, "correct" -> 1, "clicks" -> 1, 
       "usually" -> 1, "satisfying" -> 1, "interesting" -> 1, "chest" -> 1, 
       "sunken" -> 1, "dark" -> 1, "travelling" -> 1, "airport" -> 1, "exact" -> 
       1, "cases." -> 1, "surge" -> 1, "re" -> 1, "step" -> 1, "understands" -> 
       1, "cousin" -> 1, "wing." -> 1, "rapid" -> 1, "98.5-degree" -> 1, 
       "asymptomatic" -> 1, "calling" -> 1, "knew" -> 1, "surface." -> 1, 
       "tangibly" -> 1, "rates" -> 1, "rising" -> 1, "floor." -> 1, "thrown" -> 
       1, "china" -> 1, "piece" -> 1, "shattered" -> 1, "wishing" -> 1, 
       "stocking" -> 1, "apparently" -> 1, "bad." -> 1, "wave." -> 1, 
       "restaurants" -> 1, "shutting" -> 1, "simply" -> 1, "outreach" -> 1, 
       "minimal" -> 1, "awareness" -> 1, "prosperity" -> 1, "pray" -> 1, 
       "solidarity" -> 1, "enhance" -> 1, "respect" -> 1, "communicate" -> 1, 
       "fears" -> 1, "etc" -> 1, "encourage" -> 1, "openly" -> 1, "strongly" -> 
       1, "rollercoaster." -> 1, "a" -> 1, "gift." -> 1, "wonderful" -> 1, 
       "church" -> 1, "service" -> 1, "visit" -> 1, "rural" -> 1, "adjusted" -> 
       1, "stops" -> 1, "shocked" -> 1, "aren\[CloseCurlyQuote]t" -> 1, 
       "prepared" -> 1, "later" -> 1, "celebrating" -> 1, "\:fe0f" -> 1, 
       "\:2764" -> 1, "philly" -> 1, "empathy." -> 1, "integrity" -> 1, 
       "honor" -> 1, "years." -> 1, "absent" -> 1, "battle" -> 1, "online." -> 
       1, "discussion" -> 1, "university" -> 1, "issue." -> 1, "suppose" -> 1,
        "affect" -> 1, "news." -> 1, "dominating" -> 1, "spiking" -> 1, 
       "family." -> 1, "continuous" -> 1, "election." -> 1, "void" -> 1, 
       "sucked" -> 1, "uk" -> 1, "healthy" -> 1, "remain" -> 1, "created" -> 
       1, "worldwide" -> 1, "alleviated" -> 1, "history." -> 1, 
       "monumentally" -> 1, "views" -> 1, "lemonade" -> 1, "sip" -> 1, 
       "easier" -> 1, "composure." -> 1, "maintain" -> 1, "struggle" -> 1, 
       "onto" -> 1, "spurts" -> 1, "waves" -> 1, "contingent" -> 1, "shame" -> 
       1, "realm" -> 1, "united." -> 1, "ultimately" -> 1, "christian" -> 1, 
       "evangelical" -> 1, "distain" -> 1, "extreme" -> 1, "uncontrollable" -> 
       1, "anticipated" -> 1, "disaster" -> 1, "assumed" -> 1, "combined" -> 
       1, "business" -> 1, "actual" -> 1, "according" -> 1, "tonight" -> 1, 
       "please" -> 1, "lengthen." -> 1, "fence" -> 1, "lean" -> 1, "serenity" -> 
       1, "stillness" -> 1, "autumn" -> 1, "snow" -> 1, "succumb" -> 1, 
       "true" -> 1, "theories" -> 1, "conspiracy" -> 1, "fatal" -> 1, "prove" -> 
       1, "grocery" -> 1, "hug" -> 1, "cure" -> 1, "cases" -> 1, "number" -> 
       1, "spike" -> 1, "weather" -> 1, "hints" -> 1, "sky" -> 1, "gray" -> 1,
        "cloudy" -> 1, "sane." -> 1, "fire" -> 1, "hear" -> 1, "avoiding" -> 
       1, "meetings" -> 1, "weekly" -> 1, "haircut" -> 1, "shaggy" -> 1, 
       "lacking." -> 1, "build" -> 1, "rapport" -> 1, "content." -> 1, 
       "happiness" -> 1, "feed" -> 1, "unsure" -> 1, "cut" -> 1, "sick." -> 1,
        "easy." -> 1, "helpless." -> 1, "pressure" -> 1, "blood" -> 1, 
       "raises" -> 1, "worried." -> 1, "phone" -> 1, "reclined" -> 1, 
       "confirm" -> 1, "drew" -> 1, "appointment" -> 1, "call" -> 1, "mainly" -> 
       1, "patch" -> 1, "heat" -> 1, "relief" -> 1, "cane" -> 1, "brought" -> 
       1, "r" -> 1, "posting" -> 1, "c" -> 1, "sometime." -> 1, "similar" -> 
       1, "submitted" -> 1, "filmed" -> 1, "lunatic" -> 1, "irrational" -> 1, 
       "eat" -> 1, "preoccupied" -> 1, "afterwards" -> 1, "glad" -> 1, 
       "stand" -> 1, "watched" -> 1, "era." -> 1, "bonding" -> 1, "painfully" -> 
       1, "treatment." -> 1, "dander" -> 1, "allerpet" -> 1, "supplement" -> 
       1, "bamboo" -> 1, "treats" -> 1, "subscriptions" -> 1, "cancel" -> 1, 
       "labor" -> 1, "atrocious" -> 1, "save" -> 1, "subscribe" -> 1, 
       "amazon" -> 1, "final." -> 1, "smart" -> 1, "shooting" -> 1, 
       "ashamed." -> 1, "figured" -> 1, "guy" -> 1, "pursued" -> 1, 
       "powerful" -> 1, "jew" -> 1, "scary" -> 1, "poignant" -> 1, "quote" -> 
       1, "whammy" -> 1, "double" -> 1, "prisoner" -> 1, "power" -> 1, 
       "midst" -> 1, "wasted." -> 1, "immature" -> 1, "kittens" -> 1, 
       "adorable" -> 1, "puppy" -> 1, "cute" -> 1, "spirits" -> 1, "lift" -> 
       1, "surf" -> 1, "screen" -> 1, "unmotivated" -> 1, "numb" -> 1, 
       "stark" -> 1, "insular" -> 1, "reeling." -> 1, "represents" -> 1, 
       "visions" -> 1, "halls" -> 1, "town" -> 1, "flipping" -> 1, 
       "elections" -> 1, "fatigue" -> 1, "abandoned." -> 1, "director" -> 1, 
       "concern" -> 1, "services" -> 1, "worship" -> 1, "rise" -> 1, "set" -> 
       1, "sun" -> 1, "overwhelmed" -> 1, "wine" -> 1, "drinking" -> 1, 
       "buzzing" -> 1, "flies" -> 1, "swarm" -> 1, "national" -> 1, 
       "unfathomable" -> 1, "seen" -> 1, "yearning" -> 1, "semester" -> 1, 
       "scrambling" -> 1, "hole." -> 1, "rabbit\[CloseCurlyQuote]s" -> 1, 
       "fallen" -> 1, "passing" -> 1, "connection" -> 1, "program" -> 1, 
       "grad" -> 1, "protein" -> 1, "cheap" -> 1, "carby" -> 1, "eating" -> 1,
        "physically" -> 1, "season" -> 1, "breathe" -> 1, "hurts" -> 1, 
       "woke" -> 1, "hopeless." -> 1, "ridiculous." -> 1, "phd" -> 1, 
       "market" -> 1, "drink" -> 1, "places" -> 1, "videos" -> 1, "ago." -> 1,
        "dreamless" -> 1, "waking" -> 1, "disoriented" -> 1, "simultaneously" -> 
       1, "process." -> 1, "political" -> 1, "participation" -> 1, "pride" -> 
       1, "divided" -> 1, "shortage." -> 1, "poll" -> 1, "training" -> 1, 
       "encouraging" -> 1, "letters" -> 1, "normalcy" -> 1, "restore" -> 1, 
       "sane" -> 1, "air." -> 1, "cool" -> 1, "crisp" -> 1, "breathing" -> 1, 
       "pull" -> 1, "too" -> 1, "roads" -> 1, "class." -> 1, "half" -> 1, 
       "screams" -> 1, "neglected" -> 1, "child" -> 1, "instead" -> 1, 
       "camera" -> 1, "teach." -> 1, "mic" -> 1, "mute" -> 1, "extra" -> 1, 
       "puts" -> 1, "pisses" -> 1, "skylight" -> 1, "airy" -> 1, "bright" -> 
       1, "happy." -> 1, "turnout." -> 1, "voter" -> 1, "lol" -> 1, 
       "communication" -> 1, "virtual" -> 1, "country." -> 1, "ahead" -> 1, 
       "lies" -> 1, "focus." -> 1, "concentrate" -> 1, "unable" -> 1, "upset" -> 
       1, "shake" -> 1, "horrified" -> 1, "presidential" -> 1, "days." -> 1, 
       "frame" -> 1, "bars" -> 1, "prison" -> 1, "panes" -> 1, "ability" -> 1,
        "money." -> 1, "federal" -> 1, "cities" -> 1, "depriving" -> 1, 
       "rule" -> 1, "pronouncements" -> 1, "germany" -> 1, "1930s" -> 1, 
       "frightening" -> 1, "lonely." -> 1, "interact" -> 1, "shifted" -> 1, 
       "dropped" -> 1, "oversteps" -> 1, "lands" -> 1, "frisbee" -> 1, 
       "throw" -> 1, "year." -> 1, "laugh" -> 1, "easily" -> 1, "join" -> 1, 
       "deserves" -> 1, "organizing" -> 1, "organizations" -> 1, "keeper" -> 
       1, "brothers" -> 1, "led" -> 1, "streets" -> 1, "marches" -> 1, 
       "moblizations" -> 1, "democratic" -> 1, "incredible" -> 1, "trying." -> 
       1, "tribe" -> 1, "dont" -> 1, "obviously" -> 1, "government" -> 1, 
       "oklahoma" -> 1, "seams." -> 1, "exhausting" -> 1, "drowning" -> 1, 
       "90" -> 1, "dictators" -> 1, "countries" -> 1, "3rd" -> 1, "exactly" -> 
       1, "perfect" -> 1, "men" -> 1, "honorable" -> 1, "metaphors" -> 1, 
       "farm" -> 1, "crop" -> 1, "cherries" -> 1, "cornelian" -> 1, "quince" -> 
       1, "canning" -> 1, "strep" -> 1, "flu" -> 1, "vires" -> 1, "given." -> 
       1, "experience" -> 1, "perceiving" -> 1, "result" -> 1, 
       "insignificance." -> 1, "helplessness" -> 1, "journal" -> 1, "purpose" -> 
       1, "actions" -> 1, "persuading" -> 1, "legit" -> 1, "events" -> 1, 
       "vibes" -> 1, "expendable." -> 1, "classroom." -> 1, "loving" -> 1, 
       "temperatures." -> 1, "high" -> 1, "generally" -> 1, "experience." -> 
       1, "would've" -> 1, "place." -> 1, "buildings" -> 1, "resentful." -> 1,
        "daughter\[CloseCurlyQuote]s" -> 1, "expense" -> 1, "overdoing" -> 1, 
       "anyway." -> 1, "vacation." -> 1, "self-isolating" -> 1, 
       "conservative" -> 1, "hurricane." -> 1, "collapse" -> 1, "economy" -> 
       1, "protestors" -> 1, "murdering" -> 1, "police" -> 1, "brown" -> 1, 
       "murder" -> 1, "imploding" -> 1, "soon." -> 1, "crashing" -> 1, 
       "doom." -> 1, "impending" -> 1, "eggshells" -> 1, "leading" -> 1, 
       "working." -> 1, "receive" -> 1, "bicycle" -> 1, "pedal" -> 1, 
       "gardens" -> 1, "flowers" -> 1, "substances" -> 1, "alcohol" -> 1, 
       "tobacco" -> 1, "increased" -> 1, "sadly" -> 1, "funny" -> 1, 
       "tearing" -> 1, "calendar" -> 1, "showed" -> 1, "colbert's" -> 1, 
       "clip" -> 1, "spot." -> 1, "spider" -> 1, "excellent" -> 1, "hikes" -> 
       1, "camping" -> 1, "parts" -> 1, "cousins" -> 1, "site" -> 1, "rain" -> 
       1, "dates" -> 1, "picked" -> 1, "specifically" -> 1, "rained" -> 1, 
       "bite" -> 1, "horsefly" -> 1, "swelled" -> 1, "eye" -> 1, "meltdowns" -> 
       1, "woods" -> 1, "consistent" -> 1, "road" -> 1, "ended" -> 1, 
       "tonight." -> 1, "socializing" -> 1, "frustrated" -> 1, "horribly" -> 
       1, "normal." -> 1, "nurtured" -> 1, "emotionally" -> 1, "struggling" -> 
       1, "illnesses" -> 1, "hospital" -> 1, "stressing" -> 1, "overthinking" -> 
       1, "finals" -> 1, "midterm" -> 1, "products" -> 1, "supermarkets" -> 1,
        "exposed" -> 1, "understanding" -> 1, "contribute" -> 1, "study" -> 1,
        "participating" -> 1, "desperate." -> 1, "vote." -> 1, "neighboring" -> 
       1, "island" -> 1, "rhode" -> 1, "imposed" -> 1, "wall" -> 1, "yearned" -> 
       1, "war" -> 1, "recall" -> 1, "german" -> 1, "persecuted" -> 1, 
       "beyond" -> 1, "heart." -> 1, "tugs" -> 1, "dangerous." -> 1, 
       "restless" -> 1, "trapped." -> 1, "end." -> 1, "sixth" -> 1, 
       "entering" -> 1, "walmart" -> 1, "aisles" -> 1, "wandering" -> 1, 
       "souls" -> 1, "silent" -> 1, "laid" -> 1, "weary" -> 1, 
       "claustrophobic." -> 1, "england." -> 1, "necessary" -> 1, "elements" -> 
       1, "fresh" -> 1, "opened" -> 1, "designed" -> 1, "structure" -> 1, 
       "deck" -> 1, "dilapidated" -> 1, "replacing" -> 1, "built" -> 1, 
       "grief." -> 1, "impacting" -> 1, "came" -> 1, "dreading" -> 1, 
       "problems" -> 1, "disease" -> 1, "stressful" -> 1, "unnerving" -> 1, 
       "waves." -> 1, "gaze" -> 1, "wont" -> 1, "niece" -> 1, "student" -> 1, 
       "4" -> 1, "chapter" -> 1, "like." -> 1, "secure." -> 1, "decades" -> 1,
        "labored" -> 1, "robbed" -> 1, "unceremoniously" -> 1, "said" -> 1, 
       "repeatedly" -> 1, "2019" -> 1, "august" -> 1, "retired" -> 1, "kill" -> 
       1, "knob" -> 1, "door" -> 1, "fear" -> 1, "happen" -> 1, 
       "isn\[CloseCurlyQuote]t" -> 1, "introvert" -> 1, "survival" -> 1, 
       "feel." -> 1, "bleed" -> 1, "frozen" -> 1, "tunnel-like" -> 1, 
       "hollow" -> 1, "passed." -> 1, "nerve." -> 1, "podiatrist" -> 1, 
       "registered" -> 1, "needs." -> 1, "basic" -> 1, "afford" -> 1, "park" -> 
       1, "spread" -> 1, "reduce" -> 1, "worked" -> 1, "obedient" -> 1, "ny" -> 
       1, "states" -> 1, "south" -> 1, "despair" -> 1, "hatred" -> 1, "fed" -> 
       1, "swivel" -> 1, "jog" -> 1, "headphones" -> 1, "rethink" -> 1, 
       "boroughs" -> 1, "shootings" -> 1, "deadly" -> 1, "exercise" -> 1, 
       "walks" -> 1, "circle." -> 1, "wheel" -> 1, "hamster" -> 1, 
       "accomplishment" -> 1, "going." -> 1, "sparks" -> 1, "gained" -> 1, 
       "tranquility" -> 1, "body" -> 1, "burly" -> 1, "smile." -> 1, 
       "reassure" -> 1, "die." -> 1, "strategy" -> 1, "regressed" -> 1, 
       "regresar" -> 1, "spanish" -> 1], "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 1948], "Meta" -> 
     Association["ID" -> 169565535702660], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 1948], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     1948, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["feel", 
                  Style[
                  "feel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["feel"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["feel"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["237"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["feel"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["like", 
                  Style[
                  "like", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["like"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["like"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["like"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["feels", 
                  Style[
                  "feels", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["feels"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["feels"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["feels"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["feeling", 
                  Style[
                  "feeling", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["feeling"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["feeling"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["83"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["feeling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["just", 
                  Style[
                  "just", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["just"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["just"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["just"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["time", 
                  Style[
                  "time", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["time"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["time"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["people", 
                  Style[
                  "people", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["people"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["people"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["people"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["really", 
                  Style[
                  "really", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["really"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["really"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["really"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["going", 
                  Style[
                  "going", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["going"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["going"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["going"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["week", 
                  Style[
                  "week", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["week"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["week"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["week"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["things", 
                  Style[
                  "things", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["things"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["things"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["things"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["know", 
                  Style[
                  "know", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["know"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["know"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["know"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["day", 
                  Style[
                  "day", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["day"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["day"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["able", 
                  Style[
                  "able", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["able"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["able"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["able"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["home", 
                  Style[
                  "home", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["home"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["home"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["home"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["feelings", 
                  Style[
                  "feelings", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["feelings"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["feelings"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["feelings"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["friends", 
                  Style[
                  "friends", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["friends"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["friends"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["friends"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["new", 
                  Style[
                  "new", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["new"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["new"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["new"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CloseCurlyQuote]s", 
                  Style[
                  "\[CloseCurlyQuote]s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["\[CloseCurlyQuote]s"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CloseCurlyQuote]s"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CloseCurlyQuote]s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["getting", 
                  Style[
                  "getting", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["getting"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["getting"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["getting"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1948, 1], {1, 1948 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1948, 1], {1, 1948 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1948, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1948, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1948, 1], {1, 1948 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1948, 1], {1, 1948 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{182., {210.85052490234375`, 215.14947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{182., {210.85052490234375`, 215.14947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8243725478532867`*^9, 3.824372579952011*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"acfdbf97-7cf0-4f39-869b-eeff825222d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Research question: How might this surface interesting \
information? Come to class with datasets for up to five words that you find \
interesting. Why are these datasets interesting?",
 FontSlant->"Italic"]], "Subsubsection",
 CellChangeTimes->{{3.824372597598818*^9, 3.824372618210215*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"1ca644ab-8edb-4659-bafc-d076d16dbbb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordsInSentences", "[", 
  RowBox[{"PJPSentences", ",", "\"\<think\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.824373089278975*^9, 3.824373092896153*^9}, {
  3.8243731230340567`*^9, 3.824373150940325*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"a2137f39-7d20-463b-b971-7cd50b45aeaa"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "think" -> 175, "thinking" -> 50, "people" -> 35, "just" -> 20, "time" -> 
       20, "pandemic" -> 19, "really" -> 17, "like" -> 14, "week" -> 14, 
       "going" -> 13, "thinks" -> 11, "things" -> 11, "lot" -> 11, "life" -> 
       11, "covid" -> 11, "care" -> 9, "feel" -> 9, "way" -> 9, 
       "\[CloseCurlyQuote]s" -> 8, "day" -> 8, "living" -> 8, "want" -> 8, 
       "makes" -> 8, "days" -> 8, "new" -> 7, "friends" -> 7, "know" -> 7, 
       "home" -> 7, "lost" -> 7, "trying" -> 7, "say" -> 6, "come" -> 6, 
       "left" -> 6, "make" -> 6, "health" -> 6, "hard" -> 6, "outside" -> 6, 
       "time." -> 6, "family" -> 6, "affected" -> 6, "vaccine" -> 5, "group" -> 
       5, "friend" -> 5, "got" -> 5, "trump" -> 5, "help" -> 5, 
       "\[CloseCurlyQuote]m" -> 5, "getting" -> 5, "election" -> 5, "instead" -> 
       5, "start" -> 5, "able" -> 5, "person" -> 5, "good" -> 5, "stop" -> 5, 
       "love" -> 5, "times" -> 5, "change" -> 5, "world" -> 5, "etc." -> 4, 
       "public" -> 4, "year" -> 4, "holiday" -> 4, "later" -> 4, "point" -> 4,
        "quality" -> 4, "sit" -> 4, "need" -> 4, "maybe" -> 4, "media" -> 4, 
       "better" -> 4, "sometimes" -> 4, "months" -> 4, "long" -> 4, "believe" -> 
       4, "apart" -> 4, "mask" -> 4, "\[CloseCurlyQuote]ve" -> 4, "thoughts" -> 
       4, "test" -> 4, "depressed" -> 4, "t" -> 4, "anxiety" -> 4, "thought" -> 
       4, "news" -> 4, "right" -> 4, "parents" -> 4, "thing" -> 4, "birthday" -> 
       3, "inside" -> 3, "hoping" -> 3, "won" -> 3, "live" -> 3, "important" -> 
       3, "sad" -> 3, "vaccines" -> 3, "changed" -> 3, "\[CloseCurlyQuote]ll" -> 
       3, "christmas" -> 3, "dad" -> 3, "don\[CloseCurlyQuote]t" -> 3, "fact" -> 
       3, "mom" -> 3, "sense" -> 3, "including" -> 3, "possible" -> 3, 
       "covid-19" -> 3, "means" -> 3, "kind" -> 3, "ways" -> 3, "freedom" -> 
       3, "old" -> 3, "sure" -> 3, "putting" -> 3, "apartment" -> 3, "b" -> 3,
        "reading" -> 3, "masks" -> 3, "literally" -> 3, "finally" -> 3, "big" -> 
       3, "food" -> 3, "hand" -> 3, "continue" -> 3, "knowing" -> 3, 
       "exposure" -> 3, "end" -> 3, "pain" -> 3, "goes" -> 3, "pandemic." -> 
       3, "due" -> 3, "schools" -> 3, "spring" -> 3, "process" -> 3, "normal" -> 
       3, "infection" -> 3, "decided" -> 3, "spread" -> 3, "control" -> 3, 
       "scary" -> 3, "bad" -> 3, "kept" -> 3, "move" -> 3, "order" -> 3, 
       "mailman" -> 3, "memories" -> 3, "workers" -> 3, "small" -> 3, "found" -> 
       3, "life." -> 3, "gone" -> 3, "cards" -> 3, "virus" -> 3, "longer" -> 
       3, "wearing" -> 3, "head" -> 3, "safe" -> 3, "stay" -> 3, "future" -> 
       3, "happen" -> 3, "seen" -> 3, "lives" -> 3, "water" -> 3, "social" -> 
       3, "happy" -> 2, "marriage" -> 2, "feelings" -> 2, "different" -> 2, 
       "project" -> 2, "journaling" -> 2, "memory" -> 2, "film" -> 2, 
       "budgets" -> 2, "studio" -> 2, "instructor" -> 2, "spend" -> 2, 
       "shots" -> 2, "greater" -> 2, "turned" -> 2, "selfish" -> 2, "dose" -> 
       2, "immoral" -> 2, "passed" -> 2, "unable" -> 2, "needs" -> 2, 
       "conversation" -> 2, "democracy" -> 2, "hatred" -> 2, "oh" -> 2, 
       "trump\[CloseCurlyQuote]s" -> 2, "isolated" -> 2, "years" -> 2, 
       "rules" -> 2, "angry" -> 2, "room" -> 2, "vaccine." -> 2, "capitol." -> 
       2, "listen" -> 2, "power" -> 2, "stand" -> 2, "appointment" -> 2, 
       "homes" -> 2, "drive" -> 2, "dining" -> 2, "piece" -> 2, "started" -> 
       2, "restrictions" -> 2, "loved" -> 2, "isn\[CloseCurlyQuote]t" -> 2, 
       "false" -> 2, "miss" -> 2, "everyday" -> 2, "country" -> 2, "sick" -> 
       2, "worst" -> 2, "crazy" -> 2, "hanging" -> 2, "building" -> 2, "met" -> 
       2, "thank" -> 2, "pick" -> 2, "coffee" -> 2, "type" -> 2, "watching" -> 
       2, "sucks" -> 2, "yes" -> 2, "scenario" -> 2, "worried" -> 2, 
       "members" -> 2, "holidays" -> 2, "ahead" -> 2, "infections" -> 2, 
       "rates" -> 2, "rights" -> 2, "gender" -> 2, "semester" -> 2, "likely" -> 
       2, "voted" -> 2, "potential" -> 2, "eyes" -> 2, "america" -> 2, "half" -> 
       2, "didn\[CloseCurlyQuote]t" -> 2, "took" -> 2, "student" -> 2, "vote" -> 
       2, "ct" -> 2, "lockdown" -> 2, "given" -> 2, "plans" -> 2, "one's" -> 
       2, "totally" -> 2, "late" -> 2, "noses" -> 2, "far" -> 2, 
       "uncomfortable" -> 2, "swabbed" -> 2, "shopping" -> 2, "gave" -> 2, 
       "cobbler" -> 2, "pluot" -> 2, "lose" -> 2, "recently" -> 2, "saw" -> 2,
        "biden" -> 2, "honestly" -> 2, "ago" -> 2, "top" -> 2, "state" -> 2, 
       "local" -> 2, "deal." -> 2, "guess" -> 2, "interesting" -> 2, "lives." -> 
       2, "huge" -> 2, "voting" -> 2, "mail" -> 2, "talking" -> 2, "work" -> 
       2, "particular" -> 2, "week." -> 2, "eating" -> 2, "making" -> 2, 
       "feels" -> 2, "videos" -> 2, "watch" -> 2, "drink" -> 2, "march" -> 2, 
       "saying" -> 2, "exactly" -> 2, "job" -> 2, "struggling" -> 2, "hope" -> 
       2, "plane" -> 2, "leave" -> 2, "waiting" -> 2, "close" -> 2, "told" -> 
       2, "weeks" -> 2, "used" -> 2, "worry" -> 2, "lunch" -> 2, "school" -> 
       2, "classes" -> 2, "wanting" -> 2, "rethinking" -> 2, "effects" -> 2, 
       "devastating" -> 2, "covid-19." -> 2, "eat" -> 2, "hurt" -> 2, 
       "humans" -> 2, "color" -> 2, "people." -> 2, "cases" -> 2, "catch" -> 
       2, "seeing" -> 2, "wear" -> 2, "said" -> 2, "house" -> 2, "needed" -> 
       2, "presents" -> 2, "child" -> 2, "strange" -> 2, "nice" -> 2, 
       "think." -> 2, "favorite" -> 2, "definitely" -> 2, "ran" -> 2, "tough" -> 
       2, "difficult" -> 2, "complete" -> 2, "coronavirus" -> 2, "climate" -> 
       2, "walking" -> 2, "deadly" -> 2, "walks" -> 2, "future." -> 2, 
       "chaos" -> 2, "involved" -> 2, "guns" -> 2, "try" -> 2, "straight" -> 
       2, "breathe" -> 2, "anymore." -> 2, "call" -> 2, "night" -> 2, 
       "distancing" -> 2, "five" -> 2, "hospital" -> 2, "positive" -> 2, 
       "mental" -> 2, "plan" -> 2, "screen" -> 1, "ipad" -> 1, "open." -> 1, 
       "windows" -> 1, "suitable" -> 1, "weather" -> 1, "researchers." -> 1, 
       "albany" -> 1, "suny" -> 1, "historian" -> 1, "motivation." -> 1, 
       "stays" -> 1, "therapy" -> 1, "individual" -> 1, "attends" -> 1, 
       "depression" -> 1, "addiction" -> 1, "drug" -> 1, "recovering" -> 1, 
       "suffered" -> 1, "son" -> 1, "pressing" -> 1, "bringing" -> 1, 
       "dissipate" -> 1, "disagreement" -> 1, "latest" -> 1, "motivating" -> 
       1, "whatever" -> 1, "juice" -> 1, "steam" -> 1, "fuck" -> 1, "energy" -> 
       1, "surrounded" -> 1, "sure." -> 1, "related" -> 1, "past" -> 1, 
       "dreams" -> 1, "possibility." -> 1, "loss." -> 1, "suffer" -> 1, 
       "elderly" -> 1, "understanding" -> 1, "sigh" -> 1, "experiencing." -> 
       1, "eloquently" -> 1, "sums" -> 1, "wonderful" -> 1, "handle" -> 1, 
       "hope." -> 1, "app" -> 1, "drawing" -> 1, "picture" -> 1, "mandala" -> 
       1, "manic" -> 1, "bit" -> 1, "today" -> 1, "security." -> 1, "lulled" -> 
       1, "nz" -> 1, "caring" -> 1, "falling" -> 1, "matters" -> 1, 
       "awareness" -> 1, "ones" -> 1, "mortality" -> 1, "statement" -> 1, 
       "doubted" -> 1, "s" -> 1, "mother" -> 1, "sees" -> 1, "thinking." -> 1,
        "shift" -> 1, "paradigm" -> 1, "caused" -> 1, "construct" -> 1, 
       "heterosexual" -> 1, "alzheimer's" -> 1, "dementia/early" -> 1, 
       "happens." -> 1, "hall" -> 1, "concert" -> 1, "classroom" -> 1, "cry" -> 
       1, "day." -> 1, "emotions" -> 1, "wave" -> 1, "terrifying" -> 1, 
       "ride" -> 1, "physical/mental" -> 1, "prime" -> 1, "missing" -> 1, 
       "day/week/month" -> 1, "possibly" -> 1, "hopelessness" -> 1, 
       "overwhelming" -> 1, "job." -> 1, "overcome" -> 1, "pushed" -> 1, 
       "humiliated" -> 1, "cried" -> 1, "sweat" -> 1, "strived" -> 1, "snow" -> 
       1, "amounts" -> 1, "ridiculous" -> 1, "useful" -> 1, "usual" -> 1, 
       "business" -> 1, "break" -> 1, "otoh" -> 1, "streets." -> 1, "doubt" -> 
       1, "acquits" -> 1, "senate" -> 1, "i" -> 1, "conflict." -> 1, "kinds" -> 
       1, "intimacy" -> 1, "pushing" -> 1, "consistent" -> 1, "bigger" -> 1, 
       "plus" -> 1, "person." -> 1, "explosion" -> 1, "interpersonal" -> 1, 
       "outdoor" -> 1, "coming" -> 1, "project." -> 1, "clues" -> 1, 
       "analytic" -> 1, "use" -> 1, "ethnographers" -> 1, "generated" -> 1, 
       "writing" -> 1, "creative" -> 1, "television" -> 1, "stories" -> 1, 
       "short" -> 1, "property" -> 1, "access" -> 1, "contained" -> 1, 
       "endure" -> 1, "nuggets" -> 1, "story" -> 1, "memorable" -> 1, 
       "capture" -> 1, "narrowly" -> 1, "focus" -> 1, "developing" -> 1, 
       "morning" -> 1, "nyt" -> 1, "king" -> 1, "stephen" -> 1, "writer" -> 1,
        "interestingly" -> 1, "crises." -> 1, "redistribution" -> 1, 
       "pandemics" -> 1, "suggestion" -> 1, "controls" -> 1, "border" -> 1, 
       "mandates" -> 1, "bars" -> 1, "restaurants" -> 1, "closing" -> 1, 
       "8pm-5am" -> 1, "curfew" -> 1, "eventually" -> 1, "shortages" -> 1, 
       "leading" -> 1, "cutting" -> 1, "balanced" -> 1, "decades" -> 1, 
       "universal" -> 1, "canada" -> 1, "decaying" -> 1, "studio." -> 1, 
       "terms" -> 1, "dance" -> 1, "irish" -> 1, "dangerous." -> 1, 
       "overblown" -> 1, "theories" -> 1, "conspiracy" -> 1, "qanon" -> 1, 
       "conservatives" -> 1, "included" -> 1, "risk" -> 1, "stupid" -> 1, 
       "colossally" -> 1, "legal" -> 1, "sad." -> 1, "anyway" -> 1, "sweets" -> 
       1, "arriving" -> 1, "girlfriend" -> 1, "conspired" -> 1, "greater." -> 
       1, "accessible" -> 1, "somewhat" -> 1, "childcare" -> 1, "kids" -> 1, 
       "manage" -> 1, "helping" -> 1, "administered." -> 1, "generator" -> 1, 
       "there'd" -> 1, "blackout" -> 1, "shut" -> 1, "freezers" -> 1, 
       "university" -> 1, "seattle" -> 1, "cars" -> 1, "lines" -> 1, 
       "wandered" -> 1, "traffic" -> 1, "stuck" -> 1, "oregon" -> 1, 
       "transporting" -> 1, "heard" -> 1, "outside." -> 1, "notes" -> 1, 
       "taking" -> 1, "lectures" -> 1, "homework" -> 1, "linguistics" -> 1, 
       "affecting" -> 1, "unwise." -> 1, "teaching" -> 1, "in-classroom" -> 1,
        "based" -> 1, "12" -> 1, "interval" -> 1, "extend" -> 1, "england" -> 
       1, "gather" -> 1, "fatigue." -> 1, "freezing" -> 1, "uk" -> 1, 
       "sending" -> 1, "idea" -> 1, "playing" -> 1, "appropriate" -> 1, "eu" -> 
       1, "save" -> 1, "pint" -> 1, "burger" -> 1, "economy" -> 1, "cost" -> 
       1, "comes" -> 1, "actually" -> 1, "unity" -> 1, "greatness" -> 1, 
       "talk" -> 1, "do" -> 1, "long." -> 1, "lasted" -> 1, "scale" -> 1, 
       "strict" -> 1, "enforced" -> 1, "democratic" -> 1, "compromised" -> 1, 
       "pathetic" -> 1, "sleep." -> 1, "sadness" -> 1, "disbelief" -> 1, 
       "attacking" -> 1, "spilling" -> 1, "nest" -> 1, "over-sensitized" -> 1,
        "created" -> 1, "information" -> 1, "instance" -> 1, "desensitized" -> 
       1, "theory" -> 1, "number" -> 1, "shown" -> 1, "sanity" -> 1, "route" -> 
       1, "chose" -> 1, "tvs" -> 1, "glued" -> 1, "grandmother" -> 1, 
       "96-year-old" -> 1, "usa" -> 1, "jersey" -> 1, "say." -> 1, "original" -> 
       1, "agree" -> 1, "area" -> 1, "dc" -> 1, "actions" -> 1, "current" -> 
       1, "luxury" -> 1, "afforded" -> 1, "choose" -> 1, "signs" -> 1, 
       "equality" -> 1, "immigrants" -> 1, "lgbtq" -> 1, "banner" -> 1, "blm" -> 
       1, "choice" -> 1, "privilege" -> 1, "windsor" -> 1, "sparked" -> 1, 
       "nuts." -> 1, "continuing" -> 1, "answer" -> 1, "protests" -> 1, 
       "regard" -> 1, "forgive" -> 1, "keeps" -> 1, "schools." -> 1, 
       "businesses" -> 1, "cleanliness" -> 1, "distances" -> 1, "basis." -> 1,
        "regular" -> 1, "stir" -> 1, "july" -> 1, "general" -> 1, "available" -> 
       1, "won\[CloseCurlyQuote]t" -> 1, "optimistic" -> 1, "sometime" -> 1, 
       "meanwhile" -> 1, "vaccinated." -> 1, "relief" -> 1, "praying" -> 1, 
       "copd" -> 1, "age" -> 1, "february" -> 1, "weekend" -> 1, "wants" -> 1,
        "inevitable" -> 1, "meets" -> 1, "roommate" -> 1, "whomever" -> 1, 
       "place" -> 1, "moving" -> 1, "fight." -> 1, "factions" -> 1, "split" -> 
       1, "normally" -> 1, "trouble." -> 1, "hilary" -> 1, "asserted" -> 1, 
       "2016" -> 1, "pond" -> 1, "libtards" -> 1, "sedition" -> 1, "hide" -> 
       1, "tried" -> 1, "idiots" -> 1, "rallies" -> 1, "threatened" -> 1, 
       "journalists" -> 1, "5" -> 1, "outrage" -> 1, "f**k" -> 1, 
       "outrageous" -> 1, "nooses" -> 1, "ties" -> 1, "zip" -> 1, "hostage" -> 
       1, "congress" -> 1, "intend" -> 1, "rioters" -> 1, "evidence" -> 1, 
       "increasing" -> 1, "hyperbole" -> 1, "coup" -> 1, "term" -> 1, 
       "tended" -> 1, "mentality" -> 1, "mob" -> 1, "rhetoric" -> 1, "stoked" -> 
       1, "riot" -> 1, "seditionists" -> 1, "focused" -> 1, "parties" -> 1, 
       "contributions" -> 1, "campaign" -> 1, "moratoriums" -> 1, 
       "corporations" -> 1, "large" -> 1, "stopped." -> 1, "asshole" -> 1, 
       "orange" -> 1, "dems" -> 1, "page" -> 1, "suspect" -> 1, "nhs" -> 1, 
       "degree" -> 1, "finishing" -> 1, "weird" -> 1, "underneath" -> 1, 
       "away" -> 1, "swiped" -> 1, "ambitions" -> 1, "basically" -> 1, 
       "horrible" -> 1, "nan" -> 1, "socialising" -> 1, "pleasure" -> 1, 
       "simple" -> 1, "hit" -> 1, "misses" -> 1, "complaint" -> 1, 
       "frightens" -> 1, "position" -> 1, "worse" -> 1, "imagine" -> 1, 
       "normal." -> 1, "settling" -> 1, "special." -> 1, "remind" -> 1, 
       "tickets" -> 1, "lottery" -> 1, "one-in-a-million" -> 1, "anxiety." -> 
       1, "protection" -> 1, "level" -> 1, "additional" -> 1, "offering" -> 1,
        "dusty" -> 1, "fit" -> 1, "coughing" -> 1, "period" -> 1, "idea." -> 
       1, "comfortable" -> 1, "storm" -> 1, "easy" -> 1, "disappear." -> 1, 
       "realistically" -> 1, "wishful" -> 1, "virus." -> 1, "statistics" -> 1,
        "lates" -> 1, "read" -> 1, "heartedly" -> 1, "happening." -> 1, 
       "mudslides." -> 1, "unleashing" -> 1, "roots" -> 1, "tree" -> 1, 
       "loosening" -> 1, "houses" -> 1, "foundations" -> 1, "ripping" -> 1, 
       "overflow" -> 1, "damaging" -> 1, "tame" -> 1, "stream" -> 1, 
       "drought" -> 1, "drinking" -> 1, "heat" -> 1, "factories" -> 1, 
       "provide" -> 1, "harnessed" -> 1, "opportunities" -> 1, "foe" -> 1, 
       "roaring" -> 1, "awe" -> 1, "road" -> 1, "addressing" -> 1, "betters" -> 
       1, "infects" -> 1, "smallpox" -> 1, "sweeper" -> 1, "crossing" -> 1, 
       "lowly" -> 1, "jo" -> 1, "death" -> 1, "bleak" -> 1, "dickens" -> 1, 
       "plantation" -> 1, "refers" -> 1, "certain" -> 1, "else" -> 1, 
       "pfizer" -> 1, "colleague" -> 1, "60-year" -> 1, "nursing" -> 1, 
       "health-care" -> 1, "supplies" -> 1, "collapsed" -> 1, "government" -> 
       1, "coalition" -> 1, "dysfunctions" -> 1, "despite" -> 1, "israel" -> 
       1, "risky." -> 1, "'s" -> 1, "visit" -> 1, "providence" -> 1, "urged" -> 
       1, "in-door" -> 1, "dangers" -> 1, "feet" -> 1, "six" -> 1, "tables" -> 
       1, "harvest" -> 1, "committed" -> 1, "r." -> 1, "planning" -> 1, 
       "beginning" -> 1, "symptoms." -> 1, "husband's" -> 1, "talked" -> 1, 
       "vague" -> 1, "deliberately" -> 1, "cheer." -> 1, "opposite" -> 1, 
       "exact" -> 1, "perpetually" -> 1, "pathogen." -> 1, "passing" -> 1, 
       "vulnerable" -> 1, "spree" -> 1, "hugging" -> 1, "abide" -> 1, 
       "celebrate" -> 1, "article" -> 1, "wapo" -> 1, "interviewed" -> 1, 
       "families" -> 1, "thousands" -> 1, "hundreds" -> 1, "ok" -> 1, 
       "fights" -> 1, "navigating" -> 1, "intense" -> 1, "emotionally" -> 1, 
       "family-centered" -> 1, "rule." -> 1, "exception" -> 1, "sacrificing" -> 
       1, "aunt" -> 1, "terrifying." -> 1, "high-key" -> 1, "cute" -> 1, 
       "insisted" -> 1, "blood" -> 1, "pumping" -> 1, "red" -> 1, "colored" -> 
       1, "gift" -> 1, "joy" -> 1, "logic" -> 1, "term." -> 1, "cottage" -> 1,
        "shore" -> 1, "labor" -> 1, "post" -> 1, "book" -> 1, "zoom." -> 1, 
       "attended" -> 1, "deaths" -> 1, "flood" -> 1, "stem" -> 1, "it'll" -> 
       1, "wants." -> 1, "happier" -> 1, "appreciate" -> 1, "isolation" -> 1, 
       "cope" -> 1, "month" -> 1, "special" -> 1, "diseases" -> 1, "cancer" -> 
       1, "teach" -> 1, "horizon." -> 1, "reason" -> 1, "leadership" -> 1, 
       "faith" -> 1, "truly" -> 1, "locking" -> 1, "m4a" -> 1, "opposition" -> 
       1, "signaled" -> 1, "repeatedly" -> 1, "meantime" -> 1, "acceleration" -> 
       1, "damage" -> 1, "improve" -> 1, "administration" -> 1, "ones." -> 1, 
       "accelerate" -> 1, "guaranteed" -> 1, "high" -> 1, "extraordinarily" -> 
       1, "shooting" -> 1, "numbers" -> 1, "consequences." -> 1, 
       "unthinkable" -> 1, "case" -> 1, "turn." -> 1, "hairpin" -> 1, "look" -> 
       1, "parking" -> 1, "turning" -> 1, "shop." -> 1, "city" -> 1, 
       "wandering" -> 1, "chatting" -> 1, "car" -> 1, "transportation" -> 1, 
       "fear" -> 1, "disbanded" -> 1, "writers" -> 1, "goodness" -> 1, 
       "library" -> 1, "closed" -> 1, "shops" -> 1, "flooded" -> 1, "lake" -> 
       1, "muskegon" -> 1, "trail" -> 1, "bike" -> 1, "cousin" -> 1, "safety" -> 
       1, "else." -> 1, "stands" -> 1, "hat" -> 1, "re-thinking" -> 1, 
       "ancestry" -> 1, "native" -> 1, "immunity" -> 1, "all-powerful" -> 1, 
       "possesses" -> 1, "dark" -> 1, "sake" -> 1, "minutes" -> 1, "scare." -> 
       1, "tuesday" -> 1, "biggest" -> 1, "election." -> 1, "subverting" -> 1,
        "chief" -> 1, "hole" -> 1, "a" -> 1, "absolutely" -> 1, "middle" -> 1,
        "ph.d" -> 1, "hopeful" -> 1, "mark" -> 1, "difficult." -> 1, 
       "post-covid" -> 1, "pre-covid" -> 1, "questions" -> 1, "research" -> 1,
        "balance" -> 1, "wasted" -> 1, "amount" -> 1, "trivial" -> 1, 
       "elitist" -> 1, "concerns" -> 1, "houses." -> 1, "respective" -> 1, 
       "rudest" -> 1, "soon" -> 1, "risk." -> 1, "college" -> 1, "danger" -> 
       1, "died." -> 1, "hits" -> 1, "considering" -> 1, "earlier" -> 1, 
       "bothered" -> 1, "real." -> 1, "longing" -> 1, "sobering" -> 1, 
       "fails" -> 1, "prophecy" -> 1, "al." -> 1, "et" -> 1, "festinger" -> 1,
        "classic" -> 1, "unclear" -> 1, "denying" -> 1, "connection" -> 1, 
       "highest" -> 1, "currently" -> 1, "u.s." -> 1, "counties" -> 1, "376" -> 
       1, "reported" -> 1, "re" -> 1, "90s." -> 1, "speech" -> 1, "human" -> 
       1, "women\[CloseCurlyQuote]s" -> 1, "clinton\[CloseCurlyQuote]s" -> 1, 
       "hillary" -> 1, "video" -> 1, "played" -> 1, "lastly" -> 1, "lecture" -> 
       1, "ended" -> 1, "rage" -> 1, "expecting" -> 1, "debates" -> 1, 
       "presidential" -> 1, "existence" -> 1, "symbolise" -> 1, "results" -> 
       1, "documented" -> 1, "undocumented" -> 1, "american" -> 1, 
       "else\[CloseCurlyQuote]s" -> 1, "devastate" -> 1, "chuckle" -> 1, 
       "roll" -> 1, "welling" -> 1, "tears" -> 1, "couldn\[CloseCurlyQuote]t" -> 
       1, "important." -> 1, "partying" -> 1, "unprecedented" -> 1, 
       "educations" -> 1, "pledge" -> 1, "signed" -> 1, "creating" -> 1, 
       "tell" -> 1, "fail" -> 1, "words" -> 1, "hero." -> 1, "fauci" -> 1, 
       "anthony" -> 1, "dr" -> 1, "expose" -> 1, "encourage" -> 1, "honest" -> 
       1, "stress" -> 1, "worth" -> 1, "government." -> 1, "support" -> 1, 
       "canvases" -> 1, "psinted" -> 1, "pandrmic." -> 1, "yhe" -> 1, 
       "amunition" -> 1, "netvous" -> 1, "rough" -> 1, "8" -> 1, 
       "friendsgiving." -> 1, "neighbor" -> 1, "times." -> 1, "crisis" -> 1, 
       "events" -> 1, "halloween" -> 1, "celebrating" -> 1, "halloweekend." -> 
       1, "motivated" -> 1, "implode" -> 1, "allowed" -> 1, "neither" -> 1, 
       "justice" -> 1, "court" -> 1, "supreme" -> 1, "confirmed" -> 1, 
       "upcoming" -> 1, "matter" -> 1, "careful" -> 1, "instruct" -> 1, 
       "funny" -> 1, "nose" -> 1, "contraindicated" -> 1, "ny" -> 1, "2019" -> 
       1, "leaving" -> 1, "edge" -> 1, "usually" -> 1, "stuff" -> 1, 
       "disinfectant" -> 1, "nozin" -> 1, "pondered" -> 1, "sinuses." -> 1, 
       "swab" -> 1, "jammed" -> 1, "pretty" -> 1, "2009" -> 1, "flu" -> 1, 
       "swine" -> 1, "remembering" -> 1, "nearest" -> 1, "unlike" -> 1, 
       "store" -> 1, "grocery" -> 1, "pizza" -> 1, "yard" -> 1, "coworkers" -> 
       1, "gathering" -> 1, "probably" -> 1, "honor" -> 1, "evening" -> 1, 
       "shabbos" -> 1, "restful" -> 1, "sweet" -> 1, "coma." -> 1, "wishing" -> 
       1, "recipe" -> 1, "paper-plate-scribbled" -> 1, "baked" -> 1, 
       "twitter" -> 1, "looming." -> 1, "terrible" -> 1, "felt" -> 1, 
       "guilty" -> 1, "comforted" -> 1, "okay" -> 1, "boy" -> 1, "directly." -> 
       1, "restaurant" -> 1, "faces" -> 1, "window" -> 1, "standards." -> 1, 
       "pandemic/quarantine" -> 1, "boring" -> 1, "exhaustion" -> 1, "end." -> 
       1, "rising" -> 1, "burned" -> 1, "overall" -> 1, "cancer." -> 1, 
       "lung" -> 1, "iv" -> 1, "stage" -> 1, "diagnosed" -> 1, "brother" -> 1,
        "oldest" -> 1, "husband\[CloseCurlyQuote]s" -> 1, "learned" -> 1, 
       "ongoing" -> 1, "associated" -> 1, "disappointments" -> 1, "previous" -> 
       1, "cities" -> 1, "arrangements" -> 1, "jobs" -> 1, "entering" -> 1, 
       "share" -> 1, "difficulty" -> 1, "lose." -> 1, "sight" -> 1, "2020" -> 
       1, "best" -> 1, "pressure" -> 1, "giving" -> 1, "governor" -> 1, 
       "community." -> 1, "harm" -> 1, "extreme" -> 1, "causes" -> 1, 
       "reckless" -> 1, "november" -> 1, "push" -> 1, "badly." -> 1, 
       "portrays" -> 1, "president" -> 1, "fraudulent" -> 1, "recognize" -> 1,
        "effecting" -> 1, "fraud" -> 1, "source" -> 1, "semester." -> 1, 
       "depressing" -> 1, "protein" -> 1, "cheap" -> 1, "carby" -> 1, 
       "physically" -> 1, "great" -> 1, "scream." -> 1, "ridiculous." -> 1, 
       "phd" -> 1, "market" -> 1, "worse." -> 1, "places" -> 1, "youtube" -> 
       1, "drinking." -> 1, "fun" -> 1, "tricks" -> 1, "april." -> 1, 
       "thinkpieces" -> 1, "attention." -> 1, "press" -> 1, "gets" -> 1, 
       "versus" -> 1, "creates" -> 1, "narrative" -> 1, "withstand" -> 1, 
       "dissonance" -> 1, "cognitive" -> 1, "circumstances" -> 1, 
       "productive" -> 1, "children" -> 1, "expect" -> 1, "unreasonable" -> 1,
        "died" -> 1, "ill." -> 1, "florida" -> 1, "feared" -> 1, "projects" -> 
       1, "moments" -> 1, "hate" -> 1, "rewards" -> 1, "little" -> 1, 
       "earthly" -> 1, "ready" -> 1, "4" -> 1, "september." -> 1, "missed" -> 
       1, "activities" -> 1, "senior" -> 1, "well" -> 1, "anyone's" -> 1, 
       "temporary" -> 1, "york" -> 1, "appeared" -> 1, "outbreak" -> 1, 
       "fully" -> 1, "doctors" -> 1, "moment" -> 1, "specific" -> 1, 
       "protocols." -> 1, "schedule" -> 1, "starting" -> 1, "socially." -> 1, 
       "losing" -> 1, "daughter" -> 1, "minute" -> 1, "model" -> 1, "virtual" -> 
       1, "organized" -> 1, "aside" -> 1, "leaves" -> 1, "shorter" -> 1, 
       "teacher." -> 1, "homeschool" -> 1, "hire" -> 1, "hours" -> 1, 
       "possible." -> 1, "avoiding" -> 1, "prevalent" -> 1, "entitled" -> 1, 
       "self-absorbed" -> 1, "throat" -> 1, "strep" -> 1, "emerged" -> 1, 
       "fever" -> 1, "doctor" -> 1, "planned" -> 1, "wednesday" -> 1, "exist" -> 
       1, "allow" -> 1, "refusal" -> 1, "air" -> 1, "droplets" -> 1, 
       "suspensions" -> 1, "someday" -> 1, "light" -> 1, "grow" -> 1, 
       "flowers" -> 1, "tragedy" -> 1, "innocent" -> 1, "taken" -> 1, 
       "casualties" -> 1, "recent" -> 1, "seat" -> 1, "row" -> 1, "front" -> 
       1, "midst" -> 1, "seriously." -> 1, "frustrating" -> 1, "frequently" -> 
       1, "hands" -> 1, "wash" -> 1, "responsible" -> 1, "cancel" -> 1, 
       "kids." -> 1, "stressing" -> 1, "negative" -> 1, "overthinking" -> 1, 
       "finals" -> 1, "midterm" -> 1, "feeling" -> 1, "products" -> 1, 
       "wanted" -> 1, "stores" -> 1, "supermarkets" -> 1, "exposed" -> 1, 
       "shutdown." -> 1, "santa" -> 1, "everyday." -> 1, "brings" -> 1, 
       "santa." -> 1, "realization" -> 1, "indirect" -> 1, "beyond." -> 1, 
       "carry" -> 1, "formed" -> 1, "madness" -> 1, "doctors." -> 1, "nurses" -> 
       1, "pharmacists" -> 1, "healthcare" -> 1, "hard." -> 1, "details" -> 1,
        "focusing" -> 1, "ease" -> 1, "helped" -> 1, "space" -> 1, 
       "ridership." -> 1, "gobus" -> 1, "application" -> 1, "submitting" -> 1,
        "ocd" -> 1, "gad" -> 1, "diagnosis" -> 1, "sunset." -> 1, "park" -> 1,
        "central" -> 1, "daily" -> 1, "quarantine" -> 1, "implication" -> 1, 
       "cvs" -> 1, "jumped" -> 1, "immediately" -> 1, "minds" -> 1, "world." -> 
       1, "tomorrow" -> 1, "darken." -> 1, "begin" -> 1, "remarking" -> 1, 
       "warped." -> 1, "jerk." -> 1, "ya" -> 1, "protecting" -> 1, "hell" -> 
       1, "mask." -> 1, "9/11" -> 1, "looks" -> 1, "occurrence" -> 1, 
       "common" -> 1, "return" -> 1, "swivel" -> 1, "jog" -> 1, "headphones" -> 
       1, "rethink" -> 1, "boroughs" -> 1, "lately" -> 1, "happening" -> 1, 
       "shootings" -> 1, "exercise" -> 1, "bright" -> 1, "secure" -> 1, 
       "progress" -> 1, "rapidly" -> 1, "affiliations" -> 1, "situations" -> 
       1, "19" -> 1, "brutality" -> 1, "police" -> 1, "unfortunately" -> 1, 
       "suck" -> 1, "headache." -> 1, "abnormal" -> 1, "normalize" -> 1, 
       "balloons" -> 1, "photo" -> 1, "hear" -> 1, "bustle" -> 1, "hustle" -> 
       1, "noise" -> 1, "dread" -> 1, "facetime" -> 1, "possibility" -> 1, 
       "fine" -> 1, "contract" -> 1, "education." -> 1, "zoom" -> 1, 
       "participation" -> 1, "aspect" -> 1, "activity" -> 1, "health." -> 1, 
       "significantly" -> 1, "coposcopy" -> 1, "examination" -> 1, "doctor's" -> 
       1, "reschedule" -> 1, "wait" -> 1, "notable" -> 1, "better." -> 1, 
       "cosmic" -> 1], "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[96.00000000000001], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 1450], "Meta" -> 
     Association["ID" -> 169578420605120], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[96.00000000000001], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 1450], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     1450, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["think", 
                  Style[
                  "think", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["think"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["think"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["175"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["think"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["thinking", 
                  Style[
                  "thinking", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["thinking"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thinking"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thinking"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["people", 
                  Style[
                  "people", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["people"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["people"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["people"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["just", 
                  Style[
                  "just", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["just"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["just"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["just"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["time", 
                  Style[
                  "time", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["time"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["time"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pandemic", 
                  Style[
                  "pandemic", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["pandemic"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pandemic"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pandemic"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["really", 
                  Style[
                  "really", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["really"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["really"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["really"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["like", 
                  Style[
                  "like", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["like"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["like"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["like"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["week", 
                  Style[
                  "week", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["week"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["week"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["week"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["going", 
                  Style[
                  "going", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["going"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["going"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["going"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["thinks", 
                  Style[
                  "thinks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["thinks"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thinks"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thinks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["things", 
                  Style[
                  "things", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["things"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["things"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["things"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["lot", 
                  Style[
                  "lot", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["lot"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["lot"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["lot"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["life", 
                  Style[
                  "life", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["life"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["life"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["life"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["covid", 
                  Style[
                  "covid", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["covid"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["covid"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["covid"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["care", 
                  Style[
                  "care", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["care"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["care"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["care"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["feel", 
                  Style[
                  "feel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["feel"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["feel"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["feel"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["way", 
                  Style[
                  "way", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["way"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["way"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["way"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CloseCurlyQuote]s", 
                  Style[
                  "\[CloseCurlyQuote]s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["\[CloseCurlyQuote]s"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CloseCurlyQuote]s"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CloseCurlyQuote]s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["day", 
                  Style[
                  "day", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["day"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["day"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1450, 1], {1, 1450 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1450, 1], {1, 1450 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1450, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    1450, FontColor -> GrayLevel[0], FontWeight -> "Medium"]},
                     BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1450, 1], {1, 1450 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1450, 1], {1, 1450 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{173., {210.85052490234375`, 215.14947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{173., {210.85052490234375`, 215.14947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8243731304487553`*^9, 3.824373151611413*^9}},
 CellLabel->"Out[61]=",ExpressionUUID->"fff534a0-9664-4854-a45e-07e8d184bd98"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{626, 725},
WindowMargins->{{-1216, Automatic}, {Automatic, -649}},
Magnification:>0.75 Inherited,
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9ea4cce2-3012-4f20-8989-aaf1885ac5f5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 183, 3, 120, "Title",ExpressionUUID->"e6992e91-61ac-4548-98e9-ce5dfbb43626"],
Cell[CellGroupData[{
Cell[788, 29, 158, 3, 50, "Section",ExpressionUUID->"bd317b5c-bec8-4b14-9612-31b7504b4d8b"],
Cell[949, 34, 394, 9, 86, "Input",ExpressionUUID->"ada129a1-cf61-4ebd-ab18-ffe4cd0fc49f"],
Cell[1346, 45, 255, 5, 22, "Input",ExpressionUUID->"2ae247eb-52ee-401a-9625-18f7f9504c19"],
Cell[1604, 52, 298, 6, 22, "Input",ExpressionUUID->"504582f7-f8c3-453c-a1a7-f75169b274d1"],
Cell[1905, 60, 306, 6, 22, "Input",ExpressionUUID->"0beda5d4-7a16-43a6-8289-0916fbcb0d59"],
Cell[CellGroupData[{
Cell[2236, 70, 200, 3, 22, "Input",ExpressionUUID->"e18798d3-33eb-4630-90bf-195c41947b57"],
Cell[2439, 75, 177, 2, 25, "Output",ExpressionUUID->"160c5e1c-9b1d-4507-805a-22a1f424e16f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2653, 82, 205, 3, 22, "Input",ExpressionUUID->"bd555783-8381-4a20-891e-83eb3486b629"],
Cell[2861, 87, 175, 2, 25, "Output",ExpressionUUID->"71a98f74-89b3-487d-9729-8856a2b7a651"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3073, 94, 207, 3, 22, "Input",ExpressionUUID->"ed5c6968-eacc-4764-b1c9-794a9be594c7"],
Cell[3283, 99, 201, 3, 25, "Output",ExpressionUUID->"98af2a80-5b0a-4e92-9602-9d5d71dbd799"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3533, 108, 162, 3, 50, "Section",ExpressionUUID->"cb137065-1ae2-4ec2-9315-c38af3da25fa"],
Cell[CellGroupData[{
Cell[3720, 115, 208, 3, 22, "Input",ExpressionUUID->"702f6aa9-1cb2-4538-a8b6-9093d84542ca"],
Cell[3931, 120, 175, 2, 25, "Output",ExpressionUUID->"5a58e3c4-3ea9-4d35-ad0b-878eb54e3eca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4143, 127, 206, 3, 22, "Input",ExpressionUUID->"90599ba3-3a0d-42d5-b5c1-1c86d35e5750"],
Cell[4352, 132, 10897, 262, 183, "Output",ExpressionUUID->"2f68e749-3788-4ed0-bd34-91fbb741185b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15286, 399, 244, 4, 22, "Input",ExpressionUUID->"f8682ff0-e099-417a-b949-41d376a1d306"],
Cell[15533, 405, 10923, 262, 183, "Output",ExpressionUUID->"d4fe3cc2-6152-423a-b01a-5db34913f5c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26493, 672, 272, 5, 22, "Input",ExpressionUUID->"d7f9ac9f-5a48-4390-9059-e70ce45d993c"],
Cell[26768, 679, 78741, 1433, 435, "Output",ExpressionUUID->"f03a098f-f1db-4d27-a879-726e3f066bf2"]
}, Open  ]],
Cell[105524, 2115, 301, 5, 65, "Subsubsection",ExpressionUUID->"a07197f5-be98-4ce5-a590-6b974758eb23"],
Cell[CellGroupData[{
Cell[105850, 2124, 165, 3, 27, "Subsubsection",ExpressionUUID->"76910e5a-6dfe-41d6-85ff-43c1fb72e577"],
Cell[CellGroupData[{
Cell[106040, 2131, 302, 6, 22, "Input",ExpressionUUID->"07e2bbe4-a6f8-4f74-962b-0c08e7a8e09a"],
Cell[106345, 2139, 70574, 1281, 448, "Output",ExpressionUUID->"ad5bdb3c-04d5-4fd8-9beb-d05edb2ac7ee"]
}, Open  ]]
}, Open  ]],
Cell[176946, 3424, 325, 5, 46, "Subsubsection",ExpressionUUID->"e8ae8d24-5d43-4506-ade7-0a3ab3303318"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177308, 3434, 163, 3, 51, "Section",ExpressionUUID->"094f72c3-e20a-4d58-b22a-a73a6df08eea"],
Cell[177474, 3439, 308, 6, 24, "Input",ExpressionUUID->"26d72095-c0be-4819-91dd-4815609db227"],
Cell[177785, 3447, 298, 6, 24, "Input",ExpressionUUID->"0829c54d-97a2-4b07-964e-c5963463c851"],
Cell[178086, 3455, 293, 6, 24, "Input",ExpressionUUID->"d1bfe5a1-47b7-4c19-ae0c-16597e3ab3a4"],
Cell[CellGroupData[{
Cell[178404, 3465, 848, 22, 57, "Input",ExpressionUUID->"0c3ee63a-736b-4e50-af08-9d1c085229f2"],
Cell[179255, 3489, 423644, 6797, 893, "Output",ExpressionUUID->"775da208-5b3e-4e36-9d0b-356a0379dd21"]
}, Open  ]],
Cell[602914, 10289, 292, 5, 46, "Subsubsection",ExpressionUUID->"d4fa182e-098e-43f7-896e-ff2dcd7e1985"]
}, Open  ]],
Cell[CellGroupData[{
Cell[603243, 10299, 175, 3, 51, "Section",ExpressionUUID->"53fe858c-be5e-4e87-84c7-04fdedb19404"],
Cell[CellGroupData[{
Cell[603443, 10306, 231, 4, 34, "Subsubsection",ExpressionUUID->"b456a334-ebbd-4937-89c7-b30ce2333f69"],
Cell[603677, 10312, 163, 3, 27, "Text",ExpressionUUID->"e34dca7c-f94f-4c3b-9db2-de00743f90be"],
Cell[CellGroupData[{
Cell[603865, 10319, 293, 6, 24, "Input",ExpressionUUID->"04a946d2-e26b-448d-97f0-ae91f82d8a99"],
Cell[604161, 10327, 370, 7, 27, "Output",ExpressionUUID->"4f0684d3-fd85-4467-b9d4-6a0840056817"]
}, Open  ]],
Cell[604546, 10337, 202, 3, 27, "Text",ExpressionUUID->"ac7f15ec-5483-4950-8cef-021ad9c853fd"],
Cell[CellGroupData[{
Cell[604773, 10344, 242, 4, 24, "Input",ExpressionUUID->"381ac10f-3076-49cd-9193-3fbc6e5027dd"],
Cell[605018, 10350, 499, 13, 27, "Output",ExpressionUUID->"a2e38fad-b491-4e68-8a62-9a7d31b1297e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[605554, 10368, 244, 4, 24, "Input",ExpressionUUID->"774d7e1f-9e5a-48c1-880f-f3869e2d2fc4"],
Cell[605801, 10374, 490, 13, 27, "Output",ExpressionUUID->"66f6ef05-83c0-44a8-86d5-a164cfc853a5"]
}, Open  ]],
Cell[606306, 10390, 212, 4, 27, "Text",ExpressionUUID->"4079f6de-b51e-489d-955e-11575a1bafa0"],
Cell[CellGroupData[{
Cell[606543, 10398, 252, 4, 24, "Input",ExpressionUUID->"90402add-9247-45b4-be40-1b8da8f8cf73"],
Cell[606798, 10404, 912, 25, 44, "Output",ExpressionUUID->"a02d53c4-9f4f-4e96-89b3-e74a7bf3eebd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607747, 10434, 254, 4, 24, "Input",ExpressionUUID->"df425e92-e30c-4ada-8548-ac475408c0a9"],
Cell[608004, 10440, 594, 16, 27, "Output",ExpressionUUID->"7505ba7e-6d46-42bf-a310-0c58a773a448"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[608647, 10462, 224, 4, 34, "Subsubsection",ExpressionUUID->"219c83fd-d2de-4a2a-ae2b-dea89c21a08a"],
Cell[CellGroupData[{
Cell[608896, 10470, 285, 5, 24, "Input",ExpressionUUID->"d4fe88fc-9361-49ac-9924-af783c4dc175"],
Cell[609184, 10477, 11267, 281, 147, "Output",ExpressionUUID->"d362157c-32ba-42cb-a085-f2ec6a549e91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[620488, 10763, 214, 3, 24, "Input",ExpressionUUID->"dc52a863-7d09-4477-8c6d-187aca78940b"],
Cell[620705, 10768, 11993, 316, 163, "Output",ExpressionUUID->"7a292073-0ca6-4121-8135-f83dca83c641"]
}, Open  ]],
Cell[CellGroupData[{
Cell[632735, 11089, 366, 8, 24, "Input",ExpressionUUID->"b058eea0-d0b7-41fb-8a55-5c44d6af6288"],
Cell[633104, 11099, 12554, 333, 163, "Output",ExpressionUUID->"4d4dcc95-9fed-4bd4-8dfc-545f487fcc82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645695, 11437, 354, 8, 24, "Input",ExpressionUUID->"ea20525b-125c-44ae-859b-d4e5f9d331b3"],
Cell[646052, 11447, 10559, 256, 147, "Output",ExpressionUUID->"81242436-bf4b-47a9-bfc5-33209f62139d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[656648, 11708, 462, 11, 24, "Input",ExpressionUUID->"3f22f088-8866-4972-b429-f360771dc86f"],
Cell[657113, 11721, 11596, 293, 147, "Output",ExpressionUUID->"544f498a-d16d-4629-8b0d-41ac4f2446aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[668746, 12019, 212, 3, 24, "Input",ExpressionUUID->"f366ac4c-2c12-4afb-971d-15d3bb8f9243"],
Cell[668961, 12024, 68307, 1281, 448, "Output",ExpressionUUID->"8b5672dd-b9ea-440e-8f85-4322ae4c81fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[737305, 13310, 310, 6, 25, "Input",ExpressionUUID->"a28e6c02-7051-4281-9313-bb7899d66cf2"],
Cell[737618, 13318, 4356, 98, 172, "Output",ExpressionUUID->"6473b80e-1e8d-4a28-b4dc-b82522cf52a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[742011, 13421, 310, 6, 25, "Input",ExpressionUUID->"590f6916-c82d-44dd-b16a-a018465be7ae"],
Cell[742324, 13429, 9211, 209, 380, "Output",ExpressionUUID->"4e6df891-c1a5-48f4-a2e3-89b6aadc8328"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[751584, 13644, 242, 6, 34, "Subsubsection",ExpressionUUID->"e8b6e0eb-cfe7-4762-ba4a-1a4537d6d84f"],
Cell[751829, 13652, 852, 21, 57, "Input",ExpressionUUID->"f8711d0b-4006-41a9-bd67-8b87c69f7044"],
Cell[CellGroupData[{
Cell[752706, 13677, 256, 4, 24, "Input",ExpressionUUID->"0062e7b1-dcb7-4fad-b21e-dc8c1403a5f6"],
Cell[752965, 13683, 67280, 1304, 442, "Output",ExpressionUUID->"6f45c569-d155-4947-8d40-e939df77333b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[820294, 14993, 282, 8, 34, "Subsubsection",ExpressionUUID->"5bd242fc-05ab-4eac-a392-283f95fa1cb3"],
Cell[820579, 15003, 851, 21, 57, "Input",ExpressionUUID->"1056f255-709f-4bcc-9842-bec394fd54a7"],
Cell[CellGroupData[{
Cell[821455, 15028, 258, 4, 24, "Input",ExpressionUUID->"d4555bd6-ebdd-4dca-8a4b-05e40dfe9dc8"],
Cell[821716, 15034, 66279, 1289, 442, "Output",ExpressionUUID->"88e81de7-f416-4a05-8f5c-3077fea4e60b"]
}, Open  ]]
}, Open  ]],
Cell[888022, 16327, 380, 6, 66, "Subsubsection",ExpressionUUID->"34d2f541-cba5-4f00-a218-4744d7a9dc87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[888439, 16338, 184, 3, 51, "Section",ExpressionUUID->"e32c96fd-d13a-44d5-8bcc-1924edb2aa0c"],
Cell[888626, 16343, 371, 8, 24, "Input",ExpressionUUID->"46f2da24-0add-4be0-b375-ed26476f0f4f"],
Cell[CellGroupData[{
Cell[889022, 16355, 511, 12, 57, "Input",ExpressionUUID->"f9b8119a-49a0-4a48-824f-5b29749b3843"],
Cell[889536, 16369, 92284, 1645, 442, "Output",ExpressionUUID->"30429818-f112-446d-8e4b-2f2374a8e8a1"]
}, Open  ]],
Cell[981835, 18017, 591, 14, 57, "Input",ExpressionUUID->"13f31a87-1a52-4e8a-a0f5-d5e6057787e6"],
Cell[CellGroupData[{
Cell[982451, 18035, 258, 4, 24, "Input",ExpressionUUID->"fd163ad0-221d-4025-af20-afd8d86f6c5d"],
Cell[982712, 18041, 109892, 1871, 442, "Output",ExpressionUUID->"acfdbf97-7cf0-4f39-869b-eeff825222d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1092641, 19917, 411, 6, 86, "Subsubsection",ExpressionUUID->"1ca644ab-8edb-4659-bafc-d076d16dbbb8"],
Cell[CellGroupData[{
Cell[1093077, 19927, 311, 5, 24, "Input",ExpressionUUID->"a2137f39-7d20-463b-b971-7cd50b45aeaa"],
Cell[1093391, 19934, 101095, 1755, 442, "Output",ExpressionUUID->"fff534a0-9664-4854-a45e-07e8d184bd98"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

